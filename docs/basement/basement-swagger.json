{
  "info": {
    "title": "Basement Launcher API Documentation",
    "description": "Welcome to the Basement.fun Launcher API documentation! This guide will help you integrate your game with our platform using B3's Launcher API.\n\nSee more documentation at [https://docs.b3.fun](https://docs.b3.fun)\n\n## **Authorization**\n\nTo call the APIs, there are two steps of authorization. The launcherJwt (A JSON-Web-Token that links to the specific user's session with the game (passed in the request body), and the client secret (passed as Authorization header)\n\n##### Obtaining a Launcher JWT:\n\n1. Embedded games in launcher, or external web games: the launcher loads the link of the game with an additional query parameter which contains the token.\n2. External non-web games (Telegram, desktop, etc.): to get a JWT and maintain the session, you must manually create a session and call the heartbeat API to keep it alive.\n\n## Session Management\n\nFor external games, use the createUnverifiedChannel and verifyUnverifiedChannel flow, then maintain the session with channelHeartbeat every 3 minutes.\n\n## Payload Verification\n\nUse the \"launcherSignatureVerification\" feature flag with MD5 signatures to prevent client-side request forgery.",
    "version": "1.0.0"
  },
  "include": ["launcher"],
  "schemes": ["http", "https"],
  "paths": {
    "/launcher/sendNotification": {
      "post": {
        "summary": "Send Notification",
        "description": "Send a notification to the user",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Notification sent successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/getUserScores": {
      "post": {
        "summary": "Get User Scores",
        "description": "Get user scores with optional filtering",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetScoresRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "User scores retrieved successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/setUserScore": {
      "post": {
        "summary": "Set User Score",
        "description": "Set or update a user's score",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Score set successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/setState": {
      "post": {
        "summary": "Set State",
        "description": "Set or update user state data",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetStateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "State set successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/getStates": {
      "post": {
        "summary": "Get States",
        "description": "Get user state data with optional filtering",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetStatesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "States retrieved successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/sendCustomActivity": {
      "post": {
        "summary": "Send Custom Activity",
        "description": "Send a custom activity event",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendCustomActivityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Custom activity sent successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/triggerRulesEngine": {
      "post": {
        "summary": "Trigger Rules Engine",
        "description": "Trigger a rules engine event",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerRulesEngineRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Rules engine triggered successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/createUnverifiedChannel": {
      "post": {
        "summary": "Create Unverified Channel",
        "description": "Create an unverified channel for external games",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUnverifiedChannelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Unverified channel created successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/verifyUnverifiedChannel": {
      "post": {
        "summary": "Verify Unverified Channel",
        "description": "Verify an unverified channel with wallet signature",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyUnverifiedChannelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Channel verified successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/channelHeartbeat": {
      "post": {
        "summary": "Channel Heartbeat",
        "description": "Send heartbeat to keep session alive",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LauncherJwt"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Heartbeat sent successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/createMessageChannel": {
      "post": {
        "summary": "Create Message Channel",
        "description": "Create a new message channel",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageChannelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Message channel created successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/getChannelMessages": {
      "post": {
        "summary": "Get Channel Messages",
        "description": "Get messages from a channel",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetChannelMessagesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Channel messages retrieved successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/sendChannelMessage": {
      "post": {
        "summary": "Send Channel Message",
        "description": "Send a message to a channel",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendChannelMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Message sent successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/editChannelMessage": {
      "post": {
        "summary": "Edit Channel Message",
        "description": "Edit a channel message",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditChannelMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Message edited successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/unsendChannelMessage": {
      "post": {
        "summary": "Unsend Channel Message",
        "description": "Unsend a channel message",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnsendChannelMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Message unsent successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/getTokenBalance": {
      "post": {
        "summary": "Get Token Balance",
        "description": "Get token balances for the user",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenBalanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Token balances retrieved successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    },
    "/launcher/trackGameSessions": {
      "post": {
        "summary": "Track Game Sessions",
        "description": "Track game session data",
        "tags": ["launcher"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackGameSessionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Game session tracked successfully"},
          "401": {"description": "not authenticated"},
          "500": {"description": "general error"}
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LauncherJwt": {
        "type": "object",
        "required": ["launcherJwt"],
        "properties": {
          "launcherJwt": {"type": "string", "description": "JWT token for launcher authentication"}
        }
      },
      "WalletAddress": {
        "type": "string",
        "pattern": "^0x[a-fA-F0-9]{40}$",
        "description": "Ethereum wallet address"
      },
      "ObjectId": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{24}$",
        "description": "MongoDB ObjectId"
      },
      "UUID": {
        "type": "string",
        "format": "uuid",
        "description": "UUID v4 string"
      },
      "PaginationQuery": {
        "type": "object",
        "properties": {
          "$limit": {"type": "integer", "minimum": 1, "maximum": 100},
          "$skip": {"type": "integer", "minimum": 0},
          "$sort": {"type": "object"}
        }
      },
      "SendNotificationRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["type", "message"],
            "properties": {
              "type": {"type": "string"},
              "message": {"type": "string"}
            }
          }
        ]
      },
      "GetScoresRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {"$ref": "#/components/schemas/PaginationQuery"},
          {
            "type": "object",
            "properties": {
              "nonce": {"type": "string"}
            }
          }
        ]
      },
      "SetScoreRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["score", "nonce", "sessionId"],
            "properties": {
              "score": {"type": "number"},
              "nonce": {"type": "string"},
              "sessionId": {"type": "string"}
            }
          }
        ]
      },
      "SetStateRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["state", "label"],
            "properties": {
              "state": {"type": "string", "maxLength": 1048576},
              "label": {"type": "string", "maxLength": 64}
            }
          }
        ]
      },
      "GetStatesRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {"$ref": "#/components/schemas/PaginationQuery"},
          {
            "type": "object",
            "properties": {
              "label": {"type": "string"}
            }
          }
        ]
      },
      "SendCustomActivityRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["label", "eventId"],
            "properties": {
              "label": {"type": "string"},
              "eventId": {"type": "string"}
            }
          }
        ]
      },
      "TriggerRulesEngineRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["trigger"],
            "properties": {
              "trigger": {"type": "string"},
              "nonce": {"type": "string"},
              "value": {"oneOf": [{"type": "string"}, {"type": "number"}]},
              "otherWallet": {"$ref": "#/components/schemas/WalletAddress"},
              "walletToTip": {"$ref": "#/components/schemas/WalletAddress"},
              "amountEth": {"type": "string"},
              "chainId": {"type": "integer"},
              "profileAddress": {"$ref": "#/components/schemas/WalletAddress"},
              "interactionId": {"$ref": "#/components/schemas/ObjectId"},
              "mintNftlayout": {"type": "string", "enum": ["default", "compact"]},
              "contractAddress": {"$ref": "#/components/schemas/WalletAddress"},
              "sessionId": {"type": "string"}
            }
          }
        ]
      },
      "CreateUnverifiedChannelRequest": {
        "type": "object",
        "required": ["wallet"],
        "properties": {
          "wallet": {"$ref": "#/components/schemas/WalletAddress"}
        }
      },
      "VerifyUnverifiedChannelRequest": {
        "type": "object",
        "required": ["channelId"],
        "properties": {
          "channelId": {"$ref": "#/components/schemas/ObjectId"},
          "signature": {"type": "string"},
          "chainId": {"type": "integer"}
        }
      },
      "CreateMessageChannelRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["otherParticipants"],
            "properties": {
              "otherParticipants": {
                "type": "array",
                "items": {"$ref": "#/components/schemas/WalletAddress"}
              },
              "channelName": {"type": "string"}
            }
          }
        ]
      },
      "GetChannelMessagesRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {"$ref": "#/components/schemas/PaginationQuery"},
          {
            "type": "object",
            "required": ["channelId"],
            "properties": {
              "channelId": {"$ref": "#/components/schemas/ObjectId"}
            }
          }
        ]
      },
      "SendChannelMessageRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["channelId", "content"],
            "properties": {
              "channelId": {"$ref": "#/components/schemas/ObjectId"},
              "content": {"type": "string"}
            }
          }
        ]
      },
      "EditChannelMessageRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["messageId", "newContent"],
            "properties": {
              "messageId": {"$ref": "#/components/schemas/ObjectId"},
              "newContent": {"type": "string"}
            }
          }
        ]
      },
      "UnsendChannelMessageRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["messageId"],
            "properties": {
              "messageId": {"$ref": "#/components/schemas/ObjectId"}
            }
          }
        ]
      },
      "GetTokenBalanceRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["tokens"],
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["chainId", "contractAddress", "type"],
                  "properties": {
                    "chainId": {"type": "integer"},
                    "contractAddress": {"$ref": "#/components/schemas/WalletAddress"},
                    "type": {"type": "string", "enum": ["erc20", "erc721", "erc1155"]}
                  }
                }
              }
            }
          }
        ]
      },
      "TrackGameSessionsRequest": {
        "allOf": [
          {"$ref": "#/components/schemas/LauncherJwt"},
          {
            "type": "object",
            "required": ["sessionId", "state"],
            "properties": {
              "sessionId": {"$ref": "#/components/schemas/UUID"},
              "state": {"type": "string", "maxLength": 1048576},
              "endTime": {"type": "number"}
            }
          }
        ]
      }
    }
  },
  "openapi": "3.0.3",
  "tags": [
    {
      "name": "launcher",
      "description": "Launcher API endpoints for game integration"
    }
  ]
}