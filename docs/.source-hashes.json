[
  {
    "sourceFile": "quickstart.mdx",
    "sourceHash": "CiMjIyBTdGVwIDE6IEluc3RhbGwgdGhlIEIzIFNESwo8U3RlcHM+CiAgPFN0ZXAgdGl0bGU9Ikluc3RhbGwgdGhlIFNESyBwYWNrYWdlIj4KICAgIENob29zZSB5b3VyIHByZWZlcnJlZCBwYWNrYWdlIG1hbmFnZXIgdG8gaW5zdGFsbCB0aGUgQjMgU0RLOgoKICAgIDxDb2RlR3JvdXA+CiAgICBgYGBiYXNoIG5wbQogICAgbnBtIGluc3RhbGwgQGIzZG90ZnVuL3NkawogICAgYGBgCiAgICBgYGBiYXNoIHBucG0KICAgIHBucG0gYWRkIEBiM2RvdGZ1bi9zZGsKICAgIGBgYAogICAgYGBgYmFzaCB5YXJuCiAgICB5YXJuIGFkZCBAYjNkb3RmdW4vc2RrCiAgICBgYGAKICAgIDwvQ29kZUdyb3VwPgoKICAgIDxUaXA+VGhlIEIzIFNESyBpbmNsdWRlcyBUeXBlU2NyaXB0IGRlZmluaXRpb25zIG91dCBvZiB0aGUgYm94ITwvVGlwPgogIDwvU3RlcD4KCiAgPFN0ZXAgdGl0bGU9IkltcG9ydCBDU1Mgc3R5bGVzIj4KICAgIEltcG9ydCB0aGUgZGVmYXVsdCBzdHlsZXMgaW4geW91ciBhcHBsaWNhdGlvbjoKCiAgICBgYGB0eXBlc2NyaXB0CiAgICBpbXBvcnQgIkBiM2RvdGZ1bi9zZGsvaW5kZXguY3NzIjsKICAgIGBgYAogIDwvU3RlcD4KPC9TdGVwcz4KCiMjIyBTdGVwIDI6IEFkZCBCM1Byb3ZpZGVyCldyYXAgdGhlIEIzUHJvdmlkZXIgYXJvdW5kIHlvdXIgYXBwbGljYXRpb24ncyByb290OgoKYGBgdHN4CmltcG9ydCB7IEIzUHJvdmlkZXIsIFNpZ25JbldpdGhCMyB9IGZyb20gIkBiM2RvdGZ1bi9zZGsvZ2xvYmFsLWFjY291bnQvcmVhY3QiOwoKZnVuY3Rpb24gQXBwKCkgewogIHJldHVybiAoCiAgICA8QjNQcm92aWRlciBlbnZpcm9ubWVudD0icHJvZHVjdGlvbiI+CiAgICAgIHtjaGlsZHJlbn0KICAgIDwvQjNQcm92aWRlcj4KICApOwp9CmBgYAoKCiMjIyBTdGVwIDM6IFVzZSB0aGUgQjMgU0RLCjxBY2NvcmRpb25Hcm91cD4KIDxBY2NvcmRpb24gaWNvbj0ic3dhcCIgdGl0bGU9Ikluc3RhbnQgQWNjb3VudHMiPgogICAgRW5hYmxlIGdsb2JhbCBhY2NvdW50cyBhdXRoZW50aWNhdGlvbiB3aXRoIEIzOgoKICAgIGBgYHRzeAogICAgaW1wb3J0IHsgU2lnbkluV2l0aEIzIH0gZnJvbSAiQGIzZG90ZnVuL3Nkay9nbG9iYWwtYWNjb3VudC9yZWFjdCI7CgogICAgZnVuY3Rpb24gQXBwKCkgewogICAgICByZXR1cm4gKAogICAgICAgIDxCM1Byb3ZpZGVyIGVudmlyb25tZW50PSJwcm9kdWN0aW9uIj4KICAgICAgICAgIDxTaWduSW5XaXRoQjMKICAgICAgICAgICAgcHJvdmlkZXI9e3sgc3RyYXRlZ3k6ICJnb29nbGUiIH19CiAgICAgICAgICAgIHBhcnRuZXJJZD0ieW91ci1wYXJ0bmVyLWlkIgogICAgICAgICAgICBvbkxvZ2luU3VjY2Vzcz17KGdsb2JhbEFjY291bnQpID0+IHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiQXV0aGVudGljYXRlZDoiLCBnbG9iYWxBY2NvdW50KTsKICAgICAgICAgICAgfX0KICAgICAgICAgIC8+CiAgICAgICAgPC9CM1Byb3ZpZGVyPgogICAgICApOwogICAgfQogICAgYGBgCiAgPC9BY2NvcmRpb24+CiAgPEFjY29yZGlvbiBpY29uPSJzd2FwIiB0aXRsZT0iQWNjZXNzIExpcXVpZGl0eSI+CiAgICBFbmFibGUgY3Jvc3MtY2hhaW4gc3dhcHMgJiBjdXN0b20gaW50ZXJhY3Rpb25zIHdpdGggQW55U3BlbmQ6CgogICAgYGBgdHN4CiAgICBpbXBvcnQgeyBBbnlTcGVuZCB9IGZyb20gIkBiM2RvdGZ1bi9zZGsvYW55c3BlbmQvcmVhY3QiOwoKICAgIGZ1bmN0aW9uIFN3YXBQYWdlKCkgewogICAgICByZXR1cm4gPEFueVNwZW5kIG1vZGU9InBhZ2UiIC8+OwogICAgfQogICAgYGBgCiAgPC9BY2NvcmRpb24+CjwvQWNjb3JkaW9uR3JvdXA+CgojIyMgU3RlcCA0OiBFeHBsb3JlIHRoZSBFY29zeXN0ZW0KCjxDYXJkIHRpdGxlPSJEaXNjb3ZlciBCMyBFY29zeXN0ZW0iIGljb249Imdsb2JlIiBocmVmPSIvZWNvc3lzdGVtL2ludHJvZHVjdGlvbiI+CiAgTGVhcm4gYWJvdXQgdGhlIGNvbXBsZXRlIEIzIGVjb3N5c3RlbSwgdG9vbHMsIGFuZCByZXNvdXJjZXMgYXZhaWxhYmxlIGZvciBidWlsZGVycy4KPC9DYXJkPgoKIyMgV2hhdCdzIE5leHQ/CgpOb3cgdGhhdCB5b3UgaGF2ZSB0aGUgQjMgU0RLIGluc3RhbGxlZCwgZXhwbG9yZSB0aGVzZSBwb3dlcmZ1bCBmZWF0dXJlczoKCjxDYXJkR3JvdXAgY29scz17Mn0+Cgo8Q2FyZCB0aXRsZT0iR2xvYmFsIEFjY291bnRzIiBpY29uPSJ1c2VyIiBocmVmPSIvc2RrL2dsb2JhbC1hY2NvdW50L2ludHJvZHVjdGlvbiI+CiAgU2VhbWxlc3MgYXV0aGVudGljYXRpb24gYW5kIHVzZXIgbWFuYWdlbWVudCBhY3Jvc3MgdGhlIEIzIGVjb3N5c3RlbS4KPC9DYXJkPgoKPENhcmQgdGl0bGU9IkRhdGEgQVBJIiBpY29uPSJ1c2VyIiBocmVmPSIvZGF0YS9hcGktcmVmZXJlbmNlL2ludHJvZHVjdGlvbiI+CiAgQWNjZXNzIGJsb2NrY2hhaW4gZGF0YSBmb3IgdG9rZW5zLCBORlRzLCBwcm9maWxlcywgYW5kIGFuYWx5dGljcy4KPC9DYXJkPgoKPENhcmQgdGl0bGU9IkFueVNwZW5kIFNESyIgaWNvbj0iYXJyb3dzLWNyb3NzIiBocmVmPSIvYW55c3BlbmQvaW50cm9kdWN0aW9uIj4KICBDcm9zcy1jaGFpbiBzd2FwcywgTkZUIG1pbnRpbmcsIGFuZCBibG9ja2NoYWluIG9wZXJhdGlvbnMuCjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJFeGFtcGxlcyAmIERlbW9zIiBpY29uPSJjb2RlIiBocmVmPSIvc2RrL2ludHJvZHVjdGlvbiI+CiAgUmVhZHktdG8tdXNlIGV4YW1wbGVzIGFuZCBpbnRlZ3JhdGlvbiBwYXR0ZXJucy4KPC9DYXJkPgoKPC9DYXJkR3JvdXA+CgojIyBQbGF0Zm9ybSBTdXBwb3J0Cgp8IEZlYXR1cmUgICAgICAgICAgIHwgUmVhY3QgV2ViIHwgUmVhY3QgTmF0aXZlIHwKfCAtLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8CnwgQW55U3BlbmQgICAgICAgICAgfCDinIUgICAgICAgICB8IOKdjCAgICAgICAgICAgIHwKfCBHbG9iYWwgQWNjb3VudHMgICB8IOKchSAgICAgICAgIHwg4pyFICAgICAgICAgICAgfAp8IEhlYWRsZXNzIFNlcnZpY2VzIHwg4pyFICAgICAgICAgfCDinIUgICAgICAgICAgICB8Cgo8Tm90ZT4KICAqKk5lZWQgaGVscD8qKiBKb2luIG91ciBbRGlzY29yZCBjb21tdW5pdHldKGh0dHBzOi8vZGlzY29yZC5nZy9iM2RvdGZ1bikgb3IgY2hlY2sgb3V0IHRoZQogIFtlY29zeXN0ZW0gaW50cm9kdWN0aW9uXSgvZWNvc3lzdGVtL2ludHJvZHVjdGlvbikgZm9yIGNvbXByZWhlbnNpdmUgcmVzb3VyY2VzLgo8L05vdGU+Cg==",
    "lastUpdated": "2025-09-02T19:36:09.957Z"
  },
  {
    "sourceFile": "index.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:44:31.964Z"
  },
  {
    "sourceFile": "ai-optimized.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:45:19.665Z"
  },
  {
    "sourceFile": "README.md",
    "sourceHash": "IyBNaW50bGlmeSBTdGFydGVyIEtpdAoKVXNlIHRoZSBzdGFydGVyIGtpdCB0byBnZXQgeW91ciBkb2NzIGRlcGxveWVkIGFuZCByZWFkeSB0byBjdXN0b21pemUuCgpDbGljayB0aGUgZ3JlZW4gKipVc2UgdGhpcyB0ZW1wbGF0ZSoqIGJ1dHRvbiBhdCB0aGUgdG9wIG9mIHRoaXMgcmVwbyB0byBjb3B5IHRoZSBNaW50bGlmeSBzdGFydGVyIGtpdC4gVGhlIHN0YXJ0ZXIga2l0IGNvbnRhaW5zIGV4YW1wbGVzIHdpdGgKCi0gR3VpZGUgcGFnZXMKLSBOYXZpZ2F0aW9uCi0gQ3VzdG9taXphdGlvbnMKLSBBUEkgcmVmZXJlbmNlIHBhZ2VzCi0gVXNlIG9mIHBvcHVsYXIgY29tcG9uZW50cwoKKipbRm9sbG93IHRoZSBmdWxsIHF1aWNrc3RhcnQgZ3VpZGVdKGh0dHBzOi8vc3RhcnRlci5taW50bGlmeS5jb20vcXVpY2tzdGFydCkqKgoKIyMgRGV2ZWxvcG1lbnQKCkluc3RhbGwgdGhlIFtNaW50bGlmeSBDTEldKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL21pbnQpIHRvIHByZXZpZXcgeW91ciBkb2N1bWVudGF0aW9uIGNoYW5nZXMgbG9jYWxseS4gVG8gaW5zdGFsbCwgdXNlIHRoZSBmb2xsb3dpbmcgY29tbWFuZDoKCmBgYApucG0gaSAtZyBtaW50CmBgYAoKUnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZCBhdCB0aGUgcm9vdCBvZiB5b3VyIGRvY3VtZW50YXRpb24sIHdoZXJlIHlvdXIgYGRvY3MuanNvbmAgaXMgbG9jYXRlZDoKCmBgYAptaW50IGRldgpgYGAKClZpZXcgeW91ciBsb2NhbCBwcmV2aWV3IGF0IGBodHRwOi8vbG9jYWxob3N0OjMwMDBgLgoKIyMgUHVibGlzaGluZyBjaGFuZ2VzCgpJbnN0YWxsIG91ciBHaXRIdWIgYXBwIGZyb20geW91ciBbZGFzaGJvYXJkXShodHRwczovL2Rhc2hib2FyZC5taW50bGlmeS5jb20vc2V0dGluZ3Mvb3JnYW5pemF0aW9uL2dpdGh1Yi1hcHApIHRvIHByb3BhZ2F0ZSBjaGFuZ2VzIGZyb20geW91ciByZXBvIHRvIHlvdXIgZGVwbG95bWVudC4gQ2hhbmdlcyBhcmUgZGVwbG95ZWQgdG8gcHJvZHVjdGlvbiBhdXRvbWF0aWNhbGx5IGFmdGVyIHB1c2hpbmcgdG8gdGhlIGRlZmF1bHQgYnJhbmNoLgoKIyMgTmVlZCBoZWxwPwoKIyMjIFRyb3VibGVzaG9vdGluZwoKLSBJZiB5b3VyIGRldiBlbnZpcm9ubWVudCBpc24ndCBydW5uaW5nOiBSdW4gYG1pbnQgdXBkYXRlYCB0byBlbnN1cmUgeW91IGhhdmUgdGhlIG1vc3QgcmVjZW50IHZlcnNpb24gb2YgdGhlIENMSS4KLSBJZiBhIHBhZ2UgbG9hZHMgYXMgYSA0MDQ6IE1ha2Ugc3VyZSB5b3UgYXJlIHJ1bm5pbmcgaW4gYSBmb2xkZXIgd2l0aCBhIHZhbGlkIGBkb2NzLmpzb25gLgoKIyMjIFJlc291cmNlcwoKLSBbTWludGxpZnkgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9taW50bGlmeS5jb20vZG9jcykKLSBbTWludGxpZnkgY29tbXVuaXR5XShodHRwczovL21pbnRsaWZ5LmNvbS9jb21tdW5pdHkpCg==",
    "lastUpdated": "2025-09-02T19:45:31.855Z"
  },
  {
    "sourceFile": "snippets/docs-config.mdx",
    "sourceHash": "ZXhwb3J0IGNvbnN0IGRvY3NDb25maWcgPSB7CiAgbmFtZTogIkIzIFNESyIsCiAgdGhlbWU6ICJtaW50IiwKICBjb2xvcnM6IHsKICAgIHByaW1hcnk6ICIjMDA3QUZGIiwKICAgIGxpZ2h0OiAiIzREQTZGRiIsCiAgICBkYXJrOiAiIzAwNTZDQyIsCiAgfSwKCm5hdmJhcjogewpsaW5rczogWwp7CmxhYmVsOiAiTGl2ZSBEZW1vIiwKaHJlZjogImh0dHBzOi8vYW55c3BlbmQuY29tIiwKfSwKewpsYWJlbDogIkIzIE1haW5uZXQiLApocmVmOiAiaHR0cHM6Ly9kb2NzLmIzLmZ1biIsCn0sCl0sCnByaW1hcnk6IHsKdHlwZTogImJ1dHRvbiIsCmxhYmVsOiAiR2V0IFN0YXJ0ZWQiLApocmVmOiAiL3F1aWNrc3RhcnQiLAp9LAp9LAoKZ2xvYmFsQW5jaG9yczogWwp7CmFuY2hvcjogIkIzIEVjb3N5c3RlbSIsCmhyZWY6ICJodHRwczovL2RvY3MuYjMuZnVuIiwKaWNvbjogImdsb2JlIiwKfSwKewphbmNob3I6ICJEaXNjb3JkIiwKaHJlZjogImh0dHBzOi8vZGlzY29yZC5nZy9iM2RvdGZ1biIsCmljb246ICJkaXNjb3JkIiwKfSwKewphbmNob3I6ICJHaXRIdWIiLApocmVmOiAiaHR0cHM6Ly9naXRodWIuY29tL2IzLWZ1bi9iMyIsCmljb246ICJnaXRodWIiLAp9LApdLAoKZm9vdGVyOiB7CnNvY2lhbHM6IHsKeDogImh0dHBzOi8veC5jb20vYjNkb3RmdW4iLApnaXRodWI6ICJodHRwczovL2dpdGh1Yi5jb20vYjMtZnVuL2IzIiwKZGlzY29yZDogImh0dHBzOi8vZGlzY29yZC5nZy9iM2RvdGZ1biIsCn0sCn0sCn07Cgo7Cg==",
    "lastUpdated": "2025-09-02T19:45:39.604Z"
  },
  {
    "sourceFile": "snippets/contact-info.mdx",
    "sourceHash": "CmV4cG9ydCBjb25zdCBTdXBwb3J0TGlua3MgPSAoKSA9PiAoCiAgPGRpdj4KICAgIDxoMz5OZWVkIEhlbHA/PC9oMz4KICAgIDx1bD4KICAgICAgPGxpPgogICAgICAgIPCfk5ogPGEgaHJlZj0iaHR0cHM6Ly9kb2NzLmIzLmZ1biI+QjMgRG9jdW1lbnRhdGlvbjwvYT4KICAgICAgPC9saT4KICAgICAgPGxpPgogICAgICAgIPCfkqwgPGEgaHJlZj0iaHR0cHM6Ly9kaXNjb3JkLmdnL2IzZG90ZnVuIj5Kb2luIG91ciBEaXNjb3JkPC9hPgogICAgICA8L2xpPgogICAgICA8bGk+CiAgICAgICAg8J+QmyA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYjMtZnVuL2IzL2lzc3VlcyI+UmVwb3J0IElzc3VlcyBvbiBHaXRIdWI8L2E+CiAgICAgIDwvbGk+CiAgICAgIDxsaT4KICAgICAgICDwn5OnIEVtYWlsIHVzIGF0IDxhIGhyZWY9Im1haWx0bzpzdXBwb3J0QGIzLmZ1biI+c3VwcG9ydEBiMy5mdW48L2E+CiAgICAgIDwvbGk+CiAgICA8L3VsPgogIDwvZGl2PgopOwoKZXhwb3J0IGNvbnN0IENvbW11bml0eVJlc291cmNlcyA9ICgpID0+ICgKICA8ZGl2PgogICAgPGgzPkNvbW11bml0eSAmIFJlc291cmNlczwvaDM+CiAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICJncmlkIiwgZ3JpZFRlbXBsYXRlQ29sdW1uczogIjFmciAxZnIiLCBnYXA6ICIxcmVtIiB9fT4KICAgICAgPGRpdj4KICAgICAgICA8aDQ+8J+OriBUcnkgSXQgTGl2ZTwvaDQ+CiAgICAgICAgPHA+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2FueXNwZW5kLmNvbSI+QW55U3BlbmQgRGVtbzwvYT4gLSBUcnkgb3VyIFNESyBpbiBhY3Rpb24KICAgICAgICA8L3A+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2PgogICAgICAgIDxoND7wn5KsIEdldCBTdXBwb3J0PC9oND4KICAgICAgICA8cD4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZGlzY29yZC5nZy9iM2RvdGZ1biI+RGlzY29yZCBDb21tdW5pdHk8L2E+IC0gSm9pbiB0aGUgY29udmVyc2F0aW9uCiAgICAgICAgPC9wPgogICAgICA8L2Rpdj4KICAgICAgPGRpdj4KICAgICAgICA8aDQ+8J+UpyBDb250cmlidXRlPC9oND4KICAgICAgICA8cD4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9iMy1mdW4vYjMiPkdpdEh1YiBSZXBvc2l0b3J5PC9hPiAtIENvbnRyaWJ1dGUgdG8gdGhlIHByb2plY3QKICAgICAgICA8L3A+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2PgogICAgICAgIDxoND7wn4yQIEVjb3N5c3RlbTwvaDQ+CiAgICAgICAgPHA+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2RvY3MuYjMuZnVuIj5CMyBEb2NzPC9hPiAtIEV4cGxvcmUgdGhlIGJyb2FkZXIgZWNvc3lzdGVtCiAgICAgICAgPC9wPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2PgopOwoKZXhwb3J0IGNvbnN0IENvbnRhY3RJbmZvID0gKHsgdHlwZSA9ICJnZW5lcmFsIiB9KSA9PiB7CiAgY29uc3QgZW1haWwgPQogICAgdHlwZSA9PT0gInN1cHBvcnQiCiAgICAgID8gInN1cHBvcnRAYjMuZnVuIgogICAgICA6IHR5cGUgPT09ICJwYXJ0bmVyc2hpcHMiCiAgICAgICAgPyAicGFydG5lcnNoaXBzQGIzLmZ1biIKICAgICAgICA6IHR5cGUgPT09ICJkZXZlbG9wZXIiCiAgICAgICAgICA/ICJkZXZlbG9wZXJzQGIzLmZ1biIKICAgICAgICAgIDogInN1cHBvcnRAYjMuZnVuIjsKCnJldHVybiAoCgo8ZGl2PgogIDxwPgogICAg8J+TpyA8YSBocmVmPXtgbWFpbHRvOiR7ZW1haWx9YH0+e2VtYWlsfTwvYT4KICA8L3A+CjwvZGl2PgopOyB9OwoKOwo=",
    "lastUpdated": "2025-09-02T19:45:53.272Z"
  },
  {
    "sourceFile": "snippets/code-examples.mdx",
    "sourceHash": "IyBDb2RlIEV4YW1wbGVzCgojIyBJbnN0YWxsYXRpb24KCmBgYGJhc2ggdGl0bGU9Ikluc3RhbGwgQjMgU0RLIiBpY29uPSJkb3dubG9hZCIKbnBtIGluc3RhbGwgQGIzZG90ZnVuL3NkawpgYGAKCiMjIEJhc2ljIFNldHVwCgpgYGB0c3ggdGl0bGU9IkltcG9ydCBTREsgQ29tcG9uZW50cyIgaWNvbj0icmVhY3QiCmltcG9ydCAiQGIzZG90ZnVuL3Nkay9pbmRleC5jc3MiOwppbXBvcnQgeyBBbnlzcGVuZFByb3ZpZGVyLCBCM1Byb3ZpZGVyIH0gZnJvbSAiQGIzZG90ZnVuL3NkayI7CmBgYAoKIyMgTkZUIFB1cmNoYXNlIENvbXBvbmVudAoKYGBgdHN4IHRpdGxlPSJORlQgQnV0dG9uIEV4YW1wbGUiIGljb249InNob3BwaW5nLWNhcnQiIGxpbmVzCmltcG9ydCB7IEFueVNwZW5kTkZUQnV0dG9uIH0gZnJvbSAiQGIzZG90ZnVuL3Nkay9hbnlzcGVuZC9yZWFjdCI7CgpmdW5jdGlvbiBORlRDYXJkKCkgewogIHJldHVybiAoCiAgICA8QW55U3BlbmRORlRCdXR0b24KICAgICAgbmZ0Q29udHJhY3Q9e3sKICAgICAgICBjaGFpbklkOiA4MzMzLAogICAgICAgIGNvbnRyYWN0QWRkcmVzczogIjB4OWMyNzVmZjE2MzQ1MTlFOUI1NDQ5ZWM3OWNkOTM5QjVGOTAwNTY0ZCIsCiAgICAgICAgcHJpY2U6ICI1MDAwMDAwMDAwMDAwMDAwMDAiLAogICAgICAgIGN1cnJlbmN5OiB7IHN5bWJvbDogIkVUSCIsIGRlY2ltYWxzOiAxOCB9LAogICAgICB9fQogICAgICByZWNpcGllbnRBZGRyZXNzPXt1c2VyQWRkcmVzc30KICAgICAgb25TdWNjZXNzPXt0eEhhc2ggPT4gc2hvd1N1Y2Nlc3ModHhIYXNoKX0KICAgIC8+CiAgKTsKfQpgYGAKCiMjIENyb3NzLUNoYWluIFN3YXAKCmBgYHRzeCB0aXRsZT0iQW55U3BlbmQgUGFnZSBNb2RlIiBpY29uPSJhcnJvd3Mtcm90YXRlIiBoaWdobGlnaHQ9ezYtOH0KaW1wb3J0IHsgQW55U3BlbmQgfSBmcm9tICJAYjNkb3RmdW4vc2RrL2FueXNwZW5kL3JlYWN0IjsKCmZ1bmN0aW9uIENyb3NzQ2hhaW5Td2FwKCkgewogIHJldHVybiA8QW55U3BlbmQgbW9kZT0icGFnZSIgcmVjaXBpZW50QWRkcmVzcz17dXNlckFkZHJlc3N9IG9uU3VjY2Vzcz17dHhIYXNoID0+IHVwZGF0ZVBvcnRmb2xpbyh0eEhhc2gpfSAvPjsKfQpgYGAKCiMjIEF1dGhlbnRpY2F0aW9uCgpgYGB0c3ggdGl0bGU9IkIzIEF1dGhlbnRpY2F0aW9uIFNldHVwIiBpY29uPSJ1c2VyLXNoaWVsZCIgZXhwYW5kYWJsZQppbXBvcnQgeyBCM1Byb3ZpZGVyLCBTaWduSW5XaXRoQjMgfSBmcm9tICJAYjNkb3RmdW4vc2RrL2dsb2JhbC1hY2NvdW50L3JlYWN0IjsKCmZ1bmN0aW9uIEFwcCgpIHsKICByZXR1cm4gKAogICAgPEIzUHJvdmlkZXIgZW52aXJvbm1lbnQ9InByb2R1Y3Rpb24iPgogICAgICA8U2lnbkluV2l0aEIzCiAgICAgICAgcHJvdmlkZXI9e3sgc3RyYXRlZ3k6ICJnb29nbGUiIH19CiAgICAgICAgcGFydG5lcklkPSJ5b3VyLXBhcnRuZXItaWQiCiAgICAgICAgb25Mb2dpblN1Y2Nlc3M9e2dsb2JhbEFjY291bnQgPT4gewogICAgICAgICAgY29uc29sZS5sb2coIkF1dGhlbnRpY2F0ZWQ6IiwgZ2xvYmFsQWNjb3VudCk7CiAgICAgICAgfX0KICAgICAgLz4KICAgIDwvQjNQcm92aWRlcj4KICApOwp9CmBgYAoKIyMgV2FsbGV0IENvbm5lY3Rpb24KCmBgYHRzeCB0aXRsZT0iQ29ubmVjdCBXYWxsZXQgdG8gQjMiIGljb249IndhbGxldCIgZm9jdXM9ezgtMTJ9CmltcG9ydCB7IHVzZUNvbm5lY3QgfSBmcm9tICJAYjNkb3RmdW4vc2RrIjsKCmZ1bmN0aW9uIFdhbGxldEJ1dHRvbigpIHsKICBjb25zdCB7IGNvbm5lY3QsIGlzQ29ubmVjdGluZyB9ID0gdXNlQ29ubmVjdCgpOwoKICBjb25zdCBoYW5kbGVDb25uZWN0ID0gYXN5bmMgKCkgPT4gewogICAgdHJ5IHsKICAgICAgYXdhaXQgY29ubmVjdCh7CiAgICAgICAgY2hhaW5JZDogODMzMywKICAgICAgICBycGNVcmw6ICJodHRwczovL21haW5uZXQtcnBjLmIzLmZ1biIsCiAgICAgIH0pOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc29sZS5lcnJvcigiQ29ubmVjdGlvbiBmYWlsZWQ6IiwgZXJyb3IpOwogICAgfQogIH07CgogIHJldHVybiAoCiAgICA8YnV0dG9uIG9uQ2xpY2s9e2hhbmRsZUNvbm5lY3R9IGRpc2FibGVkPXtpc0Nvbm5lY3Rpbmd9PgogICAgICB7aXNDb25uZWN0aW5nID8gIkNvbm5lY3RpbmcuLi4iIDogIkNvbm5lY3QgdG8gQjMifQogICAgPC9idXR0b24+CiAgKTsKfQpgYGAK",
    "lastUpdated": "2025-09-02T19:46:14.163Z"
  },
  {
    "sourceFile": "snippets/brand-components.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:46:58.638Z"
  },
  {
    "sourceFile": "redirect/sdk.mdx",
    "sourceHash": "CjxOb3RlPllvdSBhcmUgYmVpbmcgcmVkaXJlY3RlZCB0byB0aGUgQjMgU0RLIHBhZ2UuICBbQ2xpY2sgaGVyZV0oL3Nkay9pbnRyb2R1Y3Rpb24pIHRvIGNvbnRpbnVlLjwvTm90ZT4K",
    "lastUpdated": "2025-09-02T19:47:55.112Z"
  },
  {
    "sourceFile": "redirect/ecosystem.mdx",
    "sourceHash": "CjxOb3RlPllvdSBhcmUgYmVpbmcgcmVkaXJlY3RlZCB0byB0aGUgQjMgRWNvc3lzdGVtIHBhZ2UuICBbQ2xpY2sgaGVyZV0oL2Vjb3N5c3RlbS9pbnRyb2R1Y3Rpb24pIHRvIGNvbnRpbnVlLjwvTm90ZT4K",
    "lastUpdated": "2025-09-02T19:48:01.564Z"
  },
  {
    "sourceFile": "sdk/introduction.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:47:50.530Z"
  },
  {
    "sourceFile": "protocol/whitepaper.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:49:52.474Z"
  },
  {
    "sourceFile": "protocol/tokenomics.mdx",
    "sourceHash": "CiMjIyAqKk92ZXJ2aWV3KioKCi0gVG9rZW4gbmFtZTogQjMgKEJhc2UpCi0gQ2hhaW46IEJhc2UKLSBUb3RhbCBTdXBwbHk6IDEwMCwwMDAsMDAwLDAwMAotIERlY2ltYWxzOiAxOAoKIyMjIFV0aWxpdHkKClRoZSBCMyB0b2tlbiBpcyB0aGUgZW5naW5lIHBvd2VyaW5nIHRoZSBPcGVuIEdhbWluZyBlY29zeXN0ZW0sIGRlc2lnbmVkIHRvIGdyb3csIHNjYWxlIGFuZCB0cmFuc2Zvcm0gZ2FtaW5nIGJ5IGVtcG93ZXJpbmcgcGxheWVycywgZ2FtZSBkZXZlbG9wZXJzICYgaG9sZGVycy4KCioqRm9yIFBsYXllcnM6KioKCi0g8J+lqSBzdGFrZSBcJEIzIHRvIHJlY2VpdmUgZXhwb3N1cmUgdG8gZnV0dXJlIEIzIEFwcENoYWlucwotIPCfpYcgdXNlIFwkQjMgdG8gZnVuZCAmIHB1Ymxpc2ggdGhlIGdhbWVzICYgZXhwZXJpZW5jZXMgeW91IGJlbGlldmUgaW4gYW5kIGVhcm4gcmV3YXJkcwotIPCfjq8gZ2V0IGVhcmx5IGFjY2VzcyB0byBnYW1lcyBhbmQgbmV3IGZlYXR1cmVzIG9uIEJTTU5UCi0g4piR77iPIHBhcnRpY2lwYXRlIGluIGdvdmVybmFuY2UgdG8gZGlyZWN0bHkgaW1wYWN0IHRoZSBmdXR1cmUgb2YgdGhlIEIzIGVjb3N5c3RlbQoKKipGb3IgR2FtZSBEZXZlbG9wZXJzOioqCgotIPCfqpkgYXBwbHkgJiByZWNlaXZlIGZ1bmRpbmcgdG8gZGV2ZWxvcCBhbmQgc2NhbGUgeW91ciBnYW1lCi0g8J+StCBlYXJuIHJlZmVycmFsIHJld2FyZHMgYWNyb3NzIGFsbCBwbGF5ZXJzIG9uIGFueSBHYW1lY2hhaW4KLSDwn5qBIHJlY2VpdmUgZnV0dXJlIGFpcmRyb3BzIGZyb20gaW5mcmFzdHJ1Y3R1cmUgcGFydG5lcnMKCkFkZGl0aW9uYWwgdXRpbGl0aWVzIGZvciBcJEIzIHdpbGwgYmUgYW5ub3VuY2VkIGFzIHRoZXkgYmVjb21lIGF2YWlsYWJsZS4KCiMjIyBEaXN0cmlidXRpb24gYW5kIEFsbG9jYXRpb24KCjxpbWcKICBzcmM9Ii9pbWFnZXMvdG9rZW4tYWxsb2NhdGlvbi5hdmlmIgogIGFsdD0iVG9rZW4gQWxsb2NhdGlvbiIKICBjbGFzc05hbWU9InJvdW5kZWQteGwiCi8+CgotICoqQ29tbXVuaXR5ICYgRWNvc3lzdGVtKio6IFRoaXMgYWxsb2NhdGlvbiBpcyB0byB0aGUgZ3Jvd3RoIG9mIHRoZSBCMyBlY29zeXN0ZW0gLSBmb3IgZ2FtZXJzLCBieSBnYW1lcnMuIEl0IGlzIHRvIGJ1aWxkIGFuIGVjb3N5c3RlbSBiZWxvbmdpbmcgdG8gdGhvc2Ugd2hvIHBsYXkgaW4gaXQ6IGFpcmRyb3BzLCB0b3VybmFtZW50cywgcGxheXRlc3RzLCBjb21tdW5pdHktbGVkIGdyYW50cywgcmVzZWFyY2ggJiBkZXZlbG9wbWVudCwgYW5kIG1hbnkgb3RoZXJzLgotICoqRm91bmRhdGlvbioqOiBUaGlzIGFsbG9jYXRpb24gd2lsbCBzdXBwb3J0IHRoZSBQbGF5ZXIxIEZvdW5kYXRpb24gYXMgaXQgY29udHJpYnV0ZXMgdG8gQjMgYW5kIE9wZW4gR2FtaW5nJ3MgdmlzaW9uIGFuZCBhZG9wdGlvbiwgaW5jbHVkaW5nIHN0cmF0ZWdpYyBncmFudHMvcGFydG5lcnNoaXBzLCBsZWdhbCBhbmQgY29tcGxpYW5jZSBuZWVkcywgYXVkaXRzLCBhbmQgb3RoZXIgb3BlcmF0aW9uYWwgZXhwZW5zZXMuCi0gKipUZWFtICYgQWR2aXNvcnMqKjogVGhpcyBhbGxvY2F0aW9uIGlzIGZvciBjb3JlIGNvbnRyaWJ1dG9ycyBcKyAxOCBhZHZpc29ycyB3aG8gcmVwcmVzZW50IHRoZSBiZXN0IG9mIGJvdGggZ2FtaW5nIHdvcmxkcyAtIGZyb20gQUFBIHRvIHdlYjMuIEFsbCB0ZWFtICYgYWR2aXNvcnMgYXJlIHN1YmplY3QgdG8gYSA0LXllYXIgdmVzdGluZyBzY2hlZHVsZTogMS15ZWFyIDI1JSBjbGlmZiwgd2l0aCBtb250aGx5IHVubG9ja3MgdGhlcmVhZnRlci4KLSAqKkludmVzdG9ycyoqOiBUaGlzIHBvcnRpb24gb2YgQjMgYWxsb2NhdGlvbiBpcyBmb3IgaW52ZXN0b3JzIHdobyBzdXBwb3J0ZWQgQjMncyBkZXZlbG9wbWVudCwgaW5jbHVkaW5nIDEwMFwrIGFuZ2VscyB3aG8gZ2F0aGVyZWQgZnJvbSBldmVyeSBjb3JuZXIgb2YgdGhlIGluZHVzdHJ54oCUZ2FtaW5nLCB3ZWIzLCBicmFuZHMsIGluZnJhc3RydWN0dXJl4oCUdG8gYjNsaWV2ZSBpbiBhbmQgc3VwcG9ydCBCMydzIHZpc2lvbi4gQWxsIHRlYW0gJiBhZHZpc29ycyBhcmUgc3ViamVjdCB0byBhIDQteWVhciB2ZXN0aW5nIHNjaGVkdWxlOiAxLXllYXIgMjUlIGNsaWZmLCB3aXRoIG1vbnRobHkgdW5sb2NrcyB0aGVyZWFmdGVyLgoKIyMjIFRva2VuIFVubG9jayBTY2hlZHVsZQoKPGltZwogIHNyYz0iL2ltYWdlcy90b2tlbi11bmxvY2stc2NoZWR1bGUuYXZpZiIKICBhbHQ9IlRva2VuIFVubG9jayBTY2hlZHVsZSIKICBjbGFzc05hbWU9InJvdW5kZWQteGwiCi8+",
    "lastUpdated": "2025-09-02T19:50:17.990Z"
  },
  {
    "sourceFile": "protocol/testnet.mdx",
    "sourceHash": "CiMjIENoYWluIEluZm9ybWF0aW9uCgo8Q2FyZCB0aXRsZT0iQ2hhaW4gSUQiPgogIGBgYHRleHQKICAxOTkzCiAgYGBgCiAgPE5vdGU+CiAgRnVuIGZhY3Q6IDE5OTMgaXMgdGhlIHllYXIgIkRvb20iIHdhcyByZWxlYXNlZCwgd2hpY2ggcmV2b2x1dGlvbml6ZWQgdGhlIGZpcnN0LXBlcnNvbiBzaG9vdGVyIGdlbnJlLgogIDwvTm90ZT4KPC9DYXJkPgoKPENhcmQgdGl0bGU9Ik5hdGl2ZSBUb2tlbiI+CiAgKipFdGhlciAoRVRIKSoqCiAgCiAgVGhlIHNhbWUgdG9rZW4gdXNlZCBvbiBFdGhlcmV1bSBtYWlubmV0LCBidXQgZm9yIHRlc3RpbmcgcHVycG9zZXMgb25seS4KPC9DYXJkPgoKIyMjIE5ldHdvcmsgRW5kcG9pbnRzCgo8VGFicz4KPFRhYiB0aXRsZT0iSFRUUCBSUEMiPgogIGBgYHRleHQgUlBDIEVuZHBvaW50CiAgaHR0cHM6Ly90ZXN0bmV0LXJwYy5iMy5mdW4KICBgYGAKICAKICBVc2UgdGhpcyBlbmRwb2ludCBmb3Igc3RhbmRhcmQgSFRUUCByZXF1ZXN0cyB0byB0aGUgQjMgdGVzdG5ldC4KPC9UYWI+Cgo8VGFiIHRpdGxlPSJXZWJTb2NrZXQgUlBDIj4KICBgYGB0ZXh0IFdlYlNvY2tldCBFbmRwb2ludCAgCiAgd3NzOi8vdGVzdG5ldC1ycGMuYjMuZnVuCiAgYGBgCiAgCiAgVXNlIHRoaXMgZW5kcG9pbnQgZm9yIHJlYWwtdGltZSBXZWJTb2NrZXQgY29ubmVjdGlvbnMgdG8gdGhlIEIzIHRlc3RuZXQuCjwvVGFiPgo8L1RhYnM+CgojIyMgQmxvY2sgRXhwbG9yZXIKCjxDYXJkIHRpdGxlPSJCMyBFeHBsb3JlciIgaWNvbj0ibWFnbmlmeWluZy1nbGFzcyIgaHJlZj0iaHR0cHM6Ly9leHBsb3Jlci5iMy5mdW4iIGN0YT0iVmlldyBFeHBsb3JlciIgaG9yaXpvbnRhbD4KICBFeHBsb3JlIHRyYW5zYWN0aW9ucywgYmxvY2tzLCBhbmQgY29udHJhY3RzIGFjcm9zcyBCMyAoaW5jbHVkaW5nIHRlc3RuZXQpLgo8L0NhcmQ+CgojIyBRdWljayBMaW5rcwoKPENhcmRHcm91cCBjb2xzPXszfT4KICA8Q2FyZCB0aXRsZT0iVGVzdG5ldCBCcmlkZ2UiIGljb249ImJyaWRnZSIgaHJlZj0iaHR0cHM6Ly90ZXN0bmV0LWJyaWRnZS5iMy5mdW4iIGN0YT0iQnJpZGdlIEFzc2V0cyI+CiAgICBCcmlkZ2UgYXNzZXRzIHRvIEIzIHRlc3RuZXQgZm9yIHRlc3RpbmcKICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9IkZhdWNldCIgaWNvbj0iZmF1Y2V0IiBocmVmPSJodHRwczovL2ZhdWNldC5iMy5mdW4iIGN0YT0iR2V0IFRlc3QgRVRIIj4KICAgIEdldCBmcmVlIHRlc3RuZXQgRVRIIGZvciBkZXZlbG9wbWVudCBhbmQgdGVzdGluZwogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iRGV2ZWxvcGVyIFRvb2xzIiBpY29uPSJ3cmVuY2giIGhyZWY9Ii9lY29zeXN0ZW0vaW50cm9kdWN0aW9uIiBjdGE9IkV4cGxvcmUgVG9vbHMiPgogICAgRGlzY292ZXIgdG9vbHMgYW5kIGluZnJhc3RydWN0dXJlIGZvciBidWlsZGluZyBvbiBCMwogIDwvQ2FyZD4KPC9DYXJkR3JvdXA+CgojIyBBZGRpbmcgQjMgVGVzdG5ldCB0byBZb3VyIFdhbGxldAoKPFN0ZXBzPgo8U3RlcCB0aXRsZT0iT3BlbiBXYWxsZXQgU2V0dGluZ3MiPgogIE9wZW4geW91ciB3YWxsZXQgKE1ldGFNYXNrLCBDb2luYmFzZSBXYWxsZXQsIGV0Yy4pIGFuZCBuYXZpZ2F0ZSB0byBuZXR3b3JrIHNldHRpbmdzLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQWRkIEN1c3RvbSBOZXR3b3JrIj4KICBDbGljayAiQWRkIE5ldHdvcmsiIG9yICJBZGQgQ3VzdG9tIE5ldHdvcmsiIGRlcGVuZGluZyBvbiB5b3VyIHdhbGxldC4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkVudGVyIE5ldHdvcmsgRGV0YWlscyI+CiAgRmlsbCBpbiB0aGUgZm9sbG93aW5nIGluZm9ybWF0aW9uOgogIAogIC0gKipOZXR3b3JrIE5hbWUqKjogQjMgVGVzdG5ldAogIC0gKipDaGFpbiBJRCoqOiAxOTkzCiAgLSAqKlJQQyBVUkwqKjogaHR0cHM6Ly90ZXN0bmV0LXJwYy5iMy5mdW4KICAtICoqQ3VycmVuY3kgU3ltYm9sKio6IEVUSAogIC0gKipCbG9jayBFeHBsb3JlciBVUkwqKjogaHR0cHM6Ly9leHBsb3Jlci5iMy5mdW4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlNhdmUgYW5kIFN3aXRjaCI+CiAgU2F2ZSB0aGUgbmV0d29yayBjb25maWd1cmF0aW9uIGFuZCBzd2l0Y2ggdG8gQjMgVGVzdG5ldC4KICAKICA8Q2hlY2s+CiAgWW91J3JlIG5vdyBjb25uZWN0ZWQgdG8gQjMgVGVzdG5ldCEgWW91IGNhbiBzdGFydCB0ZXN0aW5nIHlvdXIgYXBwbGljYXRpb25zLgogIDwvQ2hlY2s+CjwvU3RlcD4KPC9TdGVwcz4KCiMjIFdoeSBVc2UgVGVzdG5ldHM/CgpUZXN0bmV0cyBwcm92aWRlIGEgc2FmZSwgY29udHJvbGxlZCwgYW5kIGVmZmljaWVudCBlbnZpcm9ubWVudCBmb3IgdGVzdGluZyBhbmQgZXhwZXJpbWVudGF0aW9uLiBUZXN0IG5ldHdvcmtzLCBvciB0ZXN0bmV0cywgc2VydmUgYXMgZXNzZW50aWFsIHRvb2xzIGZvciB5b3UgdG8gdGVzdCB5b3VyIHNtYXJ0IGNvbnRyYWN0cyBiZWZvcmUgZGVwbG95aW5nIHRoZW0gdG8gdGhlIG1haW5uZXQsIG1pbmltaXppbmcgdGhlIHJpc2sgb2YgZmFpbHVyZXMgb3IgdnVsbmVyYWJpbGl0aWVzIGluIGxpdmUgYXBwbGljYXRpb25zLgoKIyMjIEtleSBCZW5lZml0cwoKPENhcmRHcm91cCBjb2xzPXsyfT4KICA8Q2FyZCB0aXRsZT0iUmlzay1GcmVlIFRlc3RpbmciIGljb249InNoaWVsZC1jaGVjayI+CiAgICBUZXN0IHlvdXIgc21hcnQgY29udHJhY3RzIGFuZCBhcHBsaWNhdGlvbnMgd2l0aG91dCByaXNraW5nIHJlYWwgZnVuZHMgb3IgYWZmZWN0aW5nIGxpdmUgdXNlcnMuCiAgPC9DYXJkPgogIAogIDxDYXJkIHRpdGxlPSJSZWFsaXN0aWMgRW52aXJvbm1lbnQiIGljb249Imdsb2JlIj4KICAgIFNpbXVsYXRlIG1haW5uZXQgY29uZGl0aW9ucyBpbmNsdWRpbmcgbmV0d29yayBsYXRlbmN5LCBnYXMgZmVlcywgYW5kIHRyYW5zYWN0aW9uIHRocm91Z2hwdXQuCiAgPC9DYXJkPgogIAogIDxDYXJkIHRpdGxlPSJDb3N0LUVmZmVjdGl2ZSBEZXZlbG9wbWVudCIgaWNvbj0iZG9sbGFyLXNpZ24iPgogICAgVXNlIGZyZWUgdGVzdG5ldCB0b2tlbnMgaW5zdGVhZCBvZiBleHBlbnNpdmUgbWFpbm5ldCBFVEggZm9yIGRldmVsb3BtZW50IGFuZCB0ZXN0aW5nLgogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iTGVhcm5pbmcgUGxhdGZvcm0iIGljb249ImdyYWR1YXRpb24tY2FwIj4KICAgIFBlcmZlY3QgZW52aXJvbm1lbnQgZm9yIGRldmVsb3BlcnMgdG8gbGVhcm4gYW5kIGV4cGVyaW1lbnQgd2l0aCBibG9ja2NoYWluIGRldmVsb3BtZW50LgogIDwvQ2FyZD4KPC9DYXJkR3JvdXA+CgpCeSBzaW11bGF0aW5nIHRoZSBtYWlubmV0IGVudmlyb25tZW50LCB0ZXN0bmV0cyBvZmZlciBhIHJlYWxpc3RpYyByZXByZXNlbnRhdGlvbiBvZiByZWFsLXdvcmxkIGNvbmRpdGlvbnMsIGNvbXBsZXRlIHdpdGggbmV0d29yayBsYXRlbmN5LCBnYXMgZmVlcywgYW5kIG90aGVyIGZhY3RvcnMgdGhhdCBpbXBhY3QgdGhlIHBlcmZvcm1hbmNlIG9mIHNtYXJ0IGNvbnRyYWN0cy4gVGhpcyBhY2N1cmF0ZSByZXByZXNlbnRhdGlvbiBlbmFibGVzIHlvdSB0byBpZGVudGlmeSBwb3RlbnRpYWwgaXNzdWVzLCBvcHRpbWl6ZSB5b3VyIGFwcGxpY2F0aW9ucywgYW5kIGVuc3VyZSB0aGUgYmVzdCBwb3NzaWJsZSB1c2VyIGV4cGVyaWVuY2UgZm9yIHlvdXIgZW5kLXVzZXJzLgoKTW9yZW92ZXIsIHRlc3RuZXRzIGFsbG93IHlvdSB0byBmYW1pbGlhcml6ZSB5b3Vyc2VsZiB3aXRoIHRoZSBCMyBlY29zeXN0ZW0gYW5kIGdhaW4gdmFsdWFibGUgaGFuZHMtb24gZXhwZXJpZW5jZSwgbWFraW5nIHRoZW0gaW5kaXNwZW5zYWJsZSB0b29scyBmb3IgYm90aCBzZWFzb25lZCBkZXZlbG9wZXJzIGFuZCBuZXdjb21lcnMgdG8gdGhlIHdvcmxkIG9mIGJsb2NrY2hhaW4gZGV2ZWxvcG1lbnQuCgojIyBEZXZlbG9wbWVudCBXb3JrZmxvdwoKPFN0ZXBzPgo8U3RlcCB0aXRsZT0iR2V0IFRlc3RuZXQgRVRIIj4KICBVc2UgdGhlIFt0ZXN0bmV0IGZhdWNldF0oaHR0cHM6Ly90ZXN0bmV0LWZhdWNldC5iMy5mdW4pIHRvIGdldCBmcmVlIEVUSCBmb3IgdGVzdGluZy4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkRlcGxveSBhbmQgVGVzdCI+CiAgRGVwbG95IHlvdXIgc21hcnQgY29udHJhY3RzIHRvIHRoZSB0ZXN0bmV0IGFuZCB0aG9yb3VnaGx5IHRlc3QgYWxsIGZ1bmN0aW9uYWxpdHkuCjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJEZWJ1ZyBhbmQgT3B0aW1pemUiPgogIFVzZSB0aGUgYmxvY2sgZXhwbG9yZXIgYW5kIGRldmVsb3BtZW50IHRvb2xzIHRvIGRlYnVnIGlzc3VlcyBhbmQgb3B0aW1pemUgcGVyZm9ybWFuY2UuCjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJEZXBsb3kgdG8gTWFpbm5ldCI+CiAgT25jZSB0ZXN0aW5nIGlzIGNvbXBsZXRlLCBkZXBsb3kgeW91ciBwcm9kdWN0aW9uLXJlYWR5IGNvbnRyYWN0cyB0byBCMyBtYWlubmV0LgogIAogIDxXYXJuaW5nPgogIEFsd2F5cyB0ZXN0IHRob3JvdWdobHkgb24gdGVzdG5ldCBiZWZvcmUgZGVwbG95aW5nIHRvIG1haW5uZXQgd2l0aCByZWFsIGZ1bmRzLgogIDwvV2FybmluZz4KPC9TdGVwPgo8L1N0ZXBzPgoKIyMgVGVzdG5ldCB2cyBNYWlubmV0Cgo8QWNjb3JkaW9uR3JvdXA+CjxBY2NvcmRpb24gdGl0bGU9Ik5ldHdvcmsgQ29uZmlndXJhdGlvbiI+CiAgKipUZXN0bmV0Kio6CiAgLSBDaGFpbiBJRDogMTk5MwogIC0gUlBDOiBodHRwczovL3Rlc3RuZXQtcnBjLmIzLmZ1bgogIC0gRXhwbG9yZXI6IGh0dHBzOi8vdGVzdG5ldC1leHBsb3Jlci5iMy5mdW4KICAKICAqKk1haW5uZXQqKjoKICAtIENoYWluIElEOiA4MzMzCiAgLSBSUEM6IGh0dHBzOi8vbWFpbm5ldC1ycGMuYjMuZnVuCiAgLSBFeHBsb3JlcjogaHR0cHM6Ly9leHBsb3Jlci5iMy5mdW4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJUb2tlbiBWYWx1ZSI+CiAgKipUZXN0bmV0Kio6IEVUSCBoYXMgbm8gcmVhbC13b3JsZCB2YWx1ZSAtIHVzZWQgb25seSBmb3IgdGVzdGluZwogIAogICoqTWFpbm5ldCoqOiBFVEggaGFzIHJlYWwtd29ybGQgdmFsdWUgYW5kIGNvc3RzIG1vbmV5IHRvIGFjcXVpcmUKPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJVc2UgQ2FzZXMiPgogICoqVGVzdG5ldCoqOiBEZXZlbG9wbWVudCwgdGVzdGluZywgbGVhcm5pbmcsIGV4cGVyaW1lbnRhdGlvbgogIAogICoqTWFpbm5ldCoqOiBQcm9kdWN0aW9uIGFwcGxpY2F0aW9ucywgcmVhbCB1c2VycywgYWN0dWFsIHRyYW5zYWN0aW9ucwo8L0FjY29yZGlvbj4KPC9BY2NvcmRpb25Hcm91cD4K",
    "lastUpdated": "2025-09-02T19:51:03.062Z"
  },
  {
    "sourceFile": "protocol/staking-b3.mdx",
    "sourceHash": "CgogPGlmcmFtZQogICBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCBtYi02IgogICAgc3JjPSJodHRwczovL2N1c3RvbWVyLWdnNnFzN25tNXVlOTR0NjQuY2xvdWRmbGFyZXN0cmVhbS5jb20vYTk2ZjFiYzM3N2FhODY5ZGQxODM2NGNmMzM2YzM3MmMvaWZyYW1lP211dGVkPXRydWUmbG9vcD10cnVlJmF1dG9wbGF5PXRydWUmcG9zdGVyPWh0dHBzJTNBJTJGJTJGY3VzdG9tZXItZ2c2cXM3bm01dWU5NHQ2NC5jbG91ZGZsYXJlc3RyZWFtLmNvbSUyRmE5NmYxYmMzNzdhYTg2OWRkMTgzNjRjZjMzNmMzNzJjJTJGdGh1bWJuYWlscyUyRnRodW1ibmFpbC5qcGclM0Z0aW1lJTNEJTI2aGVpZ2h0JTNENjAwIgogICAgdGl0bGU9IlN0YWtpbmcgJEIzIgogICAgZnJhbWVCb3JkZXI9IjAiCiAgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiCiAgYWxsb3dGdWxsU2NyZWVuCiAgPjwvaWZyYW1lPgoKPENhcmQgdGl0bGU9IlN0YWtlICYgd2luICRCMyIgaWNvbj0iY29pbiIgaHJlZj0iaHR0cHM6Ly9zdGFrZS5iMy5mdW4iIGhvcml6b250YWw+CiAgU3Rha2UgeW91ciAkQjMgdG9rZW5zIGluIG91ciBzdGFraW5nIGFyZW5hLgo8L0NhcmQ+CgojIyBXaHkgU3Rha2U/ClN0YWtlIHlvdXIgQjMgdG8gcGxheSBTdGFrZSB0byBXaW4gZ2FtZXMsIHdoZXJlIHlvdSBjYW4gd2luIGJpZyBwcml6ZXMgd2hpbGUgZWFybmluZyAkQjMgeWllbGQgYW5kIGV4Y2x1c2l2ZSByZXdhcmRzLgoKPENhcmRHcm91cCBjb2xzPXsyfT4KPENhcmQgdGl0bGU9IkVhcm4gUmV3YXJkcyIgaWNvbj0iY29pbnMiPgogIFBhcnRpY2lwYXRlIGluIHN3ZWVwc3Rha2VzIGFuZCB3aW4gYmlnIHByaXplcyBpbnN0ZWFkIG9mIGJvcmluZyB5aWVsZC4KPC9DYXJkPgoKPENhcmQgdGl0bGU9IlNlY3VyZSB0aGUgTmV0d29yayIgaWNvbj0ic2hpZWxkIj4KICBDb250cmlidXRlIHRvIEIzJ3Mgc2VjdXJpdHkgYW5kIGRlY2VudHJhbGl6YXRpb24uCjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJHb3Zlcm5hbmNlIFJpZ2h0cyIgaWNvbj0idXNlcnMiPgogIFRva2VucyBob2xkZXJzIGNhbiBwYXJ0aWNpcGF0ZSBpbiBnb3Zlcm5hbmNlIGZvciB0aGUgQjMgbmV0d29yay4KPC9DYXJkPgoKPENhcmQgdGl0bGU9IkxvdyBSaXNrIiBpY29uPSJnYW1lcGFkIj4KICBBY3RpdmVseSBwYXJ0aWNpcGF0ZSBhcyBhIHN0YWtlciwgYW5kIGhhdmUgZnVuLgo8L0NhcmQ+CjwvQ2FyZEdyb3VwPgoKYGBgdGV4dCBDb250cmFjdCBBZGRyZXNzCjB4QjNCMzJGOWY4ODI3RDQ2MzRmRTdkOTczRmExMDM0RWM5ZmREQjNCMwpgYGAKQ29weSB0aGlzIGFkZHJlc3MgdG8gYWRkICRCMyB0byB5b3VyIHdhbGxldCBvciB0cmFkZSBvbiBERVhzLgoKCiMjIyBXaGVyZSB0byBidXkgJEIzIHRva2VucwoKPENhcmRHcm91cCBjb2xzPXszfT4KICA8Q2FyZCB0aXRsZT0iQ29pbmJhc2UiIGhyZWY9Imh0dHBzOi8vd3d3LmNvaW5iYXNlLmNvbS9wcmljZS9iMy1iYXNlIiBob3Jpem9udGFsPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvY29pbmJhc2UtbG9nby5zdmciIGNsYXNzTmFtZT0idy1mdWxsIGJnLWJsYWNrIGFzcGVjdC12aWRlbyBvYmplY3QtY29udGFpbiByb3VuZGVkLWxnIHAtMiBteS0zIiAvPgogICAgQnV5ICRCMyBvbiBDb2luYmFzZQogIDwvQ2FyZD4KCiAgPENhcmQgdGl0bGU9IkJ5Yml0IiBocmVmPSJodHRwczovL3d3dy5ieWJpdC5jb20vZW4vdHJhZGUvc3BvdC9CMy9VU0RUIiBob3Jpem9udGFsPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvYnliaXQtbG9nby5zdmciIGNsYXNzTmFtZT0idy1mdWxsIGJnLWJsYWNrIGFzcGVjdC12aWRlbyBvYmplY3QtY29udGFpbiByb3VuZGVkLWxnIHAtMiBteS0zIiAvPgogICAgVHJhZGUgJEIzIG9uIEJ5Yml0CiAgPC9DYXJkPgoKICA8Q2FyZCB0aXRsZT0iR2F0ZS5pbyIgaHJlZj0iaHR0cHM6Ly93d3cuZ2F0ZS5pby90cmFkZS9CM19VU0RUIiBob3Jpem9udGFsPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvZ2F0ZWlvLWxvZ28uc3ZnIiBjbGFzc05hbWU9InctZnVsbCBiZy1ibGFjayBhc3BlY3QtdmlkZW8gb2JqZWN0LWNvbnRhaW4gcm91bmRlZC1sZyBwLTIgbXktMyIgLz4KICAgIFB1cmNoYXNlICRCMyBvbiBHYXRlLmlvCiAgPC9DYXJkPgoKICA8Q2FyZCB0aXRsZT0iS3VDb2luIiBocmVmPSJodHRwczovL3RyYWRlLmt1Y29pbi5jb20vQjMtVVNEVD91dG1fc291cmNlPWNvbW11bml0eV9wYXJ0bmVyX2luZm8iIGhvcml6b250YWw+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9rdWNvaW4tbG9nby5hdmlmIiBjbGFzc05hbWU9InctZnVsbCBiZy1ibGFjayBhc3BlY3QtdmlkZW8gb2JqZWN0LWNvbnRhaW4gcm91bmRlZC1sZyBwLTIgbXktMyIgLz4KICAgIEdldCAkQjMgb24gS3VDb2luCiAgPC9DYXJkPgoKICA8Q2FyZCB0aXRsZT0iTUVYQyIgaHJlZj0iaHR0cHM6Ly93d3cubWV4Yy5jb20vZXhjaGFuZ2UvQjNfVVNEVCIgaG9yaXpvbnRhbD4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL21leGMtbG9nby5zdmciIGNsYXNzTmFtZT0idy1mdWxsIGJnLWJsYWNrIGFzcGVjdC12aWRlbyBvYmplY3QtY29udGFpbiByb3VuZGVkLWxnIHAtMiBteS0zIiAvPgogICAgVHJhZGUgJEIzIG9uIE1FWEMKICA8L0NhcmQ+CgogIDxDYXJkIHRpdGxlPSJBZXJvZHJvbWUiIGhyZWY9Imh0dHBzOi8vYWVyb2Ryb21lLmZpbmFuY2Uvc3dhcD9mcm9tPWV0aCZ0bz0weGIzYjMyZjlmODgyN2Q0NjM0ZmU3ZDk3M2ZhMTAzNGVjOWZkZGIzYjMmY2hhaW4wPTg0NTMmY2hhaW4xPTg0NTMiIGhvcml6b250YWw+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9hZXJvZHJvbWUtbG9nby5zdmciIGNsYXNzTmFtZT0idy1mdWxsIGJnLWJsYWNrIGFzcGVjdC12aWRlbyBvYmplY3QtY29udGFpbiByb3VuZGVkLWxnIHAtMiBteS0zIiAvPgogICAgU3dhcCAkQjMgb24gQWVyb2Ryb21lCiAgPC9DYXJkPgoKICA8Q2FyZCB0aXRsZT0iQWxpZW5CYXNlIiBocmVmPSJodHRwczovL2FwcC5hbGllbmJhc2UueHl6Lz9vdXRwdXRDdXJyZW5jeT0weEIzQjMyRjlmODgyN0Q0NjM0ZkU3ZDk3M0ZhMTAzNEVjOWZkZGIzQjMmY2hhaW5JZD04NDUzIiBob3Jpem9udGFsPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvYWxpZW5iYXNlLWxvZ28uc3ZnIiBjbGFzc05hbWU9InctZnVsbCBiZy1ibGFjayBhc3BlY3QtdmlkZW8gb2JqZWN0LWNvbnRhaW4gcm91bmRlZC1sZyBwLTIgbXktMyIgLz4KICAgIFRyYWRlICRCMyBvbiBBbGllbkJhc2UKICA8L0NhcmQ+CjwvQ2FyZEdyb3VwPgoK",
    "lastUpdated": "2025-09-02T19:51:35.201Z"
  },
  {
    "sourceFile": "protocol/scaling.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:09.967Z"
  },
  {
    "sourceFile": "protocol/network-setup.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:09.967Z"
  },
  {
    "sourceFile": "protocol/liquidity.mdx",
    "sourceHash": "CiA8aWZyYW1lCiAgIGNsYXNzTmFtZT0idy1mdWxsIGFzcGVjdC12aWRlbyByb3VuZGVkLXhsIgogICAgc3JjPSJodHRwczovL2N1c3RvbWVyLWdnNnFzN25tNXVlOTR0NjQuY2xvdWRmbGFyZXN0cmVhbS5jb20vMDMxNjBhMWE2MWFjOTliOTAwM2U0NGEyMDU5YzdkYWUvaWZyYW1lP211dGVkPXRydWUmbG9vcD10cnVlJmF1dG9wbGF5PXRydWUmcG9zdGVyPWh0dHBzJTNBJTJGJTJGY3VzdG9tZXItZ2c2cXM3bm01dWU5NHQ2NC5jbG91ZGZsYXJlc3RyZWFtLmNvbSUyRjAzMTYwYTFhNjFhYzk5YjkwMDNlNDRhMjA1OWM3ZGFlJTJGdGh1bWJuYWlscyUyRnRodW1ibmFpbC5qcGclM0Z0aW1lJTNEJTI2aGVpZ2h0JTNENjAwIgogICAgdGl0bGU9IkxpcXVpZGl0eSBGcmFnbWVudGF0aW9uIgogICAgZnJhbWVCb3JkZXI9IjAiCiAgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiCiAgYWxsb3dGdWxsU2NyZWVuCiAgPjwvaWZyYW1lPgoKPE5vdGU+CltFeHBsb3JlIEIzJ3MgbXVsdGljaGFpbiBlY29zeXN0ZW0gb24gZXhwbG9yZXIuYjMuZnVuXShodHRwczovL2V4cGxvcmVyLmIzLmZ1bi9jaGFpbnMpCjwvTm90ZT4KCiMjIFRoZSBQcm9ibGVtCgpBcHBjaGFpbnMsIEwycywgYW5kIEwzcyBoYXZlIGlzb2xhdGVkIGxpcXVpZGl0eSwgbWFraW5nIGl0IGFubm95aW5nIHRvIGJ1aWxkIGV4cGVyaWVuY2VzIHdpdGhvdXQgaGF2aW5nIHRvIGJyaWRnZSBhc3NldHMgYWNyb3NzIGNoYWlucy4KCgo8Q2FyZEdyb3VwIGNvbHM9ezJ9PgoKPENhcmQgdGl0bGU9IkZyYWdtZW50ZWQgTGlxdWlkaXR5IiBpY29uPSJwdXp6bGUtcGllY2UiPgogIEVhY2ggY2hhaW4gbWFpbnRhaW5zIGlzb2xhdGVkIHBvb2xzLCBsaW1pdGluZyBkZXB0aCBhbmQgaW5jcmVhc2luZyBzbGlwcGFnZS4KPC9DYXJkPgoKPENhcmQgdGl0bGU9IkNvbXBsZXggSW50ZWdyYXRpb24iIGljb249ImdlYXJzIj4KICBCdWlsZGVycyBtdXN0IGludGVncmF0ZSB3aXRoIGRvemVucyBvZiBjaGFpbnMgaW5kaXZpZHVhbGx5Lgo8L0NhcmQ+Cgo8Q2FyZCB0aXRsZT0iUG9vciBVWCIgaWNvbj0iZmFjZS1mcm93biI+CiAgVXNlcnMgbWFudWFsbHkgYnJpZGdlIGFzc2V0cyBhbmQgbWFuYWdlIG11bHRpcGxlIHdhbGxldHMuCjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJDYXBpdGFsIEluZWZmaWNpZW5jeSIgaWNvbj0iY2hhcnQtbGluZS1kb3duIj4KICBBc3NldHMgbG9ja2VkIG9uIHNwZWNpZmljIGNoYWlucyBjYW4ndCBhY2Nlc3Mgb3RoZXIgb3Bwb3J0dW5pdGllcy4KPC9DYXJkPgoKPC9DYXJkR3JvdXA+CgojIyBBY2Nlc3MgTGlxdWlkaXR5IEFjcm9zcyBDaGFpbnMKClBvd2VyZWQgYnkgb3VyIHByb2R1Y3QsIEFueVNwZW5kLCBvcGVyYXRlcyBhdCB0aGUgY2xpZW50IGV4ZWN1dGlvbiBsYXllciwgc2l0dGluZyBiZXR3ZWVuIHVzZXIgaW50ZW50IGFuZCBibG9ja2NoYWluIGV4ZWN1dGlvbjoKCiMjIyBIb3cgSXQgV29ya3MKCjEuICoqRGVwb3NpdCBmcm9tIGFueSBjaGFpbioqOiBBY2NlcHRzIHRva2VucyBmcm9tIG1vc3QgY2hhaW5zCjIuICoqSW50ZW50LUJhc2VkKio6IFVzZXJzIGV4cHJlc3Mgd2hhdCB0aGV5IHdhbnQsIG5vdCBob3cgdG8gYWNoaWV2ZSBpdAozLiAqKlJvdXRlIERpc2NvdmVyeSoqOiBGaW5kcyBvcHRpbWFsIHBhdGhzIGFjcm9zcyBhbGwgc3VwcG9ydGVkIGNoYWlucwo0LiAqKkF0b21pYyBFeGVjdXRpb24qKjogVHJhbnNhY3Rpb25zIGV4ZWN1dGUgYXRvbWljYWxseSBvciBmYWlsIGdyYWNlZnVsbHkKNS4gKipVbmlmaWVkIEV4cGVyaWVuY2UqKjogQ29tcGxleCBvcGVyYXRpb25zIGFwcGVhciBhcyBzaW5nbGUgdHJhbnNhY3Rpb25zCgpgYGBtZXJtYWlkCmZsb3djaGFydCBURAogICAgQVtVc2VyIEludGVudF0gLS0+IEJbRGVwb3NpdCBmcm9tIEFueSBDaGFpbl0KICAgIEIgLS0+IEN7QW55U3BlbmQgUHJvY2Vzc2luZ30KICAgIEMgLS0+IERbUm91dGUgRGlzY292ZXJ5XQogICAgRCAtLT4gRVtGaW5kIE9wdGltYWwgUGF0aF0KICAgIEUgLS0+IEZbQXRvbWljIEV4ZWN1dGlvbl0KICAgIEYgLS0+IEdbU3VjY2Vzcz9dCiAgICBHIC0tPnxZZXN8IEhbVW5pZmllZCBUcmFuc2FjdGlvbiBDb21wbGV0ZV0KICAgIEcgLS0+fE5vfCBJW0dyYWNlZnVsIEZhaWx1cmUgJiBSb2xsYmFja10KICAgIAogICAgQiAtLT4gQjFbRXRoZXJldW1dCiAgICBCIC0tPiBCMltTb2xhbmFdCiAgICBCIC0tPiBCM1tQb2x5Z29uXQogICAgQiAtLT4gQjRbQXJiaXRydW1dCiAgICBCIC0tPiBCNVtCYXNlXQogICAgQiAtLT4gQjZbQjMgJiBHYW1lIENoYWluc10KICAgIAogICAgSCAtLT4gSltBc3NldHMgQXZhaWxhYmxlIG9uIFRhcmdldCBDaGFpbl0KICAgIEkgLS0+IEtbT3JpZ2luYWwgQXNzZXRzIFJldHVybmVkXQogICAgCiAgICBzdHlsZSBBIGZpbGw6I2UxZjVmZQogICAgc3R5bGUgQyBmaWxsOiNmM2U1ZjUKICAgIHN0eWxlIEggZmlsbDojZThmNWU4CiAgICBzdHlsZSBJIGZpbGw6I2ZmZWJlZQpgYGAKCiMjIyBTdXBwb3J0ZWQgQ2hhaW5zCgpBbnlTcGVuZCBwcm92aWRlcyB1bml2ZXJzYWwgY2hhaW4gc3VwcG9ydDoKCi0gKipFVk0gQ2hhaW5zKio6IE1vc3QgRVZNIGNoYWlucywgaW5jbHVkaW5nIEV0aGVyZXVtLCBQb2x5Z29uLCBBcmJpdHJ1bSwgQmFzZSwgQlNDLCBBdmFsYW5jaGUKLSAqKlNvbGFuYSoqOiBGdWxsIGludGVncmF0aW9uIHdpdGggU29sYW5hJ3MgZWNvc3lzdGVtCi0gKipCMyBFY29zeXN0ZW0qKjogTmF0aXZlIGludGVncmF0aW9uIHdpdGggQjMgYW5kIGdhbWUgY2hhaW5zCgojIyBOZXh0IFN0ZXBzCgo8Q2FyZEdyb3VwIGNvbHM9ezJ9PgoKPENhcmQgdGl0bGU9IlRyeSBBbnlTcGVuZCIgaWNvbj0icm9ja2V0IiBocmVmPSIvYW55c3BlbmQvaW50cm9kdWN0aW9uIj4KICBHZXQgc3RhcnRlZCB3aXRoIHRoZSBBbnlTcGVuZCBTREsuCjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJJbnRlZ3JhdGlvbiBHdWlkZSIgaWNvbj0iYm9vayIgaHJlZj0iL2FueXNwZW5kL2luc3RhbGxhdGlvbiI+CiAgTGVhcm4gaG93IHRvIGludGVncmF0ZSBBbnlTcGVuZC4KPC9DYXJkPgoKPENhcmQgdGl0bGU9IkFQSSBSZWZlcmVuY2UiIGljb249ImNvZGUiIGhyZWY9Ii9hbnlzcGVuZC9hcGktcmVmZXJlbmNlL2ludHJvZHVjdGlvbiI+CiAgRXhwbG9yZSB0aGUgY29tcGxldGUgQVBJIGRvY3VtZW50YXRpb24uCjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJKb2luIERpc2NvcmQiIGljb249ImRpc2NvcmQiIGhyZWY9Imh0dHBzOi8vZGlzY29yZC5nZy9iM2RvdGZ1biI+CiAgQ29ubmVjdCB3aXRoIG90aGVyIGJ1aWxkZXJzLgo8L0NhcmQ+Cgo8L0NhcmRHcm91cD4K",
    "lastUpdated": "2025-09-02T19:36:09.968Z"
  },
  {
    "sourceFile": "protocol/governance-platforms.mdx",
    "sourceHash": "CjxDYXJkR3JvdXAgY29scz17MX0+CjxDYXJkIAogIHRpdGxlPSJCMyBHb3Zlcm5hbmNlIFBsYXRmb3JtIiAKICBpY29uPSJjaGVjay10by1zbG90IiAKICBocmVmPSJodHRwczovL2dvdi5iMy5mdW4iCj4KICAqKmh0dHBzOi8vZ292LmIzLmZ1bioqLCBwb3dlcmVkIGJ5IEFnb3JhCjwvQ2FyZD4KCjxDYXJkIAogIHRpdGxlPSJCMyBEaXNjb3Vyc2UiIAogIGljb249ImNvbW1lbnRzIiAKICBocmVmPSJodHRwczovL2ZvcnVtLmIzLmZ1biIKPgogICoqaHR0cHM6Ly9mb3J1bS5iMy5mdW4qKgo8L0NhcmQ+Cgo8Q2FyZCAKICB0aXRsZT0iQjMgRGlzY29yZCIgCiAgaWNvbj0iZGlzY29yZCIgCiAgaHJlZj0iaHR0cHM6Ly9kaXNjb3JkLmdnL2IzZG90ZnVuIgo+CiAgKipodHRwczovL2Rpc2NvcmQuZ2cvYjNkb3RmdW4qKgo8L0NhcmQ+CjwvQ2FyZEdyb3VwPgoKIyMgQ2F1dGlvbgoKPFdhcm5pbmc+ClN0YXkgc2FmZSEgT25seSB1c2UgdGhlIG9mZmljaWFsIGxpbmtzIGxpc3RlZCBhYm92ZS4gQmUgYXdhcmUgdGhhdCBzY2FtbWVycyBtYXkgdHJ5IHRvIGltcGVyc29uYXRlIEIzIHRlYW0gbWVtYmVycyBvciBkZWxlZ2F0ZXMuIFJlbWVtYmVyOgoKLSBOZXZlciBzaGFyZSB5b3VyIHNlZWQgcGhyYXNlIG9yIHByaXZhdGUga2V5cwotIE5ldmVyIGdpdmUgb3V0IHBlcnNvbmFsIGluZm9ybWF0aW9uIAotIFRoZSByZWFsIEIzIHRlYW0gd2lsbCBuZXZlciBETSB5b3UgZmlyc3QKLSBXaGVuIGluIGRvdWJ0LCB2aXNpdCBvdXIgRGlzY29yZCBhbmQgYXNrIHRoZSBjb21tdW5pdHkKCldlJ3JlIGhlcmUgdG8gaGVscCAtIGpvaW4gb3VyIERpc2NvcmQgc2VydmVyIGlmIHlvdSBoYXZlIGFueSBxdWVzdGlvbnMgb3IgY29uY2VybnMhCjwvV2FybmluZz4K",
    "lastUpdated": "2025-09-02T19:36:09.969Z"
  },
  {
    "sourceFile": "protocol/constitution.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:09.970Z"
  },
  {
    "sourceFile": "protocol/bylaws.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:09.971Z"
  },
  {
    "sourceFile": "protocol/bridge.mdx",
    "sourceHash": "CjxpbWcgc3JjPSIvaW1hZ2VzL2IzLWJhbm5lci5wbmciIGFsdD0iQnJpZGdlIHRvIEIzIiBjbGFzc05hbWU9InctZnVsbCByb3VuZGVkLXhsIiAvPgoKPENhcmRHcm91cCBjb2xzPXsyfT4KICA8Q2FyZCB0aXRsZT0iQmFzZW1lbnQgQnJpZGdlIiAgaHJlZj0iaHR0cHM6Ly9iYXNlbWVudC5mdW4vYnJpZGdlIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL2JzbW50LWxvZ28uc3ZnIiBhbHQ9IkJhc2VtZW50IiBjbGFzc05hbWU9InAtOCBiZy1ibGFjayByb3VuZGVkLTJ4bCBteS0zIiAvPgoKICAgIENyb3NzLWNoYWluIGJyaWRnZSB3aXRoIGluc3RhbnQgZGVwb3NpdHMgYW5kIHdpdGhkcmF3YWxzCiAgPC9DYXJkPgogIAogIDxDYXJkIHRpdGxlPSJSZWxheSBCcmlkZ2UiIGhyZWY9Imh0dHBzOi8vcmVsYXkubGluay9icmlkZ2UvYmFzZT9mcm9tQ2hhaW5JZD04NDUzJmZyb21DdXJyZW5jeT0weGIzYjMyZjlmODgyN2Q0NjM0ZmU3ZDk3M2ZhMTAzNGVjOWZkZGIzYjMmdG9DdXJyZW5jeT0weGIzYjMyZjlmODgyN2Q0NjM0ZmU3ZDk3M2ZhMTAzNGVjOWZkZGIzYjMiPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvcmVsYXktbG9nby5hdmlmIiBhbHQ9IlJlbGF5IiBjbGFzc05hbWU9InAtOCBiZy1ibGFjayByb3VuZGVkLTJ4bCBteS0zIiAvPgoKICAgIEJyaWRnZSBmcm9tIGFueSBFVk0gY2hhaW4gJiBTb2xhbmEgdG8gQjMKICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9Ik5hdGl2ZSBCcmlkZ2UiIGljb249ImJyaWRnZSIgaHJlZj0iI25hdGl2ZS1icmlkZ2UiPgogICAgT1AgQ2Fub25pY2FsIEJyaWRnZSB3aXRoIDctZGF5IHdpdGhkcmF3YWwgcGVyaW9kCiAgPC9DYXJkPgogIAogIDxDYXJkIHRpdGxlPSJCcmlkZ2UgQ29udHJhY3QiIGljb249ImNvZGUiIGhyZWY9IiNicmlkZ2UtY29udHJhY3QiPgogICAgRGlyZWN0IGNvbnRyYWN0IGludGVyYWN0aW9uIGZvciBhZHZhbmNlZCB1c2VycwogIDwvQ2FyZD4KPC9DYXJkR3JvdXA+CgojIyBDcm9zcyBDaGFpbiBCcmlkZ2UKCjxkaXYgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAnMTZweCcgfX0+CiAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzNiODJmNicsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnNHB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcsIG1hcmdpblJpZ2h0OiAnOHB4JyB9fT5JbnN0YW50IERlcG9zaXRzPC9zcGFuPgogIDxzcGFuIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyM4YjVjZjYnLCBjb2xvcjogJ3doaXRlJywgcGFkZGluZzogJzRweCA4cHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnLCBmb250U2l6ZTogJzEycHgnLCBtYXJnaW5SaWdodDogJzhweCcgfX0+SW5zdGFudCBXaXRoZHJhd2Fsczwvc3Bhbj4KICA8c3BhbiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6ICcjMTBiOTgxJywgY29sb3I6ICd3aGl0ZScsIHBhZGRpbmc6ICc0cHggOHB4JywgYm9yZGVyUmFkaXVzOiAnNHB4JywgZm9udFNpemU6ICcxMnB4JyB9fT5Mb3cgRmVlPC9zcGFuPgo8L2Rpdj4KCkNvbm5lY3QgeW91ciB3YWxsZXQgYW5kIGJyaWRnZSBmcm9tIG1ham9yIEVWTSBuZXR3b3JrcyBpbiAmIG91dCBvZiBCMy4KCjxTdGVwcz4KPFN0ZXAgdGl0bGU9IkdvIHRvIHRoZSBCYXNlbWVudCBCcmlkZ2UiPgogIFZpc2l0IFtiYXNlbWVudC5mdW4vYnJpZGdlXShodHRwczovL2Jhc2VtZW50LmZ1bi9icmlkZ2UpIHRvIGFjY2VzcyB0aGUgYnJpZGdlIGludGVyZmFjZS4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvbm5lY3QgeW91ciBXYWxsZXQiPgogIENvbm5lY3QgeW91ciB3YWxsZXQgdXNpbmcgTWV0YU1hc2ssIENvaW5iYXNlIFdhbGxldCwgb3Igb3RoZXIgc3VwcG9ydGVkIHdhbGxldHMuCjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJTZWxlY3QgbmV0d29yayAmIGZ1bmRzIj4KICBDaG9vc2UgdGhlIHNvdXJjZSBuZXR3b3JrIGFuZCB0aGUgYW1vdW50IG9mIGZ1bmRzIHlvdSB3YW50IHRvIGJyaWRnZSB0byBCMy4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvbmZpcm0gdHJhbnNhY3Rpb24iPgogIENvbmZpcm0gdGhlIHRyYW5zYWN0aW9uIGFuZCB5b3UnbGwgcmVjZWl2ZSBicmlkZ2VkIGZ1bmRzIGluIHVuZGVyIGEgbWludXRlLgogIAogIDxDaGVjaz4KICBZb3VyIGZ1bmRzIHdpbGwgYXBwZWFyIGluIHlvdXIgQjMgd2FsbGV0IHdpdGhpbiA2MCBzZWNvbmRzLgogIDwvQ2hlY2s+CjwvU3RlcD4KPC9TdGVwcz4KCjxDYXJkIHRpdGxlPSJVc2UgQmFzZW1lbnQgQnJpZGdlIiBocmVmPSJodHRwczovL2Jhc2VtZW50LmZ1biIgY3RhPSJVc2UgQnJpZGdlIiBob3Jpem9udGFsPgogIDxpbWcgc3JjPSIvaW1hZ2VzL2JzbW50LWxvZ28uc3ZnIiBhbHQ9IkJhc2VtZW50IiBjbGFzc05hbWU9InctMzIiIC8+CgogIFN0YXJ0IGJyaWRnaW5nIHlvdXIgYXNzZXRzIHRvIEIzIHdpdGggaW5zdGFudCBkZXBvc2l0cyBhbmQgd2l0aGRyYXdhbHMKPC9DYXJkPgoKIyMgSW5zdGFudCBCcmlkZ2UKCjxkaXYgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAnMTZweCcgfX0+CiAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzNiODJmNicsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnNHB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcsIG1hcmdpblJpZ2h0OiAnOHB4JyB9fT5JbnN0YW50IERlcG9zaXRzPC9zcGFuPgogIDxzcGFuIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyM4YjVjZjYnLCBjb2xvcjogJ3doaXRlJywgcGFkZGluZzogJzRweCA4cHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnLCBmb250U2l6ZTogJzEycHgnLCBtYXJnaW5SaWdodDogJzhweCcgfX0+SW5zdGFudCBXaXRoZHJhd2Fsczwvc3Bhbj4KICA8c3BhbiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6ICcjMTBiOTgxJywgY29sb3I6ICd3aGl0ZScsIHBhZGRpbmc6ICc0cHggOHB4JywgYm9yZGVyUmFkaXVzOiAnNHB4JywgZm9udFNpemU6ICcxMnB4JyB9fT5Mb3cgRmVlPC9zcGFuPgo8L2Rpdj4KCkVhc2lseSBicmlkZ2UgZnJvbSBhbnkgRVZNIGNoYWluICYgU29sYW5hIHRvIEIzIHdpdGggUmVsYXkuCgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJHbyB0byB0aGUgUmVsYXkgQnJpZGdlIj4KICBWaXNpdCBbcmVsYXkubGlua10oaHR0cHM6Ly9yZWxheS5saW5rKSB0byBhY2Nlc3MgdGhlIFJlbGF5IGJyaWRnZSBpbnRlcmZhY2UuCjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJDb25uZWN0IHlvdXIgV2FsbGV0Ij4KICBDb25uZWN0IHlvdXIgd2FsbGV0IHRvIHN0YXJ0IHRoZSBicmlkZ2luZyBwcm9jZXNzLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iRW50ZXIgYnJpZGdlIGFtb3VudCI+CiAgRW50ZXIgdGhlIGFtb3VudCBvZiBFVEggeW91IHdhbnQgdG8gYnJpZGdlIHRvIEIzLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQ29uZmlybSB0cmFuc2FjdGlvbiI+CiAgQ29uZmlybSB0aGUgdHJhbnNhY3Rpb24gYW5kIHlvdSdsbCByZWNlaXZlIGJyaWRnZWQgZnVuZHMgaW4gdW5kZXIgYSBtaW51dGUuCiAgCiAgPENoZWNrPgogIFJlbGF5IHN1cHBvcnRzIGJyaWRnaW5nIGZyb20gbXVsdGlwbGUgY2hhaW5zIGluY2x1ZGluZyBTb2xhbmEuCiAgPC9DaGVjaz4KPC9TdGVwPgo8L1N0ZXBzPgoKPENhcmQgdGl0bGU9IlVzZSBSZWxheSBCcmlkZ2UiIGhyZWY9Imh0dHBzOi8vcmVsYXkubGluayIgY3RhPSJVc2UgQnJpZGdlIiBob3Jpem9udGFsPgogIDxpbWcgc3JjPSIvaW1hZ2VzL3JlbGF5LWxvZ28uYXZpZiIgYWx0PSJSZWxheSIgY2xhc3NOYW1lPSJ3LTMyIiAvPgoKICBCcmlkZ2UgZnJvbSBhbnkgRVZNIGNoYWluIGFuZCBTb2xhbmEgdG8gQjMgaW5zdGFudGx5CjwvQ2FyZD4KCiMjIE5hdGl2ZSBCcmlkZ2UKCjxkaXYgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAnMTZweCcgfX0+CiAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzNiODJmNicsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnNHB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcsIG1hcmdpblJpZ2h0OiAnOHB4JyB9fT5CYXNlIHRvIEIzPC9zcGFuPgogIDxzcGFuIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyNmNTllMGInLCBjb2xvcjogJ3doaXRlJywgcGFkZGluZzogJzRweCA4cHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnLCBmb250U2l6ZTogJzEycHgnLCBtYXJnaW5SaWdodDogJzhweCcgfX0+Ny1EYXkgV2l0aGRyYXdhbHM8L3NwYW4+CiAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzEwYjk4MScsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnNHB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+Tm8gRmVlczwvc3Bhbj4KPC9kaXY+CgpFYXNpbHkgYnJpZGdlIGZyb20gQmFzZSB0byBCMyB1c2luZyB0aGUgb2ZmaWNpYWwgT1AgU3RhY2sgY2Fub25pY2FsIGJyaWRnZSEKCjxXYXJuaW5nPgpXaXRoZHJhd2FscyBmcm9tIEIzIGJhY2sgdG8gQmFzZSBoYXZlIGEgNy1kYXkgY2hhbGxlbmdlIHBlcmlvZCBmb3Igc2VjdXJpdHkuIFVzZSB0aGlyZC1wYXJ0eSBicmlkZ2VzIGZvciBpbnN0YW50IHdpdGhkcmF3YWxzLgo8L1dhcm5pbmc+Cgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJWaXNpdCB0aGUgYnJpZGdlIj4KICBHbyB0byBbYnJpZGdlLmIzLmZ1bl0oaHR0cHM6Ly9icmlkZ2UuYjMuZnVuKSB0byBhY2Nlc3MgdGhlIG9mZmljaWFsIGJyaWRnZS4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvbm5lY3QgeW91ciBXYWxsZXQiPgogIENvbm5lY3QgeW91ciB3YWxsZXQgdG8gdGhlIGJyaWRnZSBpbnRlcmZhY2UuCjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJDaG9vc2UgZGlyZWN0aW9uIj4KICBTZWxlY3Qgd2hldGhlciB5b3Ugd2FudCB0bzoKICAtICoqRGVwb3NpdCoqOiBCcmluZyBmdW5kcyBmcm9tIEJhc2Ug4oaSIEIzCiAgLSAqKldpdGhkcmF3Kio6IEJyaWRnZSBiYWNrIGZyb20gQjMg4oaSIEJhc2UKPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkVudGVyIGFtb3VudCI+CiAgRW50ZXIgdGhlIGFtb3VudCBvZiBFVEggeW91IHdhbnQgdG8gYnJpZGdlLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQ29tcGxldGUgdHJhbnNhY3Rpb24iPgogIENsaWNrICJEZXBvc2l0IiBhbmQgY29uZmlybSB0aGUgdHJhbnNhY3Rpb24gaW4geW91ciB3YWxsZXQuCiAgCiAgPFRpcD4KICBEZXBvc2l0cyB0byBCMyBhcmUgaW5zdGFudCwgYnV0IHdpdGhkcmF3YWxzIHRha2UgNyBkYXlzIGZvciB0aGUgY2hhbGxlbmdlIHBlcmlvZC4KICA8L1RpcD4KPC9TdGVwPgo8L1N0ZXBzPgoKPENhcmQgdGl0bGU9IlVzZSBPZmZpY2lhbCBCcmlkZ2UiIGljb249ImJyaWRnZSIgaHJlZj0iaHR0cHM6Ly9icmlkZ2UuYjMuZnVuIiBjdGE9IkJyaWRnZSIgaG9yaXpvbnRhbD4KICBVc2UgdGhlIGJhdHRsZS10ZXN0ZWQgT1AgU3RhY2sgY2Fub25pY2FsIGJyaWRnZQo8L0NhcmQ+CgojIyBOYXRpdmUgVHJhbnNmZXIgKEJyaWRnZSBDb250cmFjdCkKCjxkaXYgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAnMTZweCcgfX0+CiAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzNiODJmNicsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnNHB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcsIG1hcmdpblJpZ2h0OiAnOHB4JyB9fT5JbnN0YW50IERlcG9zaXRzPC9zcGFuPgogIDxzcGFuIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyNmNTllMGInLCBjb2xvcjogJ3doaXRlJywgcGFkZGluZzogJzRweCA4cHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnLCBmb250U2l6ZTogJzEycHgnLCBtYXJnaW5SaWdodDogJzhweCcgfX0+Ny1EYXkgV2l0aGRyYXdhbHM8L3NwYW4+CiAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzEwYjk4MScsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnNHB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+Tm8gRmVlczwvc3Bhbj4KPC9kaXY+CgpTZW5kIEJhc2UgRVRIIHRocm91Z2ggdGhlIGJyaWRnZSBjb250cmFjdC4gVHJhbnNmZXIgKipCYXNlIEVUSCoqIHRvIHRoZSBmb2xsb3dpbmcgYnJpZGdlIGFkZHJlc3Mgb24gKipCYXNlIE1haW5uZXQqKjoKCjxXYXJuaW5nPgpUaGlzIG1ldGhvZCBpcyBmb3IgYWR2YW5jZWQgdXNlcnMgb25seS4gTWFrZSBzdXJlIHlvdSdyZSBzZW5kaW5nIGZyb20gQmFzZSBNYWlubmV0IHRvIGF2b2lkIGxvc2luZyBmdW5kcy4KPC9XYXJuaW5nPgoKYGBgdGV4dCBCcmlkZ2UgQWRkcmVzcwoweDc2OTU0N2E3MjM3ODNGQ0EzNkJBYWYxRUNjZjlkZmRiRjZkMDlGMzgKYGBgCgo8Tm90ZT4KV2hlbiB5b3Ugc2VuZCBFVEggdG8gdGhpcyBhZGRyZXNzIGZyb20gQmFzZSwgaXQgd2lsbCBhdXRvbWF0aWNhbGx5IGFwcGVhciBpbiB5b3VyIHdhbGxldCBvbiBCMy4gVGhpcyBpcyBhIGRpcmVjdCBjb250cmFjdCBpbnRlcmFjdGlvbiBtZXRob2QuCjwvTm90ZT4KCjxBY2NvcmRpb24gdGl0bGU9IkhvdyB0byB1c2UgdGhlIGJyaWRnZSBjb250cmFjdCI+CjEuICoqRW5zdXJlIHlvdSdyZSBvbiBCYXNlIE1haW5uZXQqKiBpbiB5b3VyIHdhbGxldAoyLiAqKlNlbmQgRVRIKiogdG8gdGhlIGJyaWRnZSBjb250cmFjdCBhZGRyZXNzIGFib3ZlCjMuICoqV2FpdCBmb3IgY29uZmlybWF0aW9uKiogLSB5b3VyIGZ1bmRzIHdpbGwgYXBwZWFyIG9uIEIzIGF1dG9tYXRpY2FsbHkKNC4gKipDaGVjayB5b3VyIEIzIHdhbGxldCoqIC0gc3dpdGNoIHRvIEIzIG5ldHdvcmsgdG8gc2VlIHlvdXIgYnJpZGdlZCBFVEgKCjxXYXJuaW5nPgpEb3VibGUtY2hlY2sgeW91J3JlIG9uIEJhc2UgTWFpbm5ldCBiZWZvcmUgc2VuZGluZy4gU2VuZGluZyBmcm9tIG90aGVyIG5ldHdvcmtzIG1heSByZXN1bHQgaW4gbG9zdCBmdW5kcy4KPC9XYXJuaW5nPgo8L0FjY29yZGlvbj4K",
    "lastUpdated": "2025-09-02T19:36:09.971Z"
  },
  {
    "sourceFile": "protocol/bridge-to-testnet.mdx",
    "sourceHash": "CjxOb3RlPgpUaGlzIGJyaWRnZSBpcyBzcGVjaWZpY2FsbHkgZm9yIHRlc3RuZXQgcHVycG9zZXMuIFVzZSBmcmVlIHRlc3RuZXQgRVRIIHRvIHRlc3QgeW91ciBhcHBsaWNhdGlvbnMgYmVmb3JlIGRlcGxveWluZyB0byBtYWlubmV0Lgo8L05vdGU+CgojIyBIb3cgdG8gQnJpZGdlCgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJWaXNpdCB0aGUgVGVzdG5ldCBCcmlkZ2UiPgogIEdvIHRvIFt0ZXN0bmV0LmJyaWRnZS5iMy5mdW5dKGh0dHBzOi8vdGVzdG5ldC5icmlkZ2UuYjMuZnVuKSB0byBhY2Nlc3MgdGhlIG9mZmljaWFsIHRlc3RuZXQgYnJpZGdlIGludGVyZmFjZS4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvbm5lY3QgeW91ciBXYWxsZXQiPgogIENvbm5lY3QgeW91ciB3YWxsZXQgKE1ldGFNYXNrLCBDb2luYmFzZSBXYWxsZXQsIGV0Yy4pIHRvIHRoZSBicmlkZ2UgaW50ZXJmYWNlLgogIAogIDxUaXA+CiAgTWFrZSBzdXJlIHlvdXIgd2FsbGV0IGlzIGNvbm5lY3RlZCB0byBlaXRoZXIgQmFzZSBTZXBvbGlhIG9yIEIzIFRlc3RuZXQgZGVwZW5kaW5nIG9uIHdoaWNoIGRpcmVjdGlvbiB5b3Ugd2FudCB0byBicmlkZ2UuCiAgPC9UaXA+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJDaG9vc2UgQnJpZGdlIERpcmVjdGlvbiI+CiAgU2VsZWN0IHdoZXRoZXIgeW91IHdhbnQgdG86CiAgLSAqKkRlcG9zaXQqKjogQnJpbmcgZnVuZHMgZnJvbSBCYXNlIFNlcG9saWEg4oaSIEIzIFRlc3RuZXQKICAtICoqV2l0aGRyYXcqKjogQnJpZGdlIGJhY2sgZnJvbSBCMyBUZXN0bmV0IOKGkiBCYXNlIFNlcG9saWEKICAKICBDbGljayBlaXRoZXIgdGhlICoqRGVwb3NpdCoqIG9yICoqV2l0aGRyYXcqKiB0YWJzIGFjY29yZGluZ2x5Lgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iRW50ZXIgQW1vdW50Ij4KICBFbnRlciB0aGUgYW1vdW50IG9mIEVUSCB5b3Ugd2FudCB0byBicmlkZ2UuCiAgCiAgPENhcmQgdGl0bGU9Ik5lZWQgQmFzZSBTZXBvbGlhIEVUSD8iIGljb249ImZhdWNldCIgaHJlZj0iaHR0cHM6Ly9kb2NzLmJhc2Uub3JnL2Jhc2UtY2hhaW4vdG9vbHMvbmV0d29yay1mYXVjZXRzIiBjdGE9IkdldCBCYXNlIFRlc3RuZXQgRVRIIiBob3Jpem9udGFsPgogICAgSWYgeW91IG5lZWQgQmFzZSBTZXBvbGlhIEVUSCwgdXNlIGEgQmFzZSBTZXBvbGlhIGZhdWNldCB0byBnZXQgZnJlZSB0ZXN0bmV0IHRva2VucwogIDwvQ2FyZD4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvbmZpcm0gVHJhbnNhY3Rpb24iPgogIENsaWNrICJEZXBvc2l0IiAob3IgIldpdGhkcmF3IikgYW5kIGNvbmZpcm0gdGhlIHRyYW5zYWN0aW9uIHByb21wdCB0aGF0IGFwcGVhcnMgaW4geW91ciB3YWxsZXQuCiAgCiAgPFdhcm5pbmc+CiAgRG91YmxlLWNoZWNrIHRoYXQgeW91J3JlIG9uIHRoZSBjb3JyZWN0IHRlc3RuZXQgYW5kIHVzaW5nIHRlc3RuZXQgRVRILCBub3QgbWFpbm5ldCBmdW5kcy4KICA8L1dhcm5pbmc+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJXYWl0IGZvciBDb21wbGV0aW9uIj4KICBXYWl0IGEgZmV3IG1pbnV0ZXMgZm9yIHRoZSBicmlkZ2UgcHJvY2VzcyB0byBjb21wbGV0ZS4gWW91IGNhbiBjaGVjayB0aGUgc3RhdHVzIGluIHlvdXIgIkhpc3RvcnkiIHRhYi4KICAKICA8Q2hlY2s+CiAgWW91ciB0ZXN0bmV0IEVUSCB3aWxsIGFwcGVhciBpbiB5b3VyIHdhbGxldCBvbiB0aGUgZGVzdGluYXRpb24gbmV0d29yayB3aXRoaW4gYSBmZXcgbWludXRlcy4KICA8L0NoZWNrPgo8L1N0ZXA+CjwvU3RlcHM+CgojIyBOZXR3b3JrIEluZm9ybWF0aW9uCgo8Q2FyZEdyb3VwIGNvbHM9ezJ9PgogIDxDYXJkIHRpdGxlPSJCYXNlIFNlcG9saWEgVGVzdG5ldCI+CiAgICAqKkNoYWluIElEKio6IDg0NTMyICAKICAgICoqUlBDKio6IGh0dHBzOi8vc2Vwb2xpYS5iYXNlLm9yZyAgCiAgICAqKkV4cGxvcmVyKio6IGh0dHBzOi8vc2Vwb2xpYS5iYXNlc2Nhbi5vcmcKICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9IkIzIFNlcG9saWEgVGVzdG5ldCI+CiAgICAqKkNoYWluIElEKio6IDE5OTMgIAogICAgKipSUEMqKjogaHR0cHM6Ly90ZXN0bmV0LXJwYy5iMy5mdW4gIAogICAgKipFeHBsb3JlcioqOiBodHRwczovL3Rlc3RuZXQtZXhwbG9yZXIuYjMuZnVuCiAgPC9DYXJkPgo8L0NhcmRHcm91cD4KCiMjIFRlc3RuZXQgUmVzb3VyY2VzCgo8Q2FyZEdyb3VwIGNvbHM9ezJ9PgogIDxDYXJkIHRpdGxlPSJUZXN0bmV0IEJyaWRnZSIgaWNvbj0iYnJpZGdlIiBocmVmPSJodHRwczovL3Rlc3RuZXQuYnJpZGdlLmIzLmZ1biIgY3RhPSJCcmlkZ2UgTm93Ij4KICAgIE9mZmljaWFsIGJyaWRnZSBmb3IgbW92aW5nIGFzc2V0cyBiZXR3ZWVuIEJhc2UgU2Vwb2xpYSBhbmQgQjMgVGVzdG5ldAogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iQjMgVGVzdG5ldCBGYXVjZXQiIGljb249ImZhdWNldCIgaHJlZj0iaHR0cHM6Ly90ZXN0bmV0LWZhdWNldC5iMy5mdW4iIGN0YT0iR2V0IFRlc3QgRVRIIj4KICAgIEdldCBmcmVlIEIzIHRlc3RuZXQgRVRIIGZvciBkZXZlbG9wbWVudCBhbmQgdGVzdGluZwogIDwvQ2FyZD4KPC9DYXJkR3JvdXA+CgojIyBBZGRpdGlvbmFsIEZhdWNldHMKCklmIHlvdSBuZWVkIHRlc3RuZXQgRVRIIGZvciBkZXZlbG9wbWVudCwgaGVyZSBhcmUgc29tZSByZWxpYWJsZSBmYXVjZXQgb3B0aW9uczoKCjxBY2NvcmRpb25Hcm91cD4KPEFjY29yZGlvbiB0aXRsZT0iQmFzZSBTZXBvbGlhIEZhdWNldHMiPgogIC0gW0NvaW5iYXNlIEJhc2UgRmF1Y2V0XShodHRwczovL2NvaW5iYXNlLmNvbS9mYXVjZXRzL2Jhc2UtZXRoZXJldW0tc2Vwb2xpYS1mYXVjZXQpIC0gT2ZmaWNpYWwgQ29pbmJhc2UgZmF1Y2V0CiAgLSBbQWxjaGVteSBCYXNlIFNlcG9saWEgRmF1Y2V0XShodHRwczovL3NlcG9saWFmYXVjZXQuY29tKSAtIFJlbGlhYmxlIGZhdWNldCBmb3IgQmFzZSBTZXBvbGlhIEVUSAogIC0gW1F1aWNrTm9kZSBCYXNlIEZhdWNldF0oaHR0cHM6Ly9mYXVjZXQucXVpY2tub2RlLmNvbS9iYXNlL3NlcG9saWEpIC0gTXVsdGlwbGUgdGVzdG5ldCBzdXBwb3J0CjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iQjMgVGVzdG5ldCBGYXVjZXQiPgogIC0gW0IzIFRlc3RuZXQgRmF1Y2V0XShodHRwczovL3Rlc3RuZXQtZmF1Y2V0LmIzLmZ1bikgLSBPZmZpY2lhbCBCMyB0ZXN0bmV0IGZhdWNldAogIC0gR2V0IGZyZWUgQjMgdGVzdG5ldCBFVEggZGlyZWN0bHkgd2l0aG91dCBicmlkZ2luZwo8L0FjY29yZGlvbj4KPC9BY2NvcmRpb25Hcm91cD4KCiMjIFRyb3VibGVzaG9vdGluZwoKPEFjY29yZGlvbkdyb3VwPgo8QWNjb3JkaW9uIHRpdGxlPSJCcmlkZ2UgdHJhbnNhY3Rpb24gc3R1Y2siPgogIC0gQ2hlY2sgdGhlIHRyYW5zYWN0aW9uIHN0YXR1cyBvbiB0aGUgYmxvY2sgZXhwbG9yZXIKICAtIFZlcmlmeSB5b3UncmUgY29ubmVjdGVkIHRvIHRoZSBjb3JyZWN0IHRlc3RuZXQKICAtIFRyeSBpbmNyZWFzaW5nIGdhcyBmZWVzIGlmIHRoZSB0cmFuc2FjdGlvbiBpcyBwZW5kaW5nCiAgLSBDb250YWN0IHN1cHBvcnQgaWYgdGhlIGJyaWRnZSBoYXMgYmVlbiBwZW5kaW5nIGZvciBvdmVyIDMwIG1pbnV0ZXMKPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJXYWxsZXQgbm90IGNvbm5lY3RpbmciPgogIC0gRW5zdXJlIHlvdXIgd2FsbGV0IHN1cHBvcnRzIHRoZSB0ZXN0bmV0IG5ldHdvcmtzCiAgLSBUcnkgcmVmcmVzaGluZyB0aGUgcGFnZSBhbmQgcmVjb25uZWN0aW5nCiAgLSBDaGVjayB0aGF0IHlvdSdyZSBvbiB0aGUgY29ycmVjdCBuZXR3b3JrIGluIHlvdXIgd2FsbGV0CiAgLSBDbGVhciB5b3VyIGJyb3dzZXIgY2FjaGUgaWYgaXNzdWVzIHBlcnNpc3QKPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJJbnN1ZmZpY2llbnQgZnVuZHMgZm9yIGdhcyI+CiAgLSBNYWtlIHN1cmUgeW91IGhhdmUgZW5vdWdoIEVUSCB0byBwYXkgZm9yIGdhcyBmZWVzCiAgLSBVc2UgYSBmYXVjZXQgdG8gZ2V0IG1vcmUgdGVzdG5ldCBFVEgKICAtIFRyeSBicmlkZ2luZyBhIHNtYWxsZXIgYW1vdW50IHRvIGNvbnNlcnZlIGdhcwo8L0FjY29yZGlvbj4KPC9BY2NvcmRpb25Hcm91cD4KCiMjIERldmVsb3BtZW50IFdvcmtmbG93Cgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJHZXQgQmFzZSBTZXBvbGlhIEVUSCI+CiAgVXNlIGEgQmFzZSBTZXBvbGlhIGZhdWNldCB0byBnZXQgZnJlZSB0ZXN0bmV0IEVUSC4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkJyaWRnZSB0byBCMyBUZXN0bmV0Ij4KICBVc2UgdGhlIHRlc3RuZXQgYnJpZGdlIHRvIG1vdmUgRVRIIGZyb20gQmFzZSBTZXBvbGlhIHRvIEIzIFRlc3RuZXQuCjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJEZXBsb3kgYW5kIFRlc3QiPgogIERlcGxveSB5b3VyIGNvbnRyYWN0cyBhbmQgdGVzdCB5b3VyIGFwcGxpY2F0aW9ucyBvbiBCMyBUZXN0bmV0Lgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iUmVhZHkgZm9yIE1haW5uZXQiPgogIFdoZW4gdGVzdGluZyBpcyBjb21wbGV0ZSwgZGVwbG95IHRvIEIzIE1haW5uZXQgdXNpbmcgdGhlIFttYWlubmV0IGJyaWRnZV0oL3Byb3RvY29sL2JyaWRnZSkuCjwvU3RlcD4KPC9TdGVwcz4K",
    "lastUpdated": "2025-09-02T19:36:09.972Z"
  },
  {
    "sourceFile": "protocol/brand-kit.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:09.973Z"
  },
  {
    "sourceFile": "protocol/b3-token.mdx",
    "sourceHash": "CjxpZnJhbWUgY2xhc3NOYW1lPSJhc3BlY3QtdmlkZW8gcm91bmRlZC14bCIgc3JjPSJodHRwczovL2N1c3RvbWVyLWdnNnFzN25tNXVlOTR0NjQuY2xvdWRmbGFyZXN0cmVhbS5jb20vZTc4NmRkMjliZjcxMjc4YmU4ZjM5NGZlMTYyNzZmNWUvaWZyYW1lP211dGVkPXRydWUmbG9vcD10cnVlJmF1dG9wbGF5PXRydWUmcG9zdGVyPWh0dHBzJTNBJTJGJTJGY3VzdG9tZXItZ2c2cXM3bm01dWU5NHQ2NC5jbG91ZGZsYXJlc3RyZWFtLmNvbSUyRmU3ODZkZDI5YmY3MTI3OGJlOGYzOTRmZTE2Mjc2ZjVlJTJGdGh1bWJuYWlscyUyRnRodW1ibmFpbC5qcGclM0Z0aW1lJTNEJTI2aGVpZ2h0JTNENjAwIiB0aXRsZT0iJEIzIFRva2Vub21pY3MiIGZyYW1lQm9yZGVyPSIwIiBhbGxvdz0iYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZSIgYWxsb3dGdWxsU2NyZWVuIC8+Cgo8Q29kZUdyb3VwPgoKYGBgdGV4dCBDb250cmFjdCBBZGRyZXNzCjB4QjNCMzJGOWY4ODI3RDQ2MzRmRTdkOTczRmExMDM0RWM5ZmREQjNCMwpgYGAKCjwvQ29kZUdyb3VwPgoKQ29weSB0aGlzIGFkZHJlc3MgdG8gYWRkIFwkQjMgdG8geW91ciB3YWxsZXQgb3IgdHJhZGUgb24gREVYcy4KCiMjIFdoYXQgaXMgXCRCMz8KCioqXCRCMyoqIGlzIHRoZSB1dGlsaXR5IHRva2VuIHRoYXQgcG93ZXJzIHRoZSBlbnRpcmUgQjMgZWNvc3lzdGVtLiBBcyB0aGUgZm91bmRhdGlvbmFsIHRva2VuIGZvciBhIGhvcml6b250YWxseSBzY2FsaW5nIG11bHRpY2hhaW4gbmV0d29yaywgQjMgZW5hYmxlcyBnb3Zlcm5hbmNlLCBzdGFraW5nLCBhbmQgdmFsdWUgYWNyb3NzIGFwcGNoYWlucyBhbmQgYXBwbGljYXRpb25zIGJ1aWx0IG9uIEIzLgoKPGltZwogIHNyYz0iL2ltYWdlcy9vcGVuLWFwcC1sYXllci5wbmciCiAgYWx0PSJCMyBUb2tlbiIKICBoZWlnaHQ9IjQwMCIKICBjbGFzc05hbWU9InJvdW5kZWQteGwiCiAgdGl0bGU9IiIKLz4KCiMjIEEgcG9ydGZvbGlvIG9mIGZ1bgoKQjMgaXMgbm90IGp1c3QgYmxvY2tjaGFpbiBpbmZyYXN0cnVjdHVyZS4gIFdlIGFyZSBjb25zdGFudGx5IGJ1aWxkaW5nIGZ1biwgbWFzcy1zY2FsZSBwb3RlbnRpYWwgb25jaGFpbiBjb25zdW1lciBleHBlcmllbmNlcyAtIGFsbCB3aXRoIHRoZSBnb2FsIG9mIGNyZWF0aW5nIHZhbHVlIGZvciAqKlwkQjMgaG9sZGVycy4qKgoKPGlmcmFtZSBjbGFzc05hbWU9ImFzcGVjdC12aWRlbyByb3VuZGVkLXhsIG1iLTYiIHNyYz0iaHR0cHM6Ly9jdXN0b21lci1nZzZxczdubTV1ZTk0dDY0LmNsb3VkZmxhcmVzdHJlYW0uY29tLzNlMGQxNWQ0Y2EwZGJkYWJlYWFiZWVlMTNiNDM5NmRhL2lmcmFtZT9tdXRlZD10cnVlJmxvb3A9dHJ1ZSZhdXRvcGxheT10cnVlJnBvc3Rlcj1odHRwcyUzQSUyRiUyRmN1c3RvbWVyLWdnNnFzN25tNXVlOTR0NjQuY2xvdWRmbGFyZXN0cmVhbS5jb20lMkYzZTBkMTVkNGNhMGRiZGFiZWFhYmVlZTEzYjQzOTZkYSUyRnRodW1ibmFpbHMlMkZ0aHVtYm5haWwuanBnJTNGdGltZSUzRCUyNmhlaWdodCUzRDYwMCIgdGl0bGU9IiRCMyBQb3J0Zm9saW8iIGZyYW1lQm9yZGVyPSIwIiBhbGxvdz0iYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZSIgYWxsb3dGdWxsU2NyZWVuIC8+Cgo8Q2FyZEdyb3VwIGNvbHM9ezJ9PgogIDxDYXJkIGhyZWY9Imh0dHBzOi8vYW55c3BlbmQuYjMuZnVuIj4KICAgIDxpbWcKICAgICAgc3JjPSIvaW1hZ2VzL2FueXNwZW5kLWxvZ28td2hpdGUuc3ZnIgogICAgICBjbGFzc05hbWU9InctZnVsbCBiZy1ibGFjayBhc3BlY3QtdmlkZW8gb2JqZWN0LWNvbnRhaW4gcm91bmRlZC0yeGwgcC04IG1iLTQiCiAgICAvPgoKICAgIENyb3NzLWNoYWluIHBheW1lbnRzICYgb25yYW1wLgogIDwvQ2FyZD4KICA8Q2FyZCBocmVmPSIvcHJvdG9jb2wvc3Rha2luZy1iMyI+CiAgICA8aW1nCiAgICAgIHNyYz0iL2ltYWdlcy9iMy1sb2dvLWJsdWUtY29pbi5hdmlmIgogICAgICBjbGFzc05hbWU9InctZnVsbCBiZy1ibGFjayBhc3BlY3QtdmlkZW8gb2JqZWN0LWNvbnRhaW4gcm91bmRlZC0yeGwgcC04IG1iLTQiCiAgICAvPgoKICAgIFN0YWtlIHRvIHdpbi4KICA8L0NhcmQ+CiAgPENhcmQgaHJlZj0iL2Jhc2VtZW50L2ludHJvZHVjdGlvbiI+CiAgICA8aW1nCiAgICAgIHNyYz0iL2ltYWdlcy9iYXNlbWVudC1sb2dvLXB1cnBsZS5zdmciCiAgICAgIGNsYXNzTmFtZT0idy1mdWxsIGJnLWJsYWNrIGFzcGVjdC12aWRlbyBvYmplY3QtY29udGFpbiByb3VuZGVkLTJ4bCBwLTE0IG1iLTQiCiAgICAvPgoKICAgIFRoZSBoeXBlci1jYXN1YWwgb25jaGFpbiBnYW1pbmcgcGxhdGZvcm0uCiAgPC9DYXJkPgogIDxDYXJkIGhyZWY9Ii9zZGsvaW50cm9kdWN0aW9uIj4KICAgIDxpbWcKICAgICAgc3JjPSIvaW1hZ2VzL2N1cnNvci5wbmciCiAgICAgIGNsYXNzTmFtZT0idy1mdWxsIGJnLWJsYWNrIGFzcGVjdC12aWRlbyBvYmplY3QtY29udGFpbiByb3VuZGVkLTJ4bCBwLTEyIG1iLTQiCiAgICAvPgoKICAgIFNES3MgZm9yIGJvbmRpbmcgdG9rZW5zLCB3YWdlcmluZyAmIG1vcmUuCiAgPC9DYXJkPgo8L0NhcmRHcm91cD4KCiMjIyBXaGVyZSB0byBidXkgXCRCMyB0b2tlbnMKCjxDYXJkR3JvdXAgY29scz17M30+CiAgPENhcmQgdGl0bGU9IkNvaW5iYXNlIiBob3Jpem9udGFsIGhyZWY9Imh0dHBzOi8vd3d3LmNvaW5iYXNlLmNvbS9wcmljZS9iMy1iYXNlIj4KICAgIDxpbWcKICAgICAgc3JjPSIvaW1hZ2VzL2NvaW5iYXNlLWxvZ28uc3ZnIgogICAgICBjbGFzc05hbWU9InctZnVsbCBiZy1ibGFjayBhc3BlY3QtdmlkZW8gb2JqZWN0LWNvbnRhaW4gcm91bmRlZC1sZyBwLTIgbXktMyIKICAgIC8+CgogICAgQnV5IFwkQjMgb24gQ29pbmJhc2UKICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9IkJ5Yml0IiBob3Jpem9udGFsIGhyZWY9Imh0dHBzOi8vd3d3LmJ5Yml0LmNvbS9lbi90cmFkZS9zcG90L0IzL1VTRFQiPgogICAgPGltZwogICAgICBzcmM9Ii9pbWFnZXMvYnliaXQtbG9nby5zdmciCiAgICAgIGNsYXNzTmFtZT0idy1mdWxsIGJnLWJsYWNrIGFzcGVjdC12aWRlbyBvYmplY3QtY29udGFpbiByb3VuZGVkLWxnIHAtMiBteS0zIgogICAgLz4KCiAgICBUcmFkZSBcJEIzIG9uIEJ5Yml0CiAgPC9DYXJkPgogIDxDYXJkIHRpdGxlPSJHYXRlLmlvIiBob3Jpem9udGFsIGhyZWY9Imh0dHBzOi8vd3d3LmdhdGUuaW8vdHJhZGUvQjNfVVNEVCI+CiAgICA8aW1nCiAgICAgIHNyYz0iL2ltYWdlcy9nYXRlaW8tbG9nby5zdmciCiAgICAgIGNsYXNzTmFtZT0idy1mdWxsIGJnLWJsYWNrIGFzcGVjdC12aWRlbyBvYmplY3QtY29udGFpbiByb3VuZGVkLWxnIHAtMiBteS0zIgogICAgLz4KCiAgICBQdXJjaGFzZSBcJEIzIG9uIEdhdGUuaW8KICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9Ikt1Q29pbiIgaG9yaXpvbnRhbCBocmVmPSJodHRwczovL3RyYWRlLmt1Y29pbi5jb20vQjMtVVNEVD91dG1fc291cmNlPWNvbW11bml0eV9wYXJ0bmVyX2luZm8iPgogICAgPGltZwogICAgICBzcmM9Ii9pbWFnZXMva3Vjb2luLWxvZ28uYXZpZiIKICAgICAgY2xhc3NOYW1lPSJ3LWZ1bGwgYmctYmxhY2sgYXNwZWN0LXZpZGVvIG9iamVjdC1jb250YWluIHJvdW5kZWQtbGcgcC0yIG15LTMiCiAgICAvPgoKICAgIEdldCBcJEIzIG9uIEt1Q29pbgogIDwvQ2FyZD4KICA8Q2FyZCB0aXRsZT0iTUVYQyIgaG9yaXpvbnRhbCBocmVmPSJodHRwczovL3d3dy5tZXhjLmNvbS9leGNoYW5nZS9CM19VU0RUIj4KICAgIDxpbWcKICAgICAgc3JjPSIvaW1hZ2VzL21leGMtbG9nby5zdmciCiAgICAgIGNsYXNzTmFtZT0idy1mdWxsIGJnLWJsYWNrIGFzcGVjdC12aWRlbyBvYmplY3QtY29udGFpbiByb3VuZGVkLWxnIHAtMiBteS0zIgogICAgLz4KCiAgICBUcmFkZSBcJEIzIG9uIE1FWEMKICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9IkFlcm9kcm9tZSIgaG9yaXpvbnRhbCBocmVmPSJodHRwczovL2Flcm9kcm9tZS5maW5hbmNlL3N3YXA/ZnJvbT1ldGgmdG89MHhiM2IzMmY5Zjg4MjdkNDYzNGZlN2Q5NzNmYTEwMzRlYzlmZGRiM2IzJmNoYWluMD04NDUzJmNoYWluMT04NDUzIj4KICAgIDxpbWcKICAgICAgc3JjPSIvaW1hZ2VzL2Flcm9kcm9tZS1sb2dvLnN2ZyIKICAgICAgY2xhc3NOYW1lPSJ3LWZ1bGwgYmctYmxhY2sgYXNwZWN0LXZpZGVvIG9iamVjdC1jb250YWluIHJvdW5kZWQtbGcgcC0yIG15LTMiCiAgICAvPgoKICAgIFN3YXAgXCRCMyBvbiBBZXJvZHJvbWUKICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9IkFsaWVuQmFzZSIgaG9yaXpvbnRhbCBocmVmPSJodHRwczovL2FwcC5hbGllbmJhc2UueHl6Lz9vdXRwdXRDdXJyZW5jeT0weEIzQjMyRjlmODgyN0Q0NjM0ZkU3ZDk3M0ZhMTAzNEVjOWZkZGIzQjMmY2hhaW5JZD04NDUzIj4KICAgIDxpbWcKICAgICAgc3JjPSIvaW1hZ2VzL2FsaWVuYmFzZS1sb2dvLnN2ZyIKICAgICAgY2xhc3NOYW1lPSJ3LWZ1bGwgYmctYmxhY2sgYXNwZWN0LXZpZGVvIG9iamVjdC1jb250YWluIHJvdW5kZWQtbGcgcC0yIG15LTMiCiAgICAvPgoKICAgIFRyYWRlIFwkQjMgb24gQWxpZW5CYXNlCiAgPC9DYXJkPgo8L0NhcmRHcm91cD4K",
    "lastUpdated": "2025-09-02T19:36:09.974Z"
  },
  {
    "sourceFile": "ecosystem/wallets.mdx",
    "sourceHash": "CjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgdGl0bGU9IlByaXZ5IiBocmVmPSJodHRwczovL3ByaXZ5LmlvIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3ByaXZ5LWxvZ28uc3ZnIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBTcGluIHVwIGVtYmVkZGVkIHdhbGxldHMgYW5kIGJlYXV0aWZ1bCBhdXRoZW50aWNhdGlvbiBmbG93cyBmb3IgYWxsIHVzZXJzLgogICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICc4cHgnIH19PgogICAgICA8c3BhbiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6ICcjNkI3MjgwJywgY29sb3I6ICd3aGl0ZScsIHBhZGRpbmc6ICcycHggOHB4JywgYm9yZGVyUmFkaXVzOiAnNHB4JywgZm9udFNpemU6ICcxMnB4JyB9fT5XYWxsZXQgU0RLczwvc3Bhbj4KICAgIDwvZGl2PgogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iT0tYIFdlYjMgV2FsbGV0IiBocmVmPSJodHRwczovL29reC5jb20vd2ViMyI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9va3h3YWxsZXQtbG9nby5hdmlmIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBZb3VyIHBvcnRhbCB0byBXZWIzLiBBY2Nlc3MgMTAwKyBkZWNlbnRyYWxpemVkIG5ldHdvcmtzIHdpdGggbWFueSBtb3JlIG9uIHRoZSB3YXkKICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzZCNzI4MCcsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+V2FsbGV0IFNES3M8L3NwYW4+CiAgICA8L2Rpdj4KICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9IlRoaXJkd2ViIiBocmVmPSJodHRwczovL3RoaXJkd2ViLmNvbSI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy90aGlyZHdlYi1sb2dvLmF2aWYiIGNsYXNzTmFtZT0icC00IHctZnVsbCBoLTI0IG9iamVjdC1jb3ZlciBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+ICAgIAogICAgRnJvbnRlbmQsIGJhY2tlbmQsIGFuZCBvbmNoYWluIHRvb2xzLiBVbml0eSwgVW5yZWFsIEVuZ2luZSwgYW5kIFJlYWN0IE5hdGl2ZSBTREtzLgogICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICc4cHgnIH19PgogICAgICA8c3BhbiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6ICcjNkI3MjgwJywgY29sb3I6ICd3aGl0ZScsIHBhZGRpbmc6ICcycHggOHB4JywgYm9yZGVyUmFkaXVzOiAnNHB4JywgZm9udFNpemU6ICcxMnB4JyB9fT5XYWxsZXQgU0RLczwvc3Bhbj4KICAgIDwvZGl2PgogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iT3BlbmZvcnQiIGhyZWY9Imh0dHBzOi8vb3BlbmZvcnQueHl6Ij4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL29wZW5mb3J0LWxvZ28uYXZpZiIgY2xhc3NOYW1lPSJwLTQgdy1mdWxsIGgtMjQgb2JqZWN0LWNvbnRhaW4gYmctYmxhY2sgcm91bmRlZC14bCBtdC0zIiAvPgogICAgT3BlbmZvcnQgaXMgYSBibG9ja2NoYWluIGFkdmFuY2VkIHBsYXRmb3JtIHRoYXQgcHJvdmlkZXMgZGV2ZWxvcGVycyB3aXRoIGFkdmFuY2VkIHdhbGxldCBTREsgc29sdXRpb25zLCBmb2N1c2luZyBvbiBzaW1wbGlmeWluZyB3ZWIzIGdhbWUgZGV2ZWxvcG1lbnQgdGhyb3VnaCBhY2NvdW50IGFic3RyYWN0aW9uIHRlY2hub2xvZ2llcy4KICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzZCNzI4MCcsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+V2FsbGV0IFNES3M8L3NwYW4+CiAgICA8L2Rpdj4KICA8L0NhcmQ+CjwvQ2FyZEdyb3VwPgo=",
    "lastUpdated": "2025-09-02T19:36:09.975Z"
  },
  {
    "sourceFile": "ecosystem/onchain-sdks.mdx",
    "sourceHash": "CjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgdGl0bGU9IlRoaXJkd2ViIiBocmVmPSJodHRwczovL3RoaXJkd2ViLmNvbSI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy90aGlyZHdlYi1sb2dvLmF2aWYiIGNsYXNzTmFtZT0icC00IHctZnVsbCBoLTI0IG9iamVjdC1jb3ZlciBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBGcm9udGVuZCwgYmFja2VuZCwgYW5kIG9uY2hhaW4gdG9vbHMuIFVuaXR5LCBVbnJlYWwgRW5naW5lLCBhbmQgUmVhY3QgTmF0aXZlIFNES3MuCiAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblRvcDogJzhweCcgfX0+CiAgICAgIDxzcGFuIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyMwMDdBRkYnLCBjb2xvcjogJ3doaXRlJywgcGFkZGluZzogJzJweCA4cHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnLCBmb250U2l6ZTogJzEycHgnLCBtYXJnaW5SaWdodDogJzhweCcgfX0+QjMgU3VwcG9ydDwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzZCNzI4MCcsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+R2FtaW5nIFNES3M8L3NwYW4+CiAgICA8L2Rpdj4KICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9IkJsb2NrdXMiIGhyZWY9Imh0dHBzOi8vYmxvY2t1cy5nZyI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9ibG9ja3VzLWxvZ28uc3ZnIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBEZXZlbG9wZXIgdG9vbHMgZm9yIHNlYW1sZXNzIGJsb2NrY2hhaW4gaW50ZWdyYXRpb246IFNES3MsIGRldGFpbGVkIGRvY3VtZW50YXRpb24sIGFuZCBkZWRpY2F0ZWQgc3VwcG9ydCBlbXBvd2VyIHlvdSB0byBmb2N1cyBvbiBjcmVhdGluZyBlbmdhZ2luZyBnYW1lcGxheS4KICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzAwN0FGRicsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcsIG1hcmdpblJpZ2h0OiAnOHB4JyB9fT5CMyBTdXBwb3J0PC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6ICcjNkI3MjgwJywgY29sb3I6ICd3aGl0ZScsIHBhZGRpbmc6ICcycHggOHB4JywgYm9yZGVyUmFkaXVzOiAnNHB4JywgZm9udFNpemU6ICcxMnB4JyB9fT5HYW1pbmcgU0RLczwvc3Bhbj4KICAgIDwvZGl2PgogIDwvQ2FyZD4KPC9DYXJkR3JvdXA+Cg==",
    "lastUpdated": "2025-09-02T19:36:09.976Z"
  },
  {
    "sourceFile": "ecosystem/node-providers.mdx",
    "sourceHash": "CjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgdGl0bGU9IlF1aWNrbm9kZSIgaHJlZj0iaHR0cHM6Ly9xdWlja25vZGUuY29tIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3F1aWNrbm9kZS1sb2dvLmF2aWYiIGNsYXNzTmFtZT0icC00IHctZnVsbCBoLTI0IG9iamVjdC1jb250YWluIGJnLWJsYWNrIHJvdW5kZWQteGwgbXQtMyIgLz4KICAgIFF1aWNrbm9kZSBpcyBhIGJsb2NrY2hhaW4gaW5mcmFzdHJ1Y3R1cmUgYW5kIHNlcnZpY2VzIHByb3ZpZGVyIHRoYXQgcHJvdmlkZXMgZWFzeS1hY2Nlc3MgdG8gQjMgbWFpbm5ldAogICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICc4cHgnIH19PgogICAgICA8c3BhbiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6ICcjMDA3QUZGJywgY29sb3I6ICd3aGl0ZScsIHBhZGRpbmc6ICcycHggOHB4JywgYm9yZGVyUmFkaXVzOiAnNHB4JywgZm9udFNpemU6ICcxMnB4JyB9fT5CMyBTdXBwb3J0PC9zcGFuPgogICAgPC9kaXY+CiAgPC9DYXJkPgo8L0NhcmRHcm91cD4K",
    "lastUpdated": "2025-09-02T19:36:09.977Z"
  },
  {
    "sourceFile": "ecosystem/nft-infrastructure.mdx",
    "sourceHash": "CjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgdGl0bGU9IlJlc2Vydm9pciIgaHJlZj0iaHR0cHM6Ly9yZXNlcnZvaXIudG9vbHMiPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvcmVzZXJ2b2lyLWxvZ28uc3ZnIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBORlQgaW5mcmFzdHJ1Y3R1cmUgZW5hYmxpbmcgdGhlIG5leHQtZ2VuIG9mIE5GVCBwcm9kdWN0cy4KICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzAwN0FGRicsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+QjMgU3VwcG9ydDwvc3Bhbj4KICAgIDwvZGl2PgogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iU2ltcGxlSGFzaCIgaHJlZj0iaHR0cHM6Ly9zaW1wbGVoYXNoLmNvbSI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9zaW1wbGVoYXNoLWxvZ28uYXZpZiIgY2xhc3NOYW1lPSJwLTQgdy1mdWxsIGgtMjQgb2JqZWN0LWNvbnRhaW4gYmctYmxhY2sgcm91bmRlZC14bCBtdC0zIiAvPgogICAgQWNjZXNzIHRva2VuICYgTkZUIGRhdGEgd2l0aCBlYXNlIHRocm91Z2ggU2ltcGxlSGFzaC4KICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzAwN0FGRicsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+QjMgU3VwcG9ydDwvc3Bhbj4KICAgIDwvZGl2PgogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iVGhpcmR3ZWIgSW5zaWdodHMiIGhyZWY9Imh0dHBzOi8vdGhpcmR3ZWIuY29tIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3RoaXJkd2ViLWxvZ28uYXZpZiIgY2xhc3NOYW1lPSJwLTQgdy1mdWxsIGgtMjQgb2JqZWN0LWNvdmVyIGJnLWJsYWNrIHJvdW5kZWQteGwgbXQtMyIgLz4gICAgCiAgICBGcm9udGVuZCwgYmFja2VuZCwgYW5kIG9uY2hhaW4gdG9vbHMuIFVuaXR5LCBVbnJlYWwgRW5naW5lLCBhbmQgUmVhY3QgTmF0aXZlIFNES3MuCiAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblRvcDogJzhweCcgfX0+CiAgICAgIDxzcGFuIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyMwMDdBRkYnLCBjb2xvcjogJ3doaXRlJywgcGFkZGluZzogJzJweCA4cHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnLCBmb250U2l6ZTogJzEycHgnLCBtYXJnaW5SaWdodDogJzhweCcgfX0+QjMgU3VwcG9ydDwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzZCNzI4MCcsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+R2FtaW5nIFNES3M8L3NwYW4+CiAgICA8L2Rpdj4KICA8L0NhcmQ+CjwvQ2FyZEdyb3VwPgo=",
    "lastUpdated": "2025-09-02T19:36:09.978Z"
  },
  {
    "sourceFile": "ecosystem/introduction.mdx",
    "sourceHash": "CiA8aWZyYW1lCiAgIGNsYXNzTmFtZT0idy1mdWxsIGFzcGVjdC12aWRlbyByb3VuZGVkLXhsIgogICAgc3JjPSJodHRwczovL2N1c3RvbWVyLWdnNnFzN25tNXVlOTR0NjQuY2xvdWRmbGFyZXN0cmVhbS5jb20vYjJjNzRlMmJhMWI5MDU3ZDlkNDFhN2U2M2I4MzIzMGUvaWZyYW1lP211dGVkPXRydWUmbG9vcD10cnVlJmF1dG9wbGF5PXRydWUmcG9zdGVyPWh0dHBzJTNBJTJGJTJGY3VzdG9tZXItZ2c2cXM3bm01dWU5NHQ2NC5jbG91ZGZsYXJlc3RyZWFtLmNvbSUyRmIyYzc0ZTJiYTFiOTA1N2Q5ZDQxYTdlNjNiODMyMzBlJTJGdGh1bWJuYWlscyUyRnRodW1ibmFpbC5qcGclM0Z0aW1lJTNEJTI2aGVpZ2h0JTNENjAwIgogICAgdGl0bGU9IkIzIE9wZW4gRWNvc3lzdGVtIgogICAgZnJhbWVCb3JkZXI9IjAiCiAgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiCiAgYWxsb3dGdWxsU2NyZWVuCiAgPjwvaWZyYW1lPgoKICA8YnIgLz4KCjxDYXJkIHRpdGxlPSJHZXQgaW4gVG91Y2giIGljb249ImhhbmRzaGFrZSIgaHJlZj0iaHR0cHM6Ly9iM2J1aWxkZXJzLnR5cGVmb3JtLmNvbS9ic21udGRldmVsb3BlcnMiIGhvcml6b250YWw+CiAgVGhpbmtpbmcgYWJvdXQgYnVpbGRpbmcgeW91ciBhcHAgb3IgZ2FtZSBvbiBCMz8gIExldCdzIGNoYXQuCjwvQ2FyZD4KCiMgQjMgU0RLCkV4Y2x1c2l2ZWx5IGF2YWlsYWJsZSBvbiBCMywgb3VyIFNESyBtYWtlcyBpdCBlYXN5IHRvIGNyZWF0ZSBmdW4gb25jaGFpbiBleHBlcmllbmNlcy4KCjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgaHJlZj0iL3Nkay9nbG9iYWwtYWNjb3VudC9hdXRoZW50aWNhdGlvbiI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9sb2dpbi1iYW5uZXIuanBnIiBjbGFzc05hbWU9InctZnVsbCBoLTQ4IG9iamVjdC1jb3ZlciByb3VuZGVkLXhsIG1iLTQiIC8+CiAgICAKICAgIDxoMyBjbGFzc05hbWU9InRleHQtbGcgZm9udC1zZW1pYm9sZCB0ZXh0LXByaW1hcnkgYmxvY2sgbWItMSI+SW5zdGFudCBMb2dpbjwvaDM+CiAgICBJbnN0YW50bHkgb25ib2FyZCBwbGF5ZXJzIHdpdGggZW1iZWRkZWQgc21hcnQgYWNjb3VudHPigJRqdXN0IG9uZSBjbGljayBhbmQgdGhleSdyZSBpbiB0aGUgZ2FtZS4KICA8L0NhcmQ+CiAgCiAgPENhcmQgaHJlZj0iL3Nkay9nbG9iYWwtYWNjb3VudC9pbnRyb2R1Y3Rpb24iPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvcHJvZmlsZXMtYmFubmVyLmpwZyIgY2xhc3NOYW1lPSJ3LWZ1bGwgaC00OCBvYmplY3QtY292ZXIgcm91bmRlZC14bCBtYi00IiAvPgogICAgCiAgICA8aDMgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC1wcmltYXJ5IGJsb2NrIG1iLTEiPktub3cgWW91ciBQbGF5ZXIncyBJZGVudGl0eTwvaDM+CiAgICBVbmxvY2sgaW5zdGFudCBhY2Nlc3MgdG8gcGxheWVyIGRhdGEgYWNyb3NzIHRoZSBlY29zeXN0ZW0gYW5kIHRoZWlyIG9uY2hhaW4gZ2FtZXIgZGF0YS4KICA8L0NhcmQ+CjwvQ2FyZEdyb3VwPgoKIyMjIFNjYWxlIFlvdXIgR2FtZQoKPENhcmRHcm91cCBjb2xzPXsyfT4KICA8Q2FyZCBocmVmPSIvYmFzZW1lbnQvaW50cm9kdWN0aW9uIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL2xlYWRlcmJvYXJkcy1iYW5uZXIuanBnIiBjbGFzc05hbWU9InctZnVsbCBoLTQ4IG9iamVjdC1jb3ZlciByb3VuZGVkLXhsIG1iLTQiIC8+CiAgICAKICAgIDxoMyBjbGFzc05hbWU9InRleHQtbGcgZm9udC1zZW1pYm9sZCB0ZXh0LXByaW1hcnkgYmxvY2sgbWItMSI+RGVwbG95IE9uY2hhaW4gTGVhZGVyYm9hcmRzPC9oMz4KICAgIENyZWF0ZSBjb21wZXRpdGl2ZSByYW5raW5ncyB0aWVkIHRvIHJlYWwgZ2FtZXBsYXkgZGF0YSBhbmQgY3Jvc3MtZ2FtZSBhY2hpZXZlbWVudHMuCiAgPC9DYXJkPgogIAogIDxDYXJkIGhyZWY9Ii9iYXNlbWVudC9pbnRyb2R1Y3Rpb24iPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvYWNoaWV2ZW1lbnRzLWJhbm5lci5qcGciIGNsYXNzTmFtZT0idy1mdWxsIGgtNDggb2JqZWN0LWNvdmVyIHJvdW5kZWQteGwgbWItNCIgLz4KICAgIAogICAgPGgzIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtcHJpbWFyeSBibG9jayBtYi0xIj5DcmVhdGUgQ3VzdG9tIEFjaGlldmVtZW50czwvaDM+CiAgICBDcmVhdGUgb25jaGFpbiBhY2hpZXZlbWVudHMgdGllZCB0byBnYW1lcGxheSwgbG95YWx0eSwgb3IgY29tbXVuaXR5IGFjdGlvbnMuIExldCBwbGF5ZXJzIHdlYXIgdGhlaXIgd2lucyBhY3Jvc3MgdGhlIGVjb3N5c3RlbS4KICA8L0NhcmQ+CiAgCiAgPENhcmQgaHJlZj0iL2Jhc2VtZW50L2ludHJvZHVjdGlvbiI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy90b3VybmFtZW50cy1iYW5uZXIuanBnIiBjbGFzc05hbWU9InctZnVsbCBoLTQ4IG9iamVjdC1jb3ZlciByb3VuZGVkLXhsIG1iLTQiIC8+CiAgICAKICAgIDxoMyBjbGFzc05hbWU9InRleHQtbGcgZm9udC1zZW1pYm9sZCB0ZXh0LXByaW1hcnkgYmxvY2sgbWItMSI+TGF1bmNoIEluc3RhbnQgVG91cm5hbWVudHM8L2gzPgogICAgU3BpbiB1cCB0b3VybmFtZW50cyBpbnN0YW50bHkgdG8gYm9vc3QgcmV0ZW50aW9uLCBkcml2ZSBjb21wZXRpdGlvbiwgYW5kIG1vbmV0aXplIHlvdXIgZ2FtZS4KICA8L0NhcmQ+CiAgCiAgPENhcmQgaHJlZj0iL2Jhc2VtZW50L2ludHJvZHVjdGlvbiI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy92ZXJzdXMtYmFubmVyLmpwZyIgY2xhc3NOYW1lPSJ3LWZ1bGwgaC00OCBvYmplY3QtY292ZXIgcm91bmRlZC14bCBtYi00IiAvPgogICAgCiAgICA8aDMgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC1wcmltYXJ5IGJsb2NrIG1iLTEiPkVuYWJsZSBXYWdlciBEdWVsczwvaDM+CiAgICBBbGxvdyBwbGF5ZXJzIGNoYWxsZW5nZSBlYWNoIG90aGVyIGluIHJlYWwtdGltZSBQdlAuIEFkZCB3YWdlcnMsIFhQLCBvciBwcml6ZXMgdG8gZXZlcnkgbWF0Y2guCiAgPC9DYXJkPgogIAogIDxDYXJkIGhyZWY9Ii9zZGsvZ2xvYmFsLWFjY291bnQvcGVybWlzc2lvbnMiPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvdW5sb2NrLWJhbm5lci5qcGciIGNsYXNzTmFtZT0idy1mdWxsIGgtNDggb2JqZWN0LWNvdmVyIHJvdW5kZWQteGwgbWItNCIgLz4KICAgIAogICAgPGgzIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtcHJpbWFyeSBibG9jayBtYi0xIj5DcmVhdGUgRXhjbHVzaXZpdHkgd2l0aCBUb2tlbiBHYXRpbmc8L2gzPgogICAgRW5hYmxlIHVzZXJzIHRvIHVubG9jayBleGNsdXNpdmUgY29udGVudCwgZ2FtZSBtb2Rlcywgb3IgcGVya3MgYmFzZWQgb24gTkZUIG9yIHRva2VuIGhvbGRpbmdzLgogIDwvQ2FyZD4KICAKICA8Q2FyZCBocmVmPSIvZWNvc3lzdGVtL2ludHJvZHVjdGlvbiI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9ub3RpZmljYXRpb25zLWJhbm5lci5qcGciIGNsYXNzTmFtZT0idy1mdWxsIGgtNDggb2JqZWN0LWNvdmVyIHJvdW5kZWQteGwgbWItNCIgLz4KICAgIAogICAgPGgzIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtcHJpbWFyeSBibG9jayBtYi0xIj5TZW5kIE9uY2hhaW4gTm90aWZpY2F0aW9uczwvaDM+CiAgICBUcmlnZ2VyIHdhbGxldC1iYXNlZCBhbGVydHMgdGllZCB0byBnYW1lcGxheSwgYWNoaWV2ZW1lbnRzLCBkcm9wcywgb3IgZXZlbnRzIHRvIHJlLWVuZ2FnZSB1c2Vycy4KICA8L0NhcmQ+CjwvQ2FyZEdyb3VwPgoKIyMjIFVubG9jayBOZXcgV2F5cyB0byBNb25ldGl6ZQoKPENhcmRHcm91cCBjb2xzPXsyfT4KICA8Q2FyZCBocmVmPSIvYW55c3BlbmQvaW50cm9kdWN0aW9uIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL2FueXNwZW5kLWV4YW1wbGUtYmFubmVyLmpwZyIgY2xhc3NOYW1lPSJ3LWZ1bGwgaC00OCBvYmplY3QtY292ZXIgcm91bmRlZC14bCBtYi00IiAvPgogICAgCiAgICA8aDMgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC1wcmltYXJ5IGJsb2NrIG1iLTEiPkFjY2VwdCBQYXltZW50cyBXaXRob3V0IEZyaWN0aW9uPC9oMz4KICAgIEVuYWJsZSB1c2VycyB0byBtYWtlIHB1cmNoYXNlcyB3aXRoIG5vIEtZQyB1c2luZyBmaWF0IG9yIEFOWSB0b2tlbiBvbiBBTlkgY2hhaW4uIEl0J3MgdGhlIGVhc2llc3Qgd2F5IHRvIHBheS4KICA8L0NhcmQ+CiAgCiAgPENhcmQgaHJlZj0iL2NyZWF0ZWtpdC9pbnRyb2R1Y3Rpb24iPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvY2xhaW0tYmFubmVyLmpwZyIgY2xhc3NOYW1lPSJ3LWZ1bGwgaC00OCBvYmplY3QtY292ZXIgcm91bmRlZC14bCBtYi00IiAvPgogICAgCiAgICA8aDMgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC1wcmltYXJ5IGJsb2NrIG1iLTEiPkNyZWF0ZSBOYXRpdmUgR2FtZSBUb2tlbnM8L2gzPgogICAgRWFzaWx5IGNyZWF0ZSBjdXN0b20gdG9rZW5zIHRoYXQgcG93ZXIgcHJvZ3Jlc3Npb24sIHJld2FyZHMsIG9yIG93bmVyc2hpcOKAlG5hdGl2ZWx5IHRpZWQgdG8geW91ciBnYW1lIGxvZ2ljLgogIDwvQ2FyZD4KICAKICA8Q2FyZCBocmVmPSIvY3JlYXRla2l0L2ludHJvZHVjdGlvbiI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9tYXJrZXRwbGFjZS1iYW5uZXIuanBnIiBjbGFzc05hbWU9InctZnVsbCBoLTQ4IG9iamVjdC1jb3ZlciByb3VuZGVkLXhsIG1iLTQiIC8+CiAgICAKICAgIDxoMyBjbGFzc05hbWU9InRleHQtbGcgZm9udC1zZW1pYm9sZCB0ZXh0LXByaW1hcnkgYmxvY2sgbWItMSI+VHVybiBBbnkgQXNzZXQgaW50byBhIE1hcmtldHBsYWNlPC9oMz4KICAgIEZyb20gYWNoaWV2ZW1lbnRzIHRvIHNraW5zIHRvIHVzZXItZ2VuZXJhdGVkIGNvbnRlbnQsIHR1cm4gYW55IGluLWdhbWUgYXNzZXQgaW50byBhIGNvbGxlY3RpYmxlIHRoYXQgcGxheWVycyBjYW4gdHJhZGUuCiAgPC9DYXJkPgo8L0NhcmRHcm91cD4KCiMjIyBEYXRhIEFQSQpHZXR0aW5nIGJsb2NrY2hhaW4gZGF0YSBmcm9tIEIzICYgb3VyIGFwcGNoYWlucyBpcyBlYXN5IC0gYW5kICoqZnJlZSoqLgoKPENhcmQgdGl0bGU9IkRhdGEgQVBJIiBpY29uPSJkYXRhYmFzZSIgaHJlZj0iL2RhdGEvYXBpLXJlZmVyZW5jZS9pbnRyb2R1Y3Rpb24iIGhvcml6b250YWwgYXJyb3c9InRydWUiPgogIEdldCBhY2Nlc3MgdG8gQjMgZWNvc3lzdGVtIGRhdGEgd2l0aCBvdXIgZnJlZSBBUEkuCjwvQ2FyZD4KPFRpcD4KICBXZSBhdXRvbWF0aWNhbGx5IG1lcmdlIG91ciBtdWx0aXBsZSwgaG9yaXpvbnRhbGx5IHNjYWxlZCBjaGFpbnMsIGFic3RyYWN0aW5nIHRoZSBjb21wbGV4aXR5IG9mIHdvcmtpbmcgd2l0aCBtdWx0aXBsZSBhcHBjaGFpbnMuCjwvVGlwPgoKIyMjIEJ1aWxkIG9uIEIzCgo8Q2FyZCB0aXRsZT0iR2V0IGluIFRvdWNoIiBpY29uPSJoYW5kc2hha2UiIGhyZWY9Imh0dHBzOi8vYjNidWlsZGVycy50eXBlZm9ybS5jb20vYnNtbnRkZXZlbG9wZXJzIiBob3Jpem9udGFsPgogIFRoaW5raW5nIGFib3V0IGJ1aWxkaW5nIHlvdXIgYXBwIG9yIGdhbWUgb24gQjM/ICBMZXQncyBjaGF0IQo8L0NhcmQ+CgojIyBFY29zeXN0ZW0gVG9vbHMKCkV4cGxvcmUgb3VyIGNvbXByZWhlbnNpdmUgZWNvc3lzdGVtIG9mIHRvb2xzIGFuZCBzZXJ2aWNlczoKCjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgdGl0bGU9IlNES3MiIGljb249ImdhbWVwYWQiIGhyZWY9Ii9lY29zeXN0ZW0vb25jaGFpbi1zZGtzIj4KICAgIE5leHQuanMsIFVuaXR5LCBVbnJlYWwgRW5naW5lLCBSZWFjdCwgYW5kIG1vcmUKICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9Ik5vZGUgUHJvdmlkZXJzIiBpY29uPSJzZXJ2ZXIiIGhyZWY9Ii9lY29zeXN0ZW0vbm9kZS1wcm92aWRlcnMiPgogICAgQmxvY2tjaGFpbiBpbmZyYXN0cnVjdHVyZSBhbmQgUlBDIHByb3ZpZGVycwogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iQnJpZGdlcyIgaWNvbj0ibGluayIgaHJlZj0iL2Vjb3N5c3RlbS9icmlkZ2VzIj4KICAgIENyb3NzLWNoYWluIGJyaWRnaW5nIHNvbHV0aW9ucyBmb3IgQjMKICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9Ik5GVCBJbmZyYXN0cnVjdHVyZSIgaWNvbj0iZ2VtIiBocmVmPSIvZWNvc3lzdGVtL25mdC1pbmZyYXN0cnVjdHVyZSI+CiAgICBUb29scyBmb3IgTkZUIGNyZWF0aW9uLCBtYW5hZ2VtZW50LCBhbmQgdHJhZGluZwogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iV2FsbGV0cyIgaWNvbj0id2FsbGV0IiBocmVmPSIvZWNvc3lzdGVtL3dhbGxldHMiPgogICAgV2FsbGV0IHNvbHV0aW9ucyBhbmQgYXV0aGVudGljYXRpb24gcHJvdmlkZXJzCiAgPC9DYXJkPgogIAogIDxDYXJkIHRpdGxlPSJEYXRhICYgQW5hbHl0aWNzIiBpY29uPSJjaGFydC1iYXIiIGhyZWY9Ii9lY29zeXN0ZW0vZGF0YS1hbmFseXRpY3MiPgogICAgRGF0YSBpbmRleGVycywgYW5hbHl0aWNzLCBhbmQgdXNlciBhY3F1aXNpdGlvbiB0b29scwogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iSW5mcmFzdHJ1Y3R1cmUiIGljb249IndyZW5jaCIgaHJlZj0iL2Vjb3N5c3RlbS9pbmZyYXN0cnVjdHVyZSI+CiAgICBPcmFjbGVzLCBhY2NvdW50IGFic3RyYWN0aW9uLCBtdWx0aXNpZywgYW5kIG1vcmUKICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9IkdvdmVybmFuY2UiIGljb249InVzZXJzIiBocmVmPSIvZWNvc3lzdGVtL2dvdmVybmFuY2UiPgogICAgR292ZXJuYW5jZSBwbGF0Zm9ybXMgYW5kIHRvb2xzCiAgPC9DYXJkPgo8L0NhcmRHcm91cD4K",
    "lastUpdated": "2025-09-02T19:36:09.979Z"
  },
  {
    "sourceFile": "ecosystem/infrastructure.mdx",
    "sourceHash": "CjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgdGl0bGU9IlB5dGgiIGhyZWY9Imh0dHBzOi8vcHl0aC5uZXR3b3JrIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3B5dGgtbG9nby5zdmciIGNsYXNzTmFtZT0icC00IHctZnVsbCBoLTI0IG9iamVjdC1jb250YWluIGJnLWJsYWNrIHJvdW5kZWQteGwgbXQtMyIgLz4KICAgIFNlY3VyZSB5b3VyIHNtYXJ0IGNvbnRyYWN0cyB3aXRoIHJlbGlhYmxlLCBsb3ctbGF0ZW5jeSBtYXJrZXQgZGF0YSBmcm9tIGluc3RpdHV0aW9uYWwgc291cmNlcy4KICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzZCNzI4MCcsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+T3JhY2xlczwvc3Bhbj4KICAgIDwvZGl2PgogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iQ2FsZGVyYSIgaHJlZj0iaHR0cHM6Ly9jYWxkZXJhLnh5eiI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9jYWxkZXJhLWxvZ28uYXZpZiIgY2xhc3NOYW1lPSJwLTQgdy1mdWxsIGgtMjQgb2JqZWN0LWNvbnRhaW4gYmctYmxhY2sgcm91bmRlZC14bCBtdC0zIiAvPgogICAgTGF1bmNoIE9QIFN0YWNrLCBBcmJpdHJ1bSBPcmJpdCwgWksgU3RhY2ssIGFuZCBQb2x5Z29uIENESyByb2xsdXBzIHdpdGggQ2FsZGVyYSwgeW91ciBwYXJ0bmVyIGZyb20gZGV2ZWxvcG1lbnQgdG8gbGF1bmNoLCBhbmQgYmV5b25kCiAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblRvcDogJzhweCcgfX0+CiAgICAgIDxzcGFuIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyM2QjcyODAnLCBjb2xvcjogJ3doaXRlJywgcGFkZGluZzogJzJweCA4cHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnLCBmb250U2l6ZTogJzEycHgnIH19PlJvbGx1cC1hcy1hLVNlcnZpY2U8L3NwYW4+CiAgICA8L2Rpdj4KICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9IkRlbiIgaHJlZj0iaHR0cHM6Ly9vbmNoYWluZGVuLmNvbSI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9kZW4tbG9nby5hdmlmIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBUaGUgZmFzdGVzdCBtdWx0aXNpZyBmb3Igb25jaGFpbiB0ZWFtcy4KICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzZCNzI4MCcsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+TXVsdGlTaWc8L3NwYW4+CiAgICA8L2Rpdj4KICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9IlBpbWxpY28iIGhyZWY9Imh0dHBzOi8vcGltbGljby5pbyI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9waW1saWNvLWxvZ28uc3ZnIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBQaW1saWNvIHByb3ZpZGVzIGEgc3VpdGUgb2YgdG9vbHMgYW5kIHNlcnZpY2VzIHRvIGhlbHAgeW91IGJ1aWxkLCBkZXBsb3ksIGFuZCBtYW5hZ2Ugc21hcnQgYWNjb3VudHMgb24gRXRoZXJldW0gYW5kIG90aGVyIEVWTS1jb21wYXRpYmxlIGNoYWlucy4KICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzZCNzI4MCcsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+QWNjb3VudCBBYnN0cmFjdGlvbjwvc3Bhbj4KICAgIDwvZGl2PgogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iQmxvY2tzY291dCIgaHJlZj0iaHR0cHM6Ly9ibG9ja3Njb3V0LmIzLmZ1biI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9ibG9ja3Njb3V0LWxvZ28uc3ZnIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBPcGVuLXNvdXJjZSwgdW5pdmVyc2FsbHkgYWNjZXNzaWJsZSwgYmxvY2sgZXhwbG9yZXIuCiAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblRvcDogJzhweCcgfX0+CiAgICAgIDxzcGFuIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyMwMDdBRkYnLCBjb2xvcjogJ3doaXRlJywgcGFkZGluZzogJzJweCA4cHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnLCBmb250U2l6ZTogJzEycHgnIH19PkIzIE1haW5uZXQgRXhwbG9yZXI8L3NwYW4+CiAgICA8L2Rpdj4KICA8L0NhcmQ+CjwvQ2FyZEdyb3VwPgo=",
    "lastUpdated": "2025-09-02T19:36:09.979Z"
  },
  {
    "sourceFile": "ecosystem/governance.mdx",
    "sourceHash": "CjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgdGl0bGU9IkFnb3JhIiBocmVmPSJodHRwczovL2Fnb3JhLnZvdGUiPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvYWdvcmEtbG9nby5hdmlmIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBBZ29yYSBpcyB0aGUgaG9tZSBvZiBvbmNoYWluIGdvdmVybmFuY2UuCiAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblRvcDogJzhweCcgfX0+CiAgICAgIDxzcGFuIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogJyM2QjcyODAnLCBjb2xvcjogJ3doaXRlJywgcGFkZGluZzogJzJweCA4cHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnLCBmb250U2l6ZTogJzEycHgnIH19PkdvdmVybmFuY2UgUGxhdGZvcm1zPC9zcGFuPgogICAgPC9kaXY+CiAgPC9DYXJkPgo8L0NhcmRHcm91cD4K",
    "lastUpdated": "2025-09-02T19:36:09.980Z"
  },
  {
    "sourceFile": "ecosystem/data-analytics.mdx",
    "sourceHash": "CjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgdGl0bGU9IlN1YnNxdWlkIiBocmVmPSJodHRwczovL3N1YnNxdWlkLmlvIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3N1YnNxdWlkLWxvZ28uYXZpZiIgY2xhc3NOYW1lPSJwLTQgdy1mdWxsIGgtMjQgb2JqZWN0LWNvbnRhaW4gYmctYmxhY2sgcm91bmRlZC14bCBtdC0zIiAvPgogICAgQSBwZWVyLXRvLXBlZXIgbmV0d29yayB0byBiYXRjaCBxdWVyeSBhbmQgYWdncmVnYXRlIHRlcmFieXRlcyBvZiBvbi1jaGFpbiBhbmQgb2ZmLWNoYWluIGRhdGEKICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzZCNzI4MCcsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+RGF0YSBJbmRleGVyczwvc3Bhbj4KICAgIDwvZGl2PgogIDwvQ2FyZD4KCiAgPENhcmQgdGl0bGU9IkR1bmUiIGhyZWY9Imh0dHBzOi8vZHVuZS5jb20vYjMvYjMtb3ZlcnZpZXctcHVibGljIj4KICAgIDxpbWcgc3JjPSJodHRwczovL2R1bmUuY29tL2Fzc2V0cy9EdW5lTG9nb0NpcmNsZS5zdmciIGNsYXNzTmFtZT0icC00IHctZnVsbCBoLTI0IG9iamVjdC1jb250YWluIGJnLWJsYWNrIHJvdW5kZWQteGwgbXQtMyIgLz4KICAgIER1bmUgaXMgYSBwbGF0Zm9ybSBmb3IgYnVpbGRpbmcgYW5kIHNoYXJpbmcgZGF0YSB2aXN1YWxpemF0aW9ucy4KICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzZCNzI4MCcsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+RGF0YSBBbmFseXRpY3M8L3NwYW4+CiAgICA8L2Rpdj4KICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9IkhlbGlrYSIgaHJlZj0iaHR0cHM6Ly9oZWxpa2EuaW8iPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvaGVsaWthLWxvZ28td2hpdGUuc3ZnIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBIZWxpa2EgcHJvdmlkZXMgY3VzdG9tIGdhbWUgb3B0aW1pemF0aW9uIHRocm91Z2ggcGVyc29uYWxpemVkIGluc2lnaHRzIGZyb20gZXhwZXJpZW5jZWQgYW5hbHlzdHMsIHVuaWZ5aW5nIG9uLWNoYWluLCBpbi1nYW1lLCBhbmQgY29tbXVuaXR5IGRhdGEgdG8gZHJpdmUgZ3Jvd3RoLgogICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICc4cHgnIH19PgogICAgICA8c3BhbiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6ICcjNkI3MjgwJywgY29sb3I6ICd3aGl0ZScsIHBhZGRpbmc6ICcycHggOHB4JywgYm9yZGVyUmFkaXVzOiAnNHB4JywgZm9udFNpemU6ICcxMnB4JyB9fT5Vc2VyIEFjcXVpc2l0aW9uPC9zcGFuPgogICAgPC9kaXY+CiAgPC9DYXJkPgo8L0NhcmRHcm91cD4K",
    "lastUpdated": "2025-09-02T19:36:09.981Z"
  },
  {
    "sourceFile": "ecosystem/bridges.mdx",
    "sourceHash": "CjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgdGl0bGU9IkJhc2VtZW50LmZ1biIgaHJlZj0iaHR0cHM6Ly9iYXNlbWVudC5mdW4iPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvYmFzZW1lbnQtbG9nby1wdXJwbGUuc3ZnIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBJbnN0YW50LCBzZWFtbGVzcyBicmlkZ2luZyB0byBCMyB1c2luZyBmdW5kcyBvbiBvdGhlciBwb3B1bGFyIG5ldHdvcmtzLgogICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICc4cHgnIH19PgogICAgICA8c3BhbiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6ICcjMDA3QUZGJywgY29sb3I6ICd3aGl0ZScsIHBhZGRpbmc6ICcycHggOHB4JywgYm9yZGVyUmFkaXVzOiAnNHB4JywgZm9udFNpemU6ICcxMnB4JyB9fT5CcmlkZ2UgTm93PC9zcGFuPgogICAgPC9kaXY+CiAgPC9DYXJkPgogIAogIDxDYXJkIHRpdGxlPSJSZWxheSIgaHJlZj0iaHR0cHM6Ly9yZWxheS5saW5rIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL3JlbGF5LWxvZ28uYXZpZiIgY2xhc3NOYW1lPSJwLTQgdy1mdWxsIGgtMjQgb2JqZWN0LWNvbnRhaW4gYmctYmxhY2sgcm91bmRlZC14bCBtdC0zIiAvPgogICAgSW5zdGFudCwgbG93LWNvc3QgYnJpZGdpbmcgYW5kIHN3YXBwaW5nLiBQb3dlcmVkIGJ5IFJlc2Vydm9pcgogICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICc4cHgnIH19PgogICAgICA8c3BhbiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6ICcjMDA3QUZGJywgY29sb3I6ICd3aGl0ZScsIHBhZGRpbmc6ICcycHggOHB4JywgYm9yZGVyUmFkaXVzOiAnNHB4JywgZm9udFNpemU6ICcxMnB4JyB9fT5CcmlkZ2U8L3NwYW4+CiAgICA8L2Rpdj4KICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9Ik9wdGltaXNtIENhbm9uaWNhbCBCcmlkZ2UiIGhyZWY9Imh0dHBzOi8vYnJpZGdlLmIzLmZ1biI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9iMy1sb2dvLWJsdWUuc3ZnIiBjbGFzc05hbWU9InAtNCB3LWZ1bGwgaC0yNCBvYmplY3QtY29udGFpbiBiZy1ibGFjayByb3VuZGVkLXhsIG10LTMiIC8+CiAgICBCYXR0bGUgdGVzdGVkIE9QIHN0YWNrIGNhbm9uaWNhbCBicmlkZ2UuIEhhcyBhIDctZGF5IGNoYWxsZW5nZSBwZXJpb2Qgb24gd2l0aGRyYXdhbHMgb25seS4KICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOHB4JyB9fT4KICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzAwN0FGRicsIGNvbG9yOiAnd2hpdGUnLCBwYWRkaW5nOiAnMnB4IDhweCcsIGJvcmRlclJhZGl1czogJzRweCcsIGZvbnRTaXplOiAnMTJweCcgfX0+QnJpZGdlPC9zcGFuPgogICAgPC9kaXY+CiAgPC9DYXJkPgo8L0NhcmRHcm91cD4K",
    "lastUpdated": "2025-09-02T19:36:09.983Z"
  },
  {
    "sourceFile": "hypeduel/tokens-overview.mdx",
    "sourceHash": "Ckh5cGVEdWVsIG9wZXJhdGVzIG9uIGEgc29waGlzdGljYXRlZCB0aHJlZS10b2tlbiBlY29ub21pYyBzeXN0ZW0gZGVzaWduZWQgdG8gb3B0aW1pemUgdXNlciBleHBlcmllbmNlLCBjcmVhdGUgc3VzdGFpbmFibGUgdmFsdWUgZmxvd3MsIGFuZCBlbmFibGUgY29tbXVuaXR5IG93bmVyc2hpcC4gRWFjaCB0b2tlbiBzZXJ2ZXMgYSBzcGVjaWZpYyBwdXJwb3NlIHdoaWxlIHdvcmtpbmcgdG9nZXRoZXIgdG8gcG93ZXIgdGhlIGVudGlyZSBlY29zeXN0ZW0uCgojIyBUaGUgVGhyZWUtVG9rZW4gQXJjaGl0ZWN0dXJlCgpgYGBtZXJtYWlkCmdyYXBoIFRECiAgICBzdWJncmFwaCAiVG9rZW4gSGllcmFyY2h5IgogICAgICAgIEFbQjMgVG9rZW48YnIvPkZvdW5kYXRpb24gQ3VycmVuY3ldIC0tPiBCW0hZUEVTIENyZWRpdHM8YnIvPkdhbWluZyBDdXJyZW5jeTxici8+MToxIHBlZ10KICAgICAgICBBIC0tPiBDW0FyZW5hQ29pbnM8YnIvPkFyZW5hIE93bmVyc2hpcDxici8+Qm9uZGluZyBDdXJ2ZXNdCiAgICBlbmQKCiAgICBzdWJncmFwaCAiQ29yZSBGdW5jdGlvbnMiCiAgICAgICAgQiAtLT4gRFtJbnN0YW50IEJldHRpbmc8YnIvPlplcm8gR2FzIEZlZXNdCiAgICAgICAgQiAtLT4gRVtCb29zdCBQdXJjaGFzZXM8YnIvPlJlYWwtdGltZSBBY3Rpb25dCiAgICAgICAgQyAtLT4gRltGZWUgU2hhcmluZzxici8+UmV2ZW51ZSBSaWdodHNdCiAgICAgICAgQyAtLT4gR1tDb21tdW5pdHk8YnIvPkdvdmVybmFuY2VdCiAgICAgICAgQSAtLT4gSFtDcm9zcy1QbGF0Zm9ybTxici8+VXRpbGl0eV0KICAgICAgICBBIC0tPiBJW1RyZWFzdXJ5PGJyLz5PcGVyYXRpb25zXQogICAgZW5kCgogICAgc3ViZ3JhcGggIlZhbHVlIENyZWF0aW9uIgogICAgICAgIEQgLS0+IEpbUGxhdGZvcm0gR3Jvd3RoXQogICAgICAgIEUgLS0+IEoKICAgICAgICBGIC0tPiBLW1Rva2VuIEFwcHJlY2lhdGlvbl0KICAgICAgICBHIC0tPiBMW0NvbW11bml0eSBCdWlsZGluZ10KICAgICAgICBIIC0tPiBNW0Vjb3N5c3RlbSBFeHBhbnNpb25dCiAgICAgICAgSSAtLT4gTltTdXN0YWluYWJpbGl0eV0KICAgIGVuZAoKICAgIEogLS0+IE9bTW9yZSBQbGF5ZXJzXQogICAgSyAtLT4gTwogICAgTCAtLT4gTwogICAgTSAtLT4gTwogICAgTiAtLT4gTwogICAgTyAtLT4gQQoKICAgIHN0eWxlIEEgZmlsbDojZTNmMmZkCiAgICBzdHlsZSBCIGZpbGw6I2U4ZjVlOAogICAgc3R5bGUgQyBmaWxsOiNmZmYzZTAKICAgIHN0eWxlIE8gZmlsbDojYzhlNmM5CmBgYAoKIyMjIFRva2VuIEhpZXJhcmNoeQoKPFRhYnM+CiAgPFRhYiB0aXRsZT0iJEIzIFRva2VuIiBpY29uPSJjb2lucyI+CiAgICAqKkZvdW5kYXRpb24gQ3VycmVuY3kqKiAtIEJhc2UgZWNvc3lzdGVtIHRva2VuIC0gUHJpbWFyeSBzdG9yZSBvZiB2YWx1ZSAtIENyb3NzLXBsYXRmb3JtIHV0aWxpdHkgLSBUcmVhc3VyeSByZXNlcnZlcwogICAgLSBBcmVuYUNvaW5zIGJvbmRpbmcKICA8L1RhYj4KCjxUYWIgdGl0bGU9IkhZUEVTIENyZWRpdHMiIGljb249InphcCI+CiAgKipHYW1pbmcgQ3VycmVuY3kqKiAtIDE6MSBwZWcgd2l0aCAkQjMgLSBJbnN0YW50IGJldCBwbGFjZW1lbnQgLSBaZXJvIGdhcyBmZWVzIC0gU2VhbWxlc3Mgd2l0aGRyYXdhbHMgLSBCb29zdAogIHB1cmNoYXNlcwo8L1RhYj4KCiAgPFRhYiB0aXRsZT0iQXJlbmFDb2lucyIgaWNvbj0iY2hhcnQtbGluZSI+CiAgICAqKkFyZW5hIE93bmVyc2hpcCoqIC0gVW5pcXVlIHBlciBhcmVuYSAtIEJvbmRpbmcgY3VydmUgcHJpY2luZyAtIEZlZSBzaGFyaW5nIHJpZ2h0cyAtIFRyYWRpbmcgb3Bwb3J0dW5pdGllcyAtCiAgICBDb21tdW5pdHkgZ292ZXJuYW5jZQogIDwvVGFiPgo8L1RhYnM+CgojIyBUb2tlbiBGbG93IERpYWdyYW0KCmBgYG1lcm1haWQKZ3JhcGggVEIKICAgIEFbUGxheWVyc10gLS0+IEJbRGVwb3NpdCAkQjNdCiAgICBCIC0tPiBDW1JlY2VpdmUgSFlQRVMgMToxXQogICAgQyAtLT4gRFtQbGFjZSBCZXRzICYgQnV5IEJvb3N0c10KICAgIEQgLS0+IEVbR2VuZXJhdGUgQXJlbmEgUmV2ZW51ZV0KICAgIEUgLS0+IEZbQXJlbmEgVHJlYXN1cnldCiAgICBGIC0tPiBHW0J1eSAkQjNdCiAgICBGIC0tPiBIW0J1eSBBcmVuYUNvaW5zXQogICAgRyAtLT4gSVskQjMgUHJpY2UgU3VwcG9ydF0KICAgIEggLS0+IEpbQXJlbmFDb2luIFZhbHVlIEluY3JlYXNlXQogICAgSiAtLT4gS1tBdHRyYWN0IEFyZW5hIEludmVzdG9yc10KICAgIEkgLS0+IExbQXR0cmFjdCBNb3JlIFBsYXllcnNdCiAgICBLIC0tPiBBCiAgICBMIC0tPiBBCgogICAgTVtBcmVuYSBDcmVhdG9yc10gLS0+IE5bTGF1bmNoIEFyZW5hXQogICAgTiAtLT4gT1tQbGF5ZXJzIEJvbmQgJEIzXQogICAgTyAtLT4gUFtSZWNlaXZlIEFyZW5hQ29pbnNdCiAgICBQIC0tPiBRW0FyZW5hQ29pbnMgQXBwcmVjaWF0ZV0KICAgIFEgLS0+IE0KYGBgCgojIyBXaHkgVGhyZWUgVG9rZW5zPwoKIyMjIFVzZXIgRXhwZXJpZW5jZSBPcHRpbWl6YXRpb24KClRoZSB0aHJlZS10b2tlbiBzeXN0ZW0gc29sdmVzIGNyaXRpY2FsIFVYIHByb2JsZW1zOgoKPEFjY29yZGlvbkdyb3VwPgogIDxBY2NvcmRpb24gdGl0bGU9Ikluc3RhbnQgVHJhbnNhY3Rpb25zIj4KICAgICoqUHJvYmxlbSoqOiBCbG9ja2NoYWluIHRyYW5zYWN0aW9ucyBoYXZlIGRlbGF5cyBhbmQgZ2FzIGNvc3RzIHRoYXQgaW50ZXJydXB0IGdhbWluZyBmbG93LiAqKlNvbHV0aW9uKio6IEhZUEVTCiAgICBlbmFibGUgaW5zdGFudCBiZXR0aW5nIGFuZCBib29zdHMgd2l0aG91dCBibG9ja2NoYWluIGZyaWN0aW9uIHdoaWxlIG1haW50YWluaW5nIGZ1bGwgJEIzIGJhY2tpbmcuCiAgPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJBcmVuYSBJbnZlc3RtZW50Ij4KICAqKlByb2JsZW0qKjogTm8gd2F5IGZvciB1c2VycyB0byBpbnZlc3QgaW4gb3IgYmVuZWZpdCBmcm9tIHN1Y2Nlc3NmdWwgYXJlbmEgZ3Jvd3RoLiAqKlNvbHV0aW9uKio6IEFyZW5hQ29pbnMgbGV0CiAgcGxheWVycyBvd24gYSBwaWVjZSBvZiBhcmVuYSBlY29ub21pZXMgYW5kIGVhcm4gZnJvbSB0aGVpciBzdWNjZXNzLgo8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IlZhbHVlIENhcHR1cmUiPgogICoqUHJvYmxlbSoqOiBQbGF0Zm9ybSByZXZlbnVlIHR5cGljYWxseSBiZW5lZml0cyBvbmx5IHRoZSBwbGF0Zm9ybSBvd25lci4gKipTb2x1dGlvbioqOiBUcmVhc3VyeSBidXliYWNrcyBvZiBib3RoICRCMwogIGFuZCBBcmVuYUNvaW5zIGRpc3RyaWJ1dGUgdmFsdWUgdG8gYWxsIHN0YWtlaG9sZGVycy4KPC9BY2NvcmRpb24+CgogIDxBY2NvcmRpb24gdGl0bGU9IkNyZWF0b3IgSW5jZW50aXZlcyI+CiAgICAqKlByb2JsZW0qKjogRGlmZmljdWx0IHRvIGZhaXJseSBjb21wZW5zYXRlIGFyZW5hIGFuZCBBSSBtb2RlbCBjcmVhdG9ycy4gKipTb2x1dGlvbioqOiBBcmVuYUNvaW5zIHByb3ZpZGUgZGlyZWN0CiAgICByZXZlbnVlIHNoYXJpbmcgYW5kIGFwcHJlY2lhdGlvbiBwb3RlbnRpYWwgZm9yIGNyZWF0b3JzLgogIDwvQWNjb3JkaW9uPgo8L0FjY29yZGlvbkdyb3VwPgoKIyMjIEVjb25vbWljIFN1c3RhaW5hYmlsaXR5CgpFYWNoIHRva2VuIGNyZWF0ZXMgdmFsdWUgaW4gZGlmZmVyZW50IHdheXM6Cgo8Q2FyZCB0aXRsZT0iJEIzIFZhbHVlIERyaXZlcnMiIGljb249InRyZW5kaW5nLXVwIj4KICAtIEJhc2UgZWNvc3lzdGVtIGdyb3d0aCAtIFRyZWFzdXJ5IGJ1eWJhY2sgcHJlc3N1cmUgLSBDcm9zcy1wbGF0Zm9ybSB1dGlsaXR5IC0gU3Rha2luZyBhbmQgRGVGaSBpbnRlZ3JhdGlvbgo8L0NhcmQ+Cgo8Q2FyZCB0aXRsZT0iSFlQRVMgU3RhYmlsaXR5IiBpY29uPSJiYWxhbmNlLXNjYWxlIj4KICAtIDE6MSAkQjMgYmFja2luZyBndWFyYW50ZWUgLSBJbnN0YW50IGNvbnZlcnNpb24gYWJpbGl0eSAtIEdhbWluZyB1dGlsaXR5IHByZW1pdW0gLSBQbGF0Zm9ybSBjb252ZW5pZW5jZSB2YWx1ZQo8L0NhcmQ+Cgo8Q2FyZCB0aXRsZT0iQXJlbmFDb2luIEFwcHJlY2lhdGlvbiIgaWNvbj0icm9ja2V0Ij4KICAtIEFyZW5hIHBvcHVsYXJpdHkgZ3Jvd3RoIC0gRmVlIGdlbmVyYXRpb24gaW5jcmVhc2UgLSBDb21tdW5pdHkgZGV2ZWxvcG1lbnQgLSBUcmFkaW5nIHZvbHVtZSBleHBhbnNpb24KPC9DYXJkPgoKIyMgVG9rZW4gVXRpbGl0eSBNYXRyaXgKCnwgRmVhdHVyZSAgICAgICAgICAgIHwgJEIzIHwgSFlQRVMgfCBBcmVuYUNvaW5zIHwKfCAtLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0gfCAtLS0tLSB8IC0tLS0tLS0tLS0gfAp8ICoqQmV0dGluZyoqICAgICAgICB8IOKdjCAgfCDinIUgICAgfCDinYwgICAgICAgICB8CnwgKipCb29zdHMqKiAgICAgICAgIHwg4p2MICB8IOKchSAgICB8IOKdjCAgICAgICAgIHwKfCAqKkFyZW5hIEJvbmRpbmcqKiAgfCDinIUgIHwg4p2MICAgIHwg4p2MICAgICAgICAgfAp8ICoqRmVlIEVhcm5pbmcqKiAgICB8IOKchSAgfCDinYwgICAgfCDinIUgICAgICAgICB8CnwgKipUcmFkaW5nKiogICAgICAgIHwg4pyFICB8IOKdjCAgICB8IOKchSAgICAgICAgIHwKfCAqKkdvdmVybmFuY2UqKiAgICAgfCDinIUgIHwg4p2MICAgIHwg4pyFICAgICAgICAgfAp8ICoqQ3Jvc3MtUGxhdGZvcm0qKiB8IOKchSAgfCDinYwgICAgfCDinYwgICAgICAgICB8CgojIyMgVHJlYXN1cnkgTWVjaGFuaWNzCgpBcmVuYSB0cmVhc3VyaWVzIGNyZWF0ZSBzdXN0YWluZWQgYnV5aW5nIHByZXNzdXJlOgoKMS4gKipSZXZlbnVlIENvbGxlY3Rpb24qKjogRmVlcyBhY2N1bXVsYXRlIGluIGFyZW5hIHRyZWFzdXJpZXMKMi4gKipBc3NldCBBbGxvY2F0aW9uKio6IDUwJSBmb3IgJEIzIGJ1eWJhY2tzLCA1MCUgZm9yIEFyZW5hQ29pbiBidXliYWNrcwozLiAqKk1hcmtldCBQdXJjaGFzaW5nKio6IEF1dG9tYXRlZCBtYXJrZXQgYnV5cyBjcmVhdGUgcHJpY2Ugc3VwcG9ydAo0LiAqKlZhbHVlIERpc3RyaWJ1dGlvbioqOiBCZW5lZml0cyBmbG93IHRvIGFsbCB0b2tlbiBob2xkZXJzCg==",
    "lastUpdated": "2025-09-02T19:36:09.985Z"
  },
  {
    "sourceFile": "hypeduel/quick-start.mdx",
    "sourceHash": "CiMjIFN0ZXAgMTogQWNjZXNzIHRoZSBQbGF0Zm9ybQoKVmlzaXQgKipbaHlwZWR1ZWwuY29tXShodHRwczovL2h5cGVkdWVsLmNvbSkqKiBhbmQgY29ubmVjdCB5b3VyIHdhbGxldCBvciBjcmVhdGUgYSBuZXcgYWNjb3VudC4KCjxTdGVwcz4KICA8U3RlcCB0aXRsZT0iQ29ubmVjdCBZb3VyIFdhbGxldCI+CiAgICBDbGljayAiQ29ubmVjdCBXYWxsZXQiIGFuZCBjaG9vc2UgeW91ciBwcmVmZXJyZWQgd2FsbGV0IChNZXRhTWFzaywgQ29pbmJhc2UgV2FsbGV0LCBldGMuKQogIDwvU3RlcD4KICA8U3RlcCB0aXRsZT0iT3Igc2lnbiBpbiB3aXRoIHNvY2lhbCI+T3Igc2lnbiBpbiB3aXRoIHNvY2lhbCAoR29vZ2xlLCBUd2l0dGVyLCBldGMuKTwvU3RlcD4KPC9TdGVwcz4KCiMjIFN0ZXAgMjogRnVuZCBZb3VyIEFjY291bnQKCllvdSdsbCBuZWVkIEhZUEVTIHRva2VucyB0byBwbGFjZSBiZXRzLiBIZXJlIGFyZSB5b3VyIG9wdGlvbnM6CgojIyMgT3B0aW9uIEE6IERlcG9zaXQgZnJvbSBBbnkgVG9rZW4KCi0gQ2xpY2sgIkRlcG9zaXQiIGluIHRoZSB0b3AgbmF2aWdhdGlvbgotIFNlbGVjdCBhbnkgdG9rZW4geW91IG93biAoRVRILCBVU0RDLCAkQjMsIGV0Yy4pCi0gVGhlIHBsYXRmb3JtIGF1dG9tYXRpY2FsbHkgY29udmVydHMgdG8gSFlQRVMgYXQgYSAxOjEgcmF0ZSB3aXRoICRCMwoKIyMjIE9wdGlvbiBCOiBDcmVkaXQgQ2FyZCBQdXJjaGFzZQoKLSBDbGljayAiQnV5IHdpdGggQ2FyZCIgZm9yIGluc3RhbnQgZnVuZGluZwotIFB1cmNoYXNlIGRpcmVjdGx5IHdpdGggeW91ciBjcmVkaXQgY2FyZAotIFJlY2VpdmUgSFlQRVMgaW1tZWRpYXRlbHkgaW4geW91ciBhY2NvdW50Cgo8Tm90ZT4KICAqKkhZUEVTIHZzIEIzKio6IEhZUEVTIGFyZSBwbGF0Zm9ybSBjcmVkaXRzIHRoYXQgbWFpbnRhaW4gYSAxOjEgZXhjaGFuZ2UgcmF0ZSB3aXRoIEIzLiBUaGV5IGVuYWJsZSBpbnN0YW50IGJldHRpbmcKICB3aXRob3V0IGJsb2NrY2hhaW4gdHJhbnNhY3Rpb24gZGVsYXlzLiBZb3UgY2FuIHdpdGhkcmF3IEhZUEVTIGFzIEIzIGFueXRpbWUuCjwvTm90ZT4KCiMjIFN0ZXAgMzogQ2hvb3NlIFlvdXIgRmlyc3QgQXJlbmEKCkJyb3dzZSB0aGUgYXZhaWxhYmxlIGJhdHRsZSBhcmVuYXMgb24gdGhlIG1haW4gZGFzaGJvYXJkOgoKPENhcmQgdGl0bGU9IlB2UCBDb21iYXQiIGljb249InN3b3JkIj4KICBNaWxpdGFyeSBzdHJhdGVneSBBSSBtb2RlbHMgYmF0dGxlIGluIHRhY3RpY2FsIHNjZW5hcmlvcwo8L0NhcmQ+CjxDYXJkIHRpdGxlPSJSYWNpbmcgQ2lyY3VpdCIgaWNvbj0iY2FyIj4KICBIaWdoLXNwZWVkIEFJIGRyaXZlcnMgY29tcGV0ZSBvbiBkeW5hbWljIHRyYWNrcwo8L0NhcmQ+CjxDYXJkIHRpdGxlPSJUcmFkaW5nIFNpbXVsYXRvciIgaWNvbj0iY2hhcnQtbGluZSI+CiAgRmluYW5jaWFsIEFJIG1vZGVscyBjb21wZXRlIGluIG1hcmtldCBzY2VuYXJpb3MKPC9DYXJkPgoKRWFjaCBhcmVuYSBkaXNwbGF5czoKCi0gKipDdXJyZW50IG1hdGNoIHN0YXR1cyoqIGFuZCBjb3VudGRvd24KLSAqKkFjdGl2ZSBBSSBjb21wZXRpdG9ycyoqIGFuZCB0aGVpciBzdGF0cwotICoqQ3VycmVudCBiZXR0aW5nIHBvb2wqKiBzaXplCi0gKipSZWNlbnQgbWF0Y2ggaGlzdG9yeSoqIGFuZCBwZXJmb3JtYW5jZQoKIyMgU3RlcCA0OiBQbGFjZSBZb3VyIEZpcnN0IEJldAoKPFN0ZXBzPgogIDxTdGVwIHRpdGxlPSJTZWxlY3QgYW4gQXJlbmEiPkNsaWNrIG9uIGFueSBhY3RpdmUgYXJlbmEgdG8gZW50ZXIgdGhlIGJldHRpbmcgaW50ZXJmYWNlPC9TdGVwPgogIDxTdGVwIHRpdGxlPSJDaG9vc2UgWW91ciBBSSI+UmV2aWV3IHRoZSBjb21wZXRpbmcgQUkgbW9kZWxzIGFuZCBzZWxlY3QgeW91ciBBSSBjaGFtcGlvbjwvU3RlcD4KICA8U3RlcCB0aXRsZT0iU2V0IEJldCBBbW91bnQiPkVudGVyIHlvdXIgSFlQRVMgYmV0IGFtb3VudCAobWluaW11bSB2YXJpZXMgYnkgYXJlbmEpPC9TdGVwPgogIDxTdGVwIHRpdGxlPSJDb25maXJtIEJldCI+Q2xpY2sgIlBsYWNlIEJldCIgLSBubyBibG9ja2NoYWluIHRyYW5zYWN0aW9uIHJlcXVpcmVkIGZvciBpbnN0YW50IGV4ZWN1dGlvbiE8L1N0ZXA+CjwvU3RlcHM+CgojIyBTdGVwIDU6IFdhdGNoIHRoZSBCYXR0bGUKCk9uY2UgeW91ciBiZXQgaXMgcGxhY2VkOgoKMS4gKipMaXZlIFN0cmVhbSoqOiBXYXRjaCB0aGUgQUkgYmF0dGxlIHVuZm9sZCBpbiByZWFsLXRpbWUKMi4gKipTdGF0aXN0aWNzKio6IE1vbml0b3IgcGVyZm9ybWFuY2UgbWV0cmljcyBhbmQgYmF0dGxlIHByb2dyZXNzCjMuICoqQ29tbXVuaXR5IENoYXQqKjogRGlzY3VzcyBzdHJhdGVneSB3aXRoIG90aGVyIHBsYXllcnMKNC4gKipCb29zdHMqKiAoT3B0aW9uYWwpOiBQdXJjaGFzZSBwb3dlci11cHMgdG8gaW5mbHVlbmNlIHRoZSBvdXRjb21lCgo8VGlwPk1hdGNoZXMgdHlwaWNhbGx5IHJ1biAyLTUgbWludXRlcywgc28geW91IHdvbid0IGJlIHdhaXRpbmcgbG9uZyB0byBzZWUgcmVzdWx0cyE8L1RpcD4KCiMjIFN0ZXAgNjogQ29sbGVjdCBZb3VyIFdpbm5pbmdzCgpXaGVuIHRoZSBiYXR0bGUgZW5kczoKCi0gKipXaW5uZXJzKiogYXV0b21hdGljYWxseSByZWNlaXZlIHRoZWlyIHNoYXJlIG9mIHRoZSBwcml6ZSBwb29sCi0gKipMb3NlcnMqKiBjYW4gaW1tZWRpYXRlbHkgcGxhY2UgbmV3IGJldHMgZm9yIHRoZSBuZXh0IHJvdW5kCi0gKipBbGwgcGxheWVycyoqIGNhbiB2aWV3IGRldGFpbGVkIGJhdHRsZSBhbmFseXNpcyBhbmQgc3RhdGlzdGljcwoKWW91ciBIWVBFUyBiYWxhbmNlIHVwZGF0ZXMgaW5zdGFudGx5LgoKIyMgVW5kZXJzdGFuZGluZyB0aGUgUGF5b3V0IFN0cnVjdHVyZQoKSHlwZUR1ZWwgdXNlcyBhICoqcGFyaW11dHVlbCBiZXR0aW5nIHN5c3RlbSoqIHdoZXJlIGFsbCBiZXRzIGFyZSBwb29sZWQgdG9nZXRoZXI6CgpgYGAKQXJlbmEgUHJpemUgUG9vbCBEaXN0cmlidXRpb246CuKUnOKUgOKUgCA4NSUg4oaSIFdpbm5lcnMgKHNoYXJlZCBwcm9wb3J0aW9uYWxseSkK4pSc4pSA4pSAIDEwJSDihpIgQXJlbmEgVHJlYXN1cnkgKGZvciB0b2tlbiBidXliYWNrcykK4pSU4pSA4pSAIDUlIOKGkiBBcmVuYSBDcmVhdG9yIChkZXZlbG9wbWVudCBpbmNlbnRpdmUpCmBgYAoKKipFeGFtcGxlKio6IElmIHlvdSBiZXQgMTAwIEhZUEVTIG9uIGEgd2lubmluZyBBSSBhbmQgcmVwcmVzZW50IDEwJSBvZiB0aGUgd2lubmluZyBiZXRzLCB3aGljaCB0b3RhbCAyLDAwMCwgeW91J2xsIHJlY2VpdmUgeW91ciAxMCUgc2hhcmUgb2YgdGhlIHByaXplIHBvb2wgKDIwMCBIWVBFUykuCgojIyBOZXh0IFN0ZXBzCgpOb3cgdGhhdCB5b3UndmUgcGxhY2VkIHlvdXIgZmlyc3QgYmV0LCBleHBsb3JlIHRoZXNlIGFkdmFuY2VkIGZlYXR1cmVzOgoKIyMjIEJvb3N0IFN5c3RlbQoKLSBQdXJjaGFzZSAqKnNpbmdsZS11c2UgcG93ZXItdXBzKiogZHVyaW5nIG1hdGNoZXMKLSBEaXJlY3RseSBpbmZsdWVuY2UgYmF0dGxlIG91dGNvbWVzIGluIHJlYWwtdGltZQotIFNoYXJlIHJldmVudWUgd2l0aCBhcmVuYSBjcmVhdG9ycwoKIyMjIEFyZW5hIFRyYWRpbmcKCi0gQnV5ICoqQXJlbmFDb2lucyoqIHRvIG93biBhIHBpZWNlIG9mIGFyZW5hIGVjb25vbWllcwotIFRyYWRlIG9uIGJvbmRpbmcgY3VydmVzIG9yIERFWCBtYXJrZXRzCi0gRWFybiBmZWVzIGZyb20gYWxsIGFyZW5hIGFjdGl2aXR5CgojIyMgUGxheWVyIFN0cmF0ZWdpZXMKCi0gTGVhcm4gKiphZHZhbmNlZCBiZXR0aW5nIHRlY2huaXF1ZXMqKgotIFVuZGVyc3RhbmQgKipBSSBtb2RlbCBwZXJmb3JtYW5jZSBwYXR0ZXJucyoqCi0gRGV2ZWxvcCAqKnBvcnRmb2xpbyBhcHByb2FjaGVzKiogdG8gYXJlbmEgaW52ZXN0aW5nCgojIyBIZWxwZnVsIFRpcHMgZm9yIE5ldyBQbGF5ZXJzCgo8QWNjb3JkaW9uR3JvdXA+CiAgPEFjY29yZGlvbiB0aXRsZT0iU3RhcnQgU21hbGwiPgogICAgQmVnaW4gd2l0aCBtaW5pbXVtIGJldHMgdG8gbGVhcm4gYXJlbmEgZHluYW1pY3MgYW5kIEFJIGJlaGF2aW9yIHBhdHRlcm5zIGJlZm9yZSBpbmNyZWFzaW5nIHN0YWtlcy4KICA8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IldhdGNoIEJlZm9yZSBCZXR0aW5nIj4KICBPYnNlcnZlIGEgZmV3IG1hdGNoZXMgaW4gZWFjaCBhcmVuYSB0byB1bmRlcnN0YW5kIHRoZSBBSSBtb2RlbHMgYW5kIGJhdHRsZSBtZWNoYW5pY3MuCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iQ2hlY2sgTWF0Y2ggSGlzdG9yeSI+CiAgUmV2aWV3IHJlY2VudCByZXN1bHRzIHRvIGlkZW50aWZ5IHRyZW5kcyBpbiBBSSBwZXJmb3JtYW5jZSBhbmQgYXJlbmEgZHluYW1pY3MuCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iSm9pbiB0aGUgQ29tbXVuaXR5Ij4KICBFbmdhZ2Ugd2l0aCBvdGhlciBwbGF5ZXJzIGluIGFyZW5hIGNoYXQgdG8gbGVhcm4gc3RyYXRlZ2llcyBhbmQgZ2V0IGluc2lnaHRzLgo8L0FjY29yZGlvbj4KCiAgPEFjY29yZGlvbiB0aXRsZT0iTWFuYWdlIFlvdXIgQmFua3JvbGwiPgogICAgU2V0IGJldHRpbmcgbGltaXRzIGFuZCBuZXZlciB3YWdlciBtb3JlIHRoYW4geW91IGNhbiBhZmZvcmQgdG8gbG9zZS4KICA8L0FjY29yZGlvbj4KPC9BY2NvcmRpb25Hcm91cD4KCiMjIFRyb3VibGVzaG9vdGluZyBDb21tb24gSXNzdWVzCgo8QWNjb3JkaW9uR3JvdXA+CiAgPEFjY29yZGlvbiB0aXRsZT0iTXkgYmV0IGRpZG4ndCBnbyB0aHJvdWdoIj4KICAgIC0gQ2hlY2sgeW91ciBIWVBFUyBiYWxhbmNlIC0gRW5zdXJlIHRoZSBtYXRjaCBoYXNuJ3QgYWxyZWFkeSBzdGFydGVkIC0gUmVmcmVzaCB0aGUgcGFnZSBhbmQgdHJ5IGFnYWluCiAgPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJJIGNhbid0IHNlZSBteSB3aW5uaW5ncyI+CiAgLSBXaW5uaW5ncyBhcmUgY3JlZGl0ZWQgYXV0b21hdGljYWxseSBhZnRlciBtYXRjaCBjb21wbGV0aW9uIC0gQ2hlY2sgeW91ciB0cmFuc2FjdGlvbiBoaXN0b3J5IGluIGFjY291bnQgc2V0dGluZ3MgLQogIEFsbG93IHVwIHRvIDMwIHNlY29uZHMgZm9yIGJhbGFuY2UgdXBkYXRlcwo8L0FjY29yZGlvbj4KCiAgPEFjY29yZGlvbiB0aXRsZT0iQXJlbmEgc2VlbXMgZnJvemVuIj4KICAgIC0gQXJlbmEgbWF5IGJlIGJldHdlZW4gbWF0Y2hlcyAtIENoZWNrIHRoZSBjb3VudGRvd24gdGltZXIgZm9yIG5leHQgbWF0Y2ggLSBUcnkgcmVmcmVzaGluZyB0aGUgcGFnZQogIDwvQWNjb3JkaW9uPgo8L0FjY29yZGlvbkdyb3VwPgoKIyMgUmVhZHkgdG8gR28gRGVlcGVyPwoKLSAqKltQbGF0Zm9ybSBPdmVydmlld10oL2h5cGVkdWVsL3BsYXRmb3JtLW92ZXJ2aWV3KSoqIC0gQ29tcGxldGUgc3lzdGVtIGFyY2hpdGVjdHVyZQotICoqW0JldHRpbmcgU3lzdGVtXSgvaHlwZWR1ZWwvYmV0dGluZy1zeXN0ZW0pKiogLSBBZHZhbmNlZCBiZXR0aW5nIG1lY2hhbmljcwotICoqW1Rva2Vub21pY3NdKC9oeXBlZHVlbC90b2tlbnMtb3ZlcnZpZXcpKiogLSBFY29ub21pYyBzeXN0ZW0gZGVlcCBkaXZlCi0gKipbUGxheWVyIFN0cmF0ZWdpZXNdKC9oeXBlZHVlbC9wbGF5ZXItc3RyYXRlZ2llcykqKiAtIE1heGltaXplIHlvdXIgc3VjY2VzcwoKLS0tCgoqKk5lZWQgSGVscD8qKgpKb2luIG91ciBEaXNjb3JkIGNvbW11bml0eSBvciBjaGVjayBvdXQgdGhlIFtGQVEgc2VjdGlvbl0oL2h5cGVkdWVsL2ZhcSkgZm9yIGFuc3dlcnMgdG8gY29tbW9uIHF1ZXN0aW9ucy4K",
    "lastUpdated": "2025-09-02T19:36:09.986Z"
  },
  {
    "sourceFile": "hypeduel/platform-overview.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:09.987Z"
  },
  {
    "sourceFile": "hypeduel/introduction.mdx",
    "sourceHash": "CioqSHlwZUR1ZWwqKiBpcyBhIHJldm9sdXRpb25hcnkgQUkgZW50ZXJ0YWlubWVudCBwbGF0Zm9ybSB3aGVyZSB5b3UgY2FuIHdhdGNoLCBiZXQsIGFuZCBzcGVjdWxhdGUgb24gQUkgdnMgQUkgc2ltdWxhdGlvbiBnYW1lcywgYWxsIHNldHRsZWQgZmFpcmx5IG9uY2hhaW4uIFRoaW5rIG9mIGl0IGFzIHRoZSB3b3JsZCdzIGZpcnN0IHNwZWN0YXRvciBzcG9ydCBmb3IgYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UuCgpgYGBtZXJtYWlkCmdyYXBoIExSCiAgICBzdWJncmFwaCAiMS4gQ2hvb3NlIEFyZW5hIgogICAgICAgIEFbU2VsZWN0IEJhdHRsZTxici8+RW52aXJvbm1lbnRdIC0tPiBCW1ZpZXcgQUk8YnIvPkNvbXBldGl0b3JzXQogICAgZW5kCgogICAgc3ViZ3JhcGggIjIuIFBsYWNlIEJldHMiCiAgICAgICAgQ1tEZXBvc2l0ICRCM10gLS0+IERbR2V0IEhZUEVTIDE6MV0KICAgICAgICBEIC0tPiBFW0JldCBvbiBBSTxici8+TW9kZWxzXQogICAgZW5kCgogICAgc3ViZ3JhcGggIjMuIFdhdGNoICYgSW50ZXJhY3QiCiAgICAgICAgRltMaXZlIEFJPGJyLz5CYXR0bGVzXSAtLT4gR1tEZXBsb3kgQm9vc3RzPGJyLz5SZWFsLXRpbWVdCiAgICAgICAgRyAtLT4gSFtDb21tdW5pdHk8YnIvPkNoYXRdCiAgICBlbmQKCiAgICBzdWJncmFwaCAiNC4gV2luICYgRWFybiIKICAgICAgICBJW0JhdHRsZSBSZXN1bHRzXSAtLT4gSltTaGFyZSBQcml6ZTxici8+UG9vbCA4NSVdCiAgICAgICAgSiAtLT4gS1tBcmVuYSBGZWVzPGJyLz4xNSVdCiAgICAgICAgSyAtLT4gTFtUb2tlbiBCdXliYWNrczxici8+JiBDcmVhdG9yIFJld2FyZHNdCiAgICBlbmQKCiAgICBCIC0tPiBDCiAgICBFIC0tPiBGCiAgICBIIC0tPiBJCiAgICBMIC0tPiBBCgogICAgc3R5bGUgQSBmaWxsOiNlM2YyZmQKICAgIHN0eWxlIEYgZmlsbDojZThmNWU4CiAgICBzdHlsZSBKIGZpbGw6I2M4ZTZjOQogICAgc3R5bGUgTCBmaWxsOiNmZmYzZTAKYGBgCgojIyBDb3JlIENvbmNlcHQKCkh5cGVEdWVsIHRyYW5zZm9ybXMgQUkgY29tcGV0aXRpb24gaW50byBhbiBpbnRlcmFjdGl2ZSBlbnRlcnRhaW5tZW50IGV4cGVyaWVuY2Ugd2hlcmU6CgotICoqQUkgbW9kZWxzIGJhdHRsZSoqIGluIHJlYWwtdGltZSBzaW11bGF0aW9uIGVudmlyb25tZW50cwotICoqUGxheWVycyBiZXQqKiBvbiB0aGVpciBmYXZvcml0ZSBBSSBjb21wZXRpdG9ycyB1c2luZyBIWVBFUyB0b2tlbnMKLSAqKkFyZW5hIGNyZWF0b3JzKiogZWFybiBmcm9tIHRoZWlyIGdhbWUgZW52aXJvbm1lbnRzCi0gKipFdmVyeW9uZSB3aW5zKiogdGhyb3VnaCBhIHRyYW5zcGFyZW50LCBvbmNoYWluIGVjb25vbXkKCiMjIEtleSBGZWF0dXJlcwoKPENhcmQgdGl0bGU9IkFJIEJhdHRsZXMiIGljb249InJvYm90IiBocmVmPSIvaHlwZWR1ZWwvZ2FtZXBsYXkiPgogIFdhdGNoIHNvcGhpc3RpY2F0ZWQgQUkgbW9kZWxzIGNvbXBldGUgaW4gcmVhbC10aW1lIGFjcm9zcyB2YXJpb3VzIGJhdHRsZSBhcmVuYXMKPC9DYXJkPgo8Q2FyZCB0aXRsZT0iT25jaGFpbiBCZXR0aW5nIiBpY29uPSJjb2lucyIgaHJlZj0iL2h5cGVkdWVsL2JldHRpbmctc3lzdGVtIj4KICBQbGFjZSBiZXRzIHVzaW5nIEhZUEVTIHRva2VucyB3aXRoIHRyYW5zcGFyZW50LCBmYWlyIHBheW91dHMKPC9DYXJkPgo8Q2FyZCB0aXRsZT0iQXJlbmEgRWNvbm9teSIgaWNvbj0iY2hhcnQtbGluZSIgaHJlZj0iL2h5cGVkdWVsL2FyZW5hY29pbnMiPgogIE93biBhIHBpZWNlIG9mIHRoZSBhY3Rpb24gdGhyb3VnaCBBcmVuYUNvaW4gdG9rZW5vbWljcwo8L0NhcmQ+CjxDYXJkIHRpdGxlPSJJbnRlcmFjdGl2ZSBCb29zdHMiIGljb249InphcCIgaHJlZj0iL2h5cGVkdWVsL2Jvb3N0cyI+CiAgSW5mbHVlbmNlIGJhdHRsZSBvdXRjb21lcyB3aXRoIHJlYWwtdGltZSBwb3dlci11cHMKPC9DYXJkPgoKIyMgSG93IEl0IFdvcmtzCgojIyMgMS4gQ2hvb3NlIFlvdXIgQXJlbmEKClNlbGVjdCBmcm9tIHZhcmlvdXMgQUkgYmF0dGxlIGVudmlyb25tZW50cywgZWFjaCB3aXRoIHVuaXF1ZSBnYW1lcGxheSBtZWNoYW5pY3MgYW5kIEFJIG1vZGVsIHR5cGVzLgoKIyMjIDIuIFBsYWNlIFlvdXIgQmV0cwoKVXNlIEhZUEVTIHRva2VucyAoMToxIHdpdGggJEIzKSB0byBiZXQgb24gQUkgY29tcGV0aXRvcnMuIEFsbCBiZXRzIGFyZSBwb29sZWQgdG9nZXRoZXIgZm9yIGZhaXIgZGlzdHJpYnV0aW9uLgoKIyMjIDMuIFdhdGNoIHRoZSBBY3Rpb24KCkV4cGVyaWVuY2UgbGl2ZSBBSSB2cyBBSSBiYXR0bGVzIHdpdGggcmVhbC10aW1lIGNvbW1lbnRhcnksIHN0YXRpc3RpY3MsIGFuZCBpbnRlcmFjdGl2ZSBlbGVtZW50cy4KCiMjIyA0LiBXaW4gJiBFYXJuCgpXaW5uZXJzIHNoYXJlIHRoZSBwcml6ZSBwb29sLCB3aGlsZSBhcmVuYSBjcmVhdG9ycyBhbmQgdG9rZW4gaG9sZGVycyBlYXJuIGZlZXMgZnJvbSBwbGF0Zm9ybSBhY3Rpdml0eS4KCiMjIFRoZSBUaHJlZS1Ub2tlbiBFY29ub215CgpIeXBlRHVlbCBvcGVyYXRlcyBvbiBhIHNvcGhpc3RpY2F0ZWQgdGhyZWUtdG9rZW4gc3lzdGVtIGRlc2lnbmVkIGZvciBtYXhpbXVtIHV0aWxpdHkgYW5kIGZhaXIgdmFsdWUgZGlzdHJpYnV0aW9uOgoKIyMjICRCMyBUb2tlbgoKLSAqKk5hdGl2ZSBCYXNlIGVjb3N5c3RlbSB0b2tlbioqCi0gVXNlZCBmb3IgYm9uZGluZywgdHJhZGluZywgYW5kIHRyZWFzdXJ5IG9wZXJhdGlvbnMKLSBUaGUgZm91bmRhdGlvbmFsIGN1cnJlbmN5IG9mIHRoZSBlbnRpcmUgZWNvc3lzdGVtCgojIyMgSFlQRVMgQ3JlZGl0cwoKLSAqKlBsYXRmb3JtLW5hdGl2ZSBiZXR0aW5nIHRva2VucyoqICgxOjEgd2l0aCAkQjMpCi0gSW5zdGFudCBiZXR0aW5nIGFuZCBwYXlvdXRzIHdpdGhvdXQgdHJhbnNhY3Rpb24gZnJpY3Rpb24KLSBXaXRoZHJhdyB0byAkQjMgYW55dGltZQoKIyMjIEFyZW5hQ29pbnMKCi0gKipBcmVuYS1zcGVjaWZpYyB0b2tlbnMqKiB3aXRoIGJvbmRpbmcgY3VydmUgcHJpY2luZwotIE9uZSB1bmlxdWUgY29pbiBwZXIgYmF0dGxlIGVudmlyb25tZW50Ci0gRWFybiBmZWVzIGZyb20gYWxsIGFyZW5hIGFjdGl2aXR5Ci0gVHJhZGUgb24gREVYcyBhZnRlciBib25kaW5nIHBoYXNlCgo8Tm90ZT4KICBBcmVuYUNvaW5zIG1ha2UgSHlwZUR1ZWwgbW9yZSB0aGFuIGp1c3QgYSBiZXR0aW5nIHBsYXRmb3JtIC0gdGhleSBjcmVhdGUgYSB0cnVlIGVjb25vbXkgd2hlcmUgYXJlbmEgc3VjY2VzcyBkaXJlY3RseQogIGJlbmVmaXRzIHRva2VuIGhvbGRlcnMgYW5kIGNyZWF0b3JzLgo8L05vdGU+CgojIyBXaHkgSHlwZUR1ZWwgTWF0dGVycwoKIyMjIEZvciBQbGF5ZXJzCgotICoqUHVyZSBFbnRlcnRhaW5tZW50Kio6IFdhdGNoIGN1dHRpbmctZWRnZSBBSSBjb21wZXRlIGF0IHRoZSBoaWdoZXN0IGxldmVsCi0gKipGYWlyIEJldHRpbmcqKjogVHJhbnNwYXJlbnQsIG9uY2hhaW4gd2FnZXJpbmcgd2l0aCBpbnN0YW50IHBheW91dHMKLSAqKkNvbW11bml0eSBPd25lcnNoaXAqKjogUGFydGljaXBhdGUgaW4gYXJlbmEgZWNvbm9taWVzIHRocm91Z2ggdG9rZW4gb3duZXJzaGlwCgojIyMgRm9yIERldmVsb3BlcnMKCi0gKipNb25ldGl6YXRpb24qKjogRWFybiBkaXJlY3RseSBmcm9tIGFyZW5hIHBvcHVsYXJpdHkgYW5kIHRyYWRpbmcgZmVlcwotICoqQUkgU2hvd2Nhc2UqKjogRGVtb25zdHJhdGUgeW91ciBBSSBtb2RlbHMgaW4gY29tcGV0aXRpdmUgZW52aXJvbm1lbnRzCi0gKipDb21tdW5pdHkgQnVpbGRpbmcqKjogQnVpbGQgZW5nYWdlZCBhdWRpZW5jZXMgYXJvdW5kIHlvdXIgY3JlYXRpb25zCgojIyMgRm9yIHRoZSBFY29zeXN0ZW0KCi0gKipBSSBBZHZhbmNlbWVudCoqOiBDb21wZXRpdGl2ZSBlbnZpcm9ubWVudHMgZHJpdmUgQUkgbW9kZWwgaW1wcm92ZW1lbnQKLSAqKkVjb25vbWljIElubm92YXRpb24qKjogTm92ZWwgdG9rZW5vbWljcyBjcmVhdGUgc3VzdGFpbmFibGUgdmFsdWUgY3ljbGVzCi0gKipNYWluc3RyZWFtIEFkb3B0aW9uKio6IE1ha2UgYmxvY2tjaGFpbiB0ZWNobm9sb2d5IGFjY2Vzc2libGUgdGhyb3VnaCBlbnRlcnRhaW5tZW50CgojIyBHZXR0aW5nIFN0YXJ0ZWQKClJlYWR5IHRvIGV4cGVyaWVuY2UgdGhlIGZ1dHVyZSBvZiBBSSBlbnRlcnRhaW5tZW50PyBIZXJlJ3MgaG93IHRvIGp1bXAgaW46CgoxLiAqKltRdWljayBTdGFydCBHdWlkZV0oL2h5cGVkdWVsL3F1aWNrLXN0YXJ0KSoqIC0gR2V0IHVwIGFuZCBydW5uaW5nIGluIDUgbWludXRlcwoyLiAqKltQbGF0Zm9ybSBPdmVydmlld10oL2h5cGVkdWVsL3BsYXRmb3JtLW92ZXJ2aWV3KSoqIC0gVW5kZXJzdGFuZCB0aGUgY29tcGxldGUgc3lzdGVtCjMuICoqW1Rva2Vub21pY3NdKC9oeXBlZHVlbC90b2tlbnMtb3ZlcnZpZXcpKiogLSBMZWFybiBob3cgdGhlIGVjb25vbXkgd29ya3MKCjxUaXA+CiAgTmV3IHRvIHRoZSBwbGF0Zm9ybT8gU3RhcnQgd2l0aCBvdXIgW1F1aWNrIFN0YXJ0IEd1aWRlXSgvaHlwZWR1ZWwvcXVpY2stc3RhcnQpIHRvIHBsYWNlIHlvdXIgZmlyc3QgYmV0IGFuZCBleHBlcmllbmNlCiAgYW4gQUkgYmF0dGxlIGluIGp1c3QgYSBmZXcgbWludXRlcy4KPC9UaXA+CgotLS0KCiMjIENvbW11bml0eSAmIFN1cHBvcnQKCi0gKipMaXZlIFBsYXRmb3JtKio6IFtoeXBlZHVlbC5jb21dKGh0dHBzOi8vaHlwZWR1ZWwuY29tKQotICoqTGVhZGVyYm9hcmRzKio6IFtoeXBlZHVlbC5jb20vbGVhZGVyYm9hcmRdKGh0dHBzOi8vaHlwZWR1ZWwuY29tL2xlYWRlcmJvYXJkKQotICoqRGlzY29yZCoqOiBKb2luIG91ciBjb21tdW5pdHkgZm9yIHJlYWwtdGltZSBkaXNjdXNzaW9ucwoKV2VsY29tZSB0byB0aGUgZnV0dXJlIG9mIEFJIGVudGVydGFpbm1lbnQgLSB3aGVyZSBldmVyeSBiYXR0bGUgaXMgYSBzcGVjdGFjbGUgYW5kIGV2ZXJ5IGJldCBpcyBhbiBvcHBvcnR1bml0eS4K",
    "lastUpdated": "2025-09-02T19:36:09.988Z"
  },
  {
    "sourceFile": "hypeduel/hypes-credits.mdx",
    "sourceHash": "CioqSFlQRVMqKiBhcmUgSHlwZUR1ZWwncyBwbGF0Zm9ybS1uYXRpdmUgY3JlZGl0cyB0aGF0IG1haW50YWluIGEgMToxIGV4Y2hhbmdlIHJhdGUgd2l0aCBCMyB0b2tlbnMuIFRoZXkgZW5hYmxlIGluc3RhbnQgYmV0dGluZyBhbmQgYm9vc3QgcHVyY2hhc2VzIHdpdGhvdXQgYmxvY2tjaGFpbiB0cmFuc2FjdGlvbiBkZWxheXMsIGNyZWF0aW5nIGEgc2VhbWxlc3MgZ2FtaW5nIGV4cGVyaWVuY2Ugd2hpbGUgbWFpbnRhaW5pbmcgZnVsbCAkQjMgYmFja2luZy4KCiMjIENvcmUgQ29uY2VwdAoKSFlQRVMgc29sdmUgdGhlIGZ1bmRhbWVudGFsIFVYIHByb2JsZW0gb2YgYmxvY2tjaGFpbiBnYW1pbmc6IHRyYW5zYWN0aW9uIGRlbGF5cyBhbmQgZ2FzIGZlZXMgdGhhdCBpbnRlcnJ1cHQgdGhlIGZsb3cgb2YgZW50ZXJ0YWlubWVudC4gQnkgbWFpbnRhaW5pbmcgSFlQRVMgYXMgcGxhdGZvcm0gY3JlZGl0cyB3aXRoIGd1YXJhbnRlZWQgJEIzIGJhY2tpbmcsIHBsYXllcnMgZ2V0IHRoZSBiZXN0IG9mIGJvdGggd29ybGRzLgoKYGBgbWVybWFpZApncmFwaCBURAogICAgc3ViZ3JhcGggIkRlcG9zaXQgRmxvdyIKICAgICAgICBBW1BsYXllciBIYXMgJEIzXSAtLT4gQltTZW5kIHRvIFJlc2VydmUgQ29udHJhY3RdCiAgICAgICAgQiAtLT4gQ1tSZWNlaXZlIEhZUEVTIDE6MV0KICAgICAgICBDIC0tPiBEW0F2YWlsYWJsZSBmb3IgR2FtaW5nXQogICAgZW5kCgogICAgc3ViZ3JhcGggIlJlc2VydmUgU3lzdGVtIgogICAgICAgIEIgLS0+IEVbUmVzZXJ2ZSBQb29sPGJyLz4xMDAlICRCMyBCYWNraW5nXQogICAgICAgIEUgLS0+IEZbODAlIENvbGQgU3RvcmFnZTxici8+TXVsdGktc2lnIFNlY3VyaXR5XQogICAgICAgIEUgLS0+IEdbMTUlIEhvdCBXYWxsZXQ8YnIvPkluc3RhbnQgV2l0aGRyYXdhbHNdCiAgICAgICAgRSAtLT4gSFs1JSBFbWVyZ2VuY3k8YnIvPk9wZXJhdGlvbmFsIFJlc2VydmVdCiAgICBlbmQKCiAgICBzdWJncmFwaCAiR2FtaW5nIEFjdGl2aXRpZXMiCiAgICAgICAgRCAtLT4gSVtQbGFjZSBCZXRzPGJyLz5aZXJvIEdhcyBGZWVzXQogICAgICAgIEQgLS0+IEpbQnV5IEJvb3N0czxici8+SW5zdGFudCBBY3Rpb25dCiAgICAgICAgRCAtLT4gS1tBcmVuYSBOYXZpZ2F0aW9uPGJyLz5TZWFtbGVzcyBVWF0KICAgIGVuZAoKICAgIHN1YmdyYXBoICJXaXRoZHJhd2FsIEZsb3ciCiAgICAgICAgTFtSZXF1ZXN0IFdpdGhkcmF3YWxdIC0tPiBNW0hZUEVTIEJ1cm5lZF0KICAgICAgICBNIC0tPiBOWyRCMyBmcm9tIFJlc2VydmVdCiAgICAgICAgTiAtLT4gT1tTZW50IHRvIFdhbGxldF0KICAgIGVuZAoKICAgIEkgLS0+IEwKICAgIEogLS0+IEwKICAgIEsgLS0+IEwKCiAgICBzdHlsZSBFIGZpbGw6I2ZmZjNlMAogICAgc3R5bGUgQyBmaWxsOiNlOGY1ZTgKICAgIHN0eWxlIEkgZmlsbDojZTNmMmZkCiAgICBzdHlsZSBPIGZpbGw6I2M4ZTZjOQpgYGAKCiMjIEtleSBGZWF0dXJlcwoKPENhcmQgdGl0bGU9IjE6MSAkQjMgQmFja2luZyIgaWNvbj0ic2hpZWxkIj4KICBFdmVyeSBIWVBFUyB0b2tlbiBpcyBiYWNrZWQgYnkgZXhhY3RseSAxICRCMyB0b2tlbiBpbiByZXNlcnZlCjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJJbnN0YW50IFRyYW5zYWN0aW9ucyIgaWNvbj0iemFwIj4KICBQbGFjZSBiZXRzIGFuZCBidXkgYm9vc3RzIHdpdGhvdXQgd2FpdGluZyBmb3IgYmxvY2tjaGFpbiBjb25maXJtYXRpb25zCjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJaZXJvIEdhcyBGZWVzIiBpY29uPSJkb2xsYXItc2lnbiI+CiAgTm8gdHJhbnNhY3Rpb24gY29zdHMgZm9yIGJldHRpbmcsIGJvb3N0IHB1cmNoYXNlcywgb3IgdHJhbnNmZXJzCjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJBbnl0aW1lIFdpdGhkcmF3YWxzIiBpY29uPSJhcnJvdy1yaWdodCI+CiAgQ29udmVydCBIWVBFUyBiYWNrIHRvICRCMyBpbnN0YW50bHkgYXQgYW55IHRpbWUKPC9DYXJkPgoKIyMgQ29udmVyc2lvbiBQcm9jZXNzCgo8VGFicz4KICA8VGFiIHRpdGxlPSIkQjMg4oaSIEhZUEVTIj4KICAgICoqRGVwb3NpdGluZyBQcm9jZXNzKio6IAogICAgMS4gU2VuZCBCMyB0byBIeXBlRHVlbCByZXNlcnZlIGNvbnRyYWN0IAogICAgMi4gUmVjZWl2ZSBlcXVpdmFsZW50IEhZUEVTIGluIHBsYXRmb3JtIGFjY291bnQgCiAgICAzLiBIWVBFUyBhdmFpbGFibGUgaW5zdGFudGx5IGZvciBiZXR0aW5nIGFuZCBib29zdHMgCiAgICA0LiBSZXNlcnZlIGluY3JlYXNlcyBieSBkZXBvc2l0ZWQgYW1vdW50CgogICAgKipNZXRob2RzKio6IC0gRGlyZWN0IEIzIHRva2VuIHRyYW5zZmVyIC0gQ3JlZGl0IGNhcmQgcHVyY2hhc2UgKGF1dG8tY29udmVydGVkKSAtIEFueSBFUkMtMjAgdG9rZW4gKHN3YXBwZWQgdG8gQjMgZmlyc3QpIC0gQmFuayB0cmFuc2ZlciAoY29udmVydGVkIHRvIEIzKQoKICA8L1RhYj4KCiAgPFRhYiB0aXRsZT0iSFlQRVMg4oaSICRCMyI+CiAgICAqKldpdGhkcmF3YWwgUHJvY2VzcyoqOiAxLiBSZXF1ZXN0IHdpdGhkcmF3YWwgZnJvbSBwbGF0Zm9ybSBhY2NvdW50IDIuIEhZUEVTIGJhbGFuY2UgZGVjcmVhc2VzIGltbWVkaWF0ZWx5IDMuICRCMwogICAgdHJhbnNmZXJyZWQgZnJvbSByZXNlcnZlIHRvIHlvdXIgd2FsbGV0IDQuIFJlc2VydmUgZGVjcmVhc2VzIGJ5IHdpdGhkcmF3biBhbW91bnQgKipGZWF0dXJlcyoqOiAtIE5vIG1pbmltdW0KICAgIHdpdGhkcmF3YWwgYW1vdW50IC0gTm8gd2l0aGRyYXdhbCBmZWVzIC0gMjQvNyBhdmFpbGFiaWxpdHkgLSBJbnN0YW50IHByb2Nlc3NpbmcKICA8L1RhYj4KPC9UYWJzPgoKIyMgSFlQRVMgdnMgJEIzIENvbXBhcmlzb24KCnwgRmVhdHVyZSAgICAgICAgICAgICAgICB8IEhZUEVTICAgICAgICAgICAgICAgfCAkQjMgICAgICAgICAgICAgICAgICB8CnwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLSB8CnwgKipCZXR0aW5nKiogICAgICAgICAgICB8IOKchSBJbnN0YW50ICAgICAgICAgIHwg4p2MIEdhcyBmZWVzICsgZGVsYXlzIHwKfCAqKkJvb3N0IFB1cmNoYXNlcyoqICAgIHwg4pyFIEluc3RhbnQgICAgICAgICAgfCDinYwgR2FzIGZlZXMgKyBkZWxheXMgfAp8ICoqQXJlbmEgVHJhZGluZyoqICAgICAgfCDinYwgTm90IHN1cHBvcnRlZCAgICB8IOKchSBERVggdHJhZGluZyAgICAgICB8CnwgKipDcm9zcy1QbGF0Zm9ybSoqICAgICB8IOKdjCBIeXBlRHVlbCBvbmx5ICAgIHwg4pyFIEZ1bGwgZWNvc3lzdGVtICAgIHwKfCAqKlRyYW5zYWN0aW9uIENvc3RzKiogIHwg4pyFIEZyZWUgICAgICAgICAgICAgfCDinYwgR2FzIGZlZXMgICAgICAgICAgfAp8ICoqV2FsbGV0IEN1c3RvZHkqKiAgICAgfCDinYwgUGxhdGZvcm0gY3VzdG9keSB8IOKchSBTZWxmLWN1c3RvZHkgICAgICB8CnwgKipJbnN0YW50IENvbnZlcnNpb24qKiB8IOKchSAxOjEgd2l0aCAkQjMgICAgIHwg4pyFIDE6MSB3aXRoIEhZUEVTICAgIHwKCiMjIFJlc2VydmUgTWFuYWdlbWVudAoKIyMjIFRyYW5zcGFyZW5jeSAmIFNlY3VyaXR5CgpUaGUgSFlQRVMgcmVzZXJ2ZSBzeXN0ZW0gb3BlcmF0ZXMgd2l0aCBmdWxsIHRyYW5zcGFyZW5jeToKCjxBY2NvcmRpb25Hcm91cD4KICA8QWNjb3JkaW9uIHRpdGxlPSJSZXNlcnZlIENvbXBvc2l0aW9uIj4KICAgICoqMTAwJSAkQjMgQmFja2luZyoqOiAtIEV2ZXJ5IEhZUEVTIGlzIGJhY2tlZCBieSAxICRCMyB0b2tlbiAtIE5vIGZyYWN0aW9uYWwgcmVzZXJ2ZXMgb3IgbGV2ZXJhZ2UgLSBSZWFsLXRpbWUKICAgIHJlc2VydmUgbW9uaXRvcmluZyAtIFB1YmxpYyByZXNlcnZlIGFkZHJlc3NlcyBmb3IgdmVyaWZpY2F0aW9uICoqUmVzZXJ2ZSBMb2NhdGlvbnMqKjogLSA4MCUgaW4gbXVsdGktc2lnbmF0dXJlIGNvbGQKICAgIHN0b3JhZ2UgLSAxNSUgaW4gaG90IHdhbGxldCBmb3IgaW5zdGFudCB3aXRoZHJhd2FscyAtIDUlIGVtZXJnZW5jeSByZXNlcnZlcyBmb3Igb3BlcmF0aW9uYWwgbmVlZHMKICA8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IlNlY3VyaXR5IE1lYXN1cmVzIj4KICAqKk11bHRpLVNpZ25hdHVyZSBTZWN1cml0eSoqOiAtIDMtb2YtNSBtdWx0aS1zaWcgZm9yIGNvbGQgc3RvcmFnZSBhY2Nlc3MgLSBIYXJkd2FyZSBzZWN1cml0eSBtb2R1bGVzIChIU01zKSAtCiAgVGltZS1kZWxheWVkIHdpdGhkcmF3YWwgbWVjaGFuaXNtcyAtIFJlZ3VsYXIgc2VjdXJpdHkgYXVkaXRzIGFuZCBwZW5ldHJhdGlvbiB0ZXN0aW5nICoqT3BlcmF0aW9uYWwgU2VjdXJpdHkqKjogLQogIFJlYWwtdGltZSBtb25pdG9yaW5nIGFuZCBhbGVydHMgLSBBdXRvbWF0ZWQgcmVzZXJ2ZSByZWJhbGFuY2luZyAtIEVtZXJnZW5jeSBwYXVzZSBtZWNoYW5pc21zIC0gSW5zdXJhbmNlIGNvdmVyYWdlIGZvcgogIHRlY2huaWNhbCBmYWlsdXJlcwo8L0FjY29yZGlvbj4KCiAgPEFjY29yZGlvbiB0aXRsZT0iUHVibGljIFZlcmlmaWNhdGlvbiI+CiAgICAqKk9uLUNoYWluIFRyYW5zcGFyZW5jeSoqOiAtIFJlc2VydmUgYWRkcmVzc2VzIHB1YmxpY2x5IHZpZXdhYmxlIC0gUmVhbC10aW1lIHJlc2VydmUgdnMuIEhZUEVTIGlzc3VlZCB0cmFja2luZyAtCiAgICBNb250aGx5IHRoaXJkLXBhcnR5IGF1ZGl0cyAtIENvbW11bml0eSBnb3Zlcm5hbmNlIG92ZXJzaWdodCAqKk1vbml0b3JpbmcgVG9vbHMqKjogLSBQdWJsaWMgZGFzaGJvYXJkIHNob3dpbmcgcmVzZXJ2ZQogICAgc3RhdHVzIC0gQWxlcnQgc3lzdGVtIGZvciByZXNlcnZlIHJhdGlvIGNoYW5nZXMgLSBIaXN0b3JpY2FsIGRhdGEgYW5kIHRyZW5kIGFuYWx5c2lzIC0gSW5kZXBlbmRlbnQgdmVyaWZpY2F0aW9uCiAgICBzZXJ2aWNlcwogIDwvQWNjb3JkaW9uPgo8L0FjY29yZGlvbkdyb3VwPgoKIyMgSFlQRVMgVXNlIENhc2VzCgojIyMgUHJpbWFyeSBGdW5jdGlvbnMKCjxDYXJkIHRpdGxlPSJCYXR0bGUgQmV0dGluZyIgaWNvbj0iY29pbnMiPgogICoqQ29yZSBHYW1pbmcgQWN0aXZpdHkqKiAtIFBsYWNlIGJldHMgb24gQUkgYmF0dGxlcyBpbnN0YW50bHkgLSBObyB3YWl0aW5nIGZvciBibG9ja2NoYWluIGNvbmZpcm1hdGlvbnMgLSBXaW5uaW5ncwogIGNyZWRpdGVkIGltbWVkaWF0ZWx5IC0gU3VwcG9ydCBmb3IgcmFwaWQtZmlyZSBiZXR0aW5nIHN0cmF0ZWdpZXMKPC9DYXJkPgoKPENhcmQgdGl0bGU9IkJvb3N0IFB1cmNoYXNlcyIgaWNvbj0iemFwIj4KICAqKkludGVyYWN0aXZlIEdhbWVwbGF5KiogLSBCdXkgcG93ZXItdXBzIGR1cmluZyBsaXZlIGJhdHRsZXMgLSBSZWFsLXRpbWUgZGVwbG95bWVudCB3aXRob3V0IGRlbGF5cyAtIFN0cmF0ZWdpYyB0aW1pbmcKICB3aXRob3V0IGdhcyBjb25jZXJucyAtIENvbWJpbmUgbXVsdGlwbGUgYm9vc3RzIGVmZmVjdGl2ZWx5CjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJQbGF0Zm9ybSBOYXZpZ2F0aW9uIiBpY29uPSJuYXZpZ2F0aW9uIj4KICAqKlNlYW1sZXNzIEV4cGVyaWVuY2UqKiAtIE1vdmUgYmV0d2VlbiBhcmVuYXMgaW5zdGFudGx5IC0gUXVpY2sgdG91cm5hbWVudCByZWdpc3RyYXRpb24gLSBJbW1lZGlhdGUgYWNjZXNzIHRvIG5ldwogIGZlYXR1cmVzIC0gRnJpY3Rpb25sZXNzIHVzZXIgZXhwZXJpZW5jZQo8L0NhcmQ+Cg==",
    "lastUpdated": "2025-09-02T19:36:09.989Z"
  },
  {
    "sourceFile": "hypeduel/growth-flywheel.mdx",
    "sourceHash": "CiMjIFdoYXQgaXMgYSBHcm93dGggRmx5d2hlZWw/CgpBIGdyb3d0aCBmbHl3aGVlbCBpcyBhIHNlbGYtcmVpbmZvcmNpbmcgc3lzdGVtIHdoZXJlIGVhY2ggY29tcG9uZW50IGFtcGxpZmllcyB0aGUgb3RoZXJzLCBjcmVhdGluZyBtb21lbnR1bSB0aGF0IGJlY29tZXMgaW5jcmVhc2luZ2x5IGRpZmZpY3VsdCB0byBzdG9wLiBJbiBIeXBlRHVlbCwgbXVsdGlwbGUgaW50ZXJjb25uZWN0ZWQgc3lzdGVtcyB3b3JrIHRvZ2V0aGVyIHRvOgoKLSAqKkF0dHJhY3QgbmV3IHVzZXJzKiogdGhyb3VnaCBjb21wZWxsaW5nIGV4cGVyaWVuY2VzCi0gKipSZXRhaW4gZXhpc3RpbmcgdXNlcnMqKiB3aXRoIGVuZ2FnaW5nIG1lY2hhbmljcwotICoqSW5jcmVhc2UgdXNlciB2YWx1ZSoqIHRocm91Z2ggZW5oYW5jZWQgcGFydGljaXBhdGlvbgotICoqR2VuZXJhdGUgcGxhdGZvcm0gcmV2ZW51ZSoqIHRvIGZ1bmQgZnVydGhlciBncm93dGgKCiMjIENvcmUgRmx5d2hlZWwgQ29tcG9uZW50cwoKIyMjIFVzZXIgQWNxdWlzaXRpb24gTG9vcAoKIyMjIyBFbnRyeSBQb2ludHMKCi0gKipTb2NpYWwgTWVkaWEgVmlyYWxpdHkqKjogU2hhcmVhYmxlIGFyZW5hIG91dGNvbWVzCi0gKipSZWZlcnJhbCBQcm9ncmFtcyoqOiBVc2VyLWRyaXZlbiBncm93dGggaW5jZW50aXZlcwotICoqQ29udGVudCBNYXJrZXRpbmcqKjogRWR1Y2F0aW9uYWwgYW5kIGVudGVydGFpbmluZyBjb250ZW50Ci0gKipQYXJ0bmVyc2hpcCBJbnRlZ3JhdGlvbioqOiBDcm9zcy1wbGF0Zm9ybSB1c2VyIGZsb3cKCiMjIyMgQ29udmVyc2lvbiBNZWNoYW5pc21zCgotICoqTG93IEJhcnJpZXIgRW50cnkqKjogRWFzeSBvbmJvYXJkaW5nIHByb2Nlc3MKLSAqKkltbWVkaWF0ZSBWYWx1ZSoqOiBRdWljayB3aW5zIGZvciBuZXcgdXNlcnMKLSAqKlByb2dyZXNzaXZlIEVuZ2FnZW1lbnQqKjogR3JhZHVhbGx5IGluY3JlYXNpbmcgaW52b2x2ZW1lbnQKLSAqKlNvY2lhbCBQcm9vZioqOiBDb21tdW5pdHkgdmFsaWRhdGlvbiBhbmQgc3VjY2VzcyBzdG9yaWVzCgojIyMgRW5nYWdlbWVudCBBbXBsaWZpY2F0aW9uCgojIyMjIEFjdGl2aXR5IERyaXZlcnMKCmBgYApVc2VyIEFjdGl2aXR5IOKGkiBJbmNyZWFzZWQgUmV3YXJkcyDihpIgSGlnaGVyIEVuZ2FnZW1lbnQg4oaSIE1vcmUgQWN0aXZpdHkKYGBgCgojIyMjIENvbW11bml0eSBCdWlsZGluZwoKLSAqKlNoYXJlZCBFeHBlcmllbmNlcyoqOiBDb2xsZWN0aXZlIGFyZW5hIHBhcnRpY2lwYXRpb24KLSAqKlNvY2lhbCBGZWF0dXJlcyoqOiBDaGF0LCBmb3J1bXMsIGxlYWRlcmJvYXJkcwotICoqUmVjb2duaXRpb24gU3lzdGVtcyoqOiBBY2hpZXZlbWVudHMgYW5kIHN0YXR1cwotICoqQ29sbGFib3JhdGl2ZSBFdmVudHMqKjogVGVhbS1iYXNlZCBjb21wZXRpdGlvbnMKCiMjIyBFY29ub21pYyBWYWx1ZSBDcmVhdGlvbgoKIyMjIyBSZXZlbnVlIEdlbmVyYXRpb24KCk11bHRpcGxlIHJldmVudWUgc3RyZWFtcyByZWluZm9yY2UgZWFjaCBvdGhlcjoKCi0gKipUcmFkaW5nIFZvbHVtZSoqOiBHZW5lcmF0ZXMgcGxhdGZvcm0gZmVlcwotICoqQXJlbmEgQ3JlYXRpb24qKjogQXR0cmFjdHMgYm90aCBjcmVhdG9ycyBhbmQgcGFydGljaXBhbnRzCi0gKipQcmVtaXVtIEZlYXR1cmVzKio6IEVuaGFuY2VkIHVzZXIgZXhwZXJpZW5jZQotICoqVG9rZW4gRWNvbm9taWNzKio6IFZhbHVlIGFwcHJlY2lhdGlvbiBkcml2ZXMgcGFydGljaXBhdGlvbgoKIyMjIyBWYWx1ZSBEaXN0cmlidXRpb24KCmBgYApQbGF0Zm9ybSBSZXZlbnVlIOKGkiBVc2VyIFJld2FyZHMg4oaSIEluY3JlYXNlZCBBY3Rpdml0eSDihpIgSGlnaGVyIFJldmVudWUKYGBgCgojIyBGbHl3aGVlbCBNZWNoYW5pY3MKCiMjIyBVc2VyIEpvdXJuZXkgT3B0aW1pemF0aW9uCgojIyMjIE9uYm9hcmRpbmcgU2VxdWVuY2UKCjEuICoqRGlzY292ZXJ5Kio6IFVzZXIgbGVhcm5zIGFib3V0IEh5cGVEdWVsCjIuICoqUmVnaXN0cmF0aW9uKio6IFNpbXBsZSBhY2NvdW50IGNyZWF0aW9uCjMuICoqRmlyc3QgRXhwZXJpZW5jZSoqOiBHdWlkZWQgYXJlbmEgcGFydGljaXBhdGlvbgo0LiAqKkVhcmx5IFN1Y2Nlc3MqKjogRW5naW5lZXJlZCBwb3NpdGl2ZSBvdXRjb21lcwo1LiAqKkhhYml0IEZvcm1hdGlvbioqOiBSZWd1bGFyIGVuZ2FnZW1lbnQgcGF0dGVybnMKNi4gKipDb21tdW5pdHkgSW50ZWdyYXRpb24qKjogU29jaWFsIGNvbm5lY3Rpb25zCjcuICoqQWR2YW5jZWQgRmVhdHVyZXMqKjogUG93ZXIgdXNlciBjYXBhYmlsaXRpZXMKCiMjIyMgUmV0ZW50aW9uIFN0cmF0ZWdpZXMKCi0gKipQcm9ncmVzc2l2ZSBSZXdhcmRzKio6IEluY3JlYXNpbmcgYmVuZWZpdHMgb3ZlciB0aW1lCi0gKipTdHJlYWsgTWVjaGFuaWNzKio6IERhaWx5IGVuZ2FnZW1lbnQgaW5jZW50aXZlcwotICoqQWNoaWV2ZW1lbnQgU3lzdGVtcyoqOiBMb25nLXRlcm0gZ29hbHMKLSAqKlNvY2lhbCBCb25kcyoqOiBDb21tdW5pdHkgcmVsYXRpb25zaGlwcwoKIyMjIE5ldHdvcmsgRWZmZWN0cwoKIyMjIyBVc2VyLXRvLVVzZXIgVmFsdWUKCkVhY2ggYWRkaXRpb25hbCB1c2VyIGluY3JlYXNlcyB2YWx1ZSBmb3IgZXhpc3RpbmcgdXNlcnM6CgotICoqTW9yZSBBcmVuYXMqKjogR3JlYXRlciB2YXJpZXR5IGFuZCBvcHBvcnR1bml0aWVzCi0gKipJbmNyZWFzZWQgTGlxdWlkaXR5Kio6IEJldHRlciB0cmFkaW5nIGNvbmRpdGlvbnMKLSAqKlNvY2lhbCBEeW5hbWljcyoqOiBSaWNoZXIgY29tbXVuaXR5IGV4cGVyaWVuY2UKLSAqKkNvbXBldGl0aXZlIERlcHRoKio6IE1vcmUgY2hhbGxlbmdpbmcgZ2FtZXBsYXkKCiMjIyMgQ3JlYXRvci1QYXJ0aWNpcGFudCBTeW5lcmd5CgpgYGAKTW9yZSBDcmVhdG9ycyDihpIgTW9yZSBDb250ZW50IOKGkiBNb3JlIFBhcnRpY2lwYW50cyDihpIgTW9yZSBSZXZlbnVlIGZvciBDcmVhdG9ycwpgYGAKCiMjIyBFY29ub21pYyBGbHl3aGVlbAoKIyMjIyBUb2tlbiBWYWx1ZSBBcHByZWNpYXRpb24KCi0gSW5jcmVhc2VkIHBsYXRmb3JtIHVzYWdlIGRyaXZlcyB0b2tlbiBkZW1hbmQKLSBIaWdoZXIgdG9rZW4gdmFsdWUgYXR0cmFjdHMgbW9yZSB1c2VycwotIE1vcmUgdXNlcnMgaW5jcmVhc2UgcGxhdGZvcm0gdXRpbGl0eQotIEdyZWF0ZXIgdXRpbGl0eSBpbmNyZWFzZXMgdG9rZW4gdmFsdWUKCiMjIyMgTGlxdWlkaXR5IEdyb3d0aAoKLSBIaWdoZXIgbGlxdWlkaXR5IGF0dHJhY3RzIG1vcmUgdHJhZGVycwotIE1vcmUgdHJhZGVycyBpbmNyZWFzZSBsaXF1aWRpdHkgZGVwdGgKLSBCZXR0ZXIgbGlxdWlkaXR5IGltcHJvdmVzIHVzZXIgZXhwZXJpZW5jZQotIEltcHJvdmVkIGV4cGVyaWVuY2UgYXR0cmFjdHMgbW9yZSB1c2Vycwo=",
    "lastUpdated": "2025-09-02T19:36:09.990Z"
  },
  {
    "sourceFile": "hypeduel/glossary.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:09.991Z"
  },
  {
    "sourceFile": "hypeduel/gameplay.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:09.992Z"
  },
  {
    "sourceFile": "hypeduel/fee-structure.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:09.994Z"
  },
  {
    "sourceFile": "hypeduel/faq.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:09.995Z"
  },
  {
    "sourceFile": "hypeduel/developers.mdx",
    "sourceHash": "Ckh5cGVEdWVsIEFyZW5hcyBhcmUgYnVpbHQgaW4gVW5pdHksIHdpdGggZWFjaCBhcmVuYSBoYXZpbmcgb25lIHNlcnZlciBoZWFkbGVzcyBidWlsZCB0aGF0IHJ1bnMgb24gdGhlIEh5cGVEdWVsIHNlcnZlcnMgYW5kIHNpbXVsYXRlcyB0aGUgZHVlbCBpbiByZWFsIHRpbWUsIGFuZCBvbmUgd2ViR0wgYnVpbGQgd2hpY2ggcnVucyBvbiB0aGUgY2xpZW50c2lkZSBhbmQgcmVjZWl2ZXMgdGhlIHN0cmVhbWVkIHNpbXVsYXRpb24gZGF0YSB0byBwbGF5YmFjay4KCiMjIFVuaXR5IFNESwoKV2Ugb2ZmZXIgYSB1bml0eSBTREsgdG8gZmFzY2lsbGl0YXRlIHRoZSBjcmVhdGlvbiBvZiBhcmVuYXMuIFdoYXQgZm9sbG93cyBpcyBhbiBvdmVydmlldyBvZiB0aGUgc3RlcHMgcmVxdWlyZWQgdG8gaW50ZWdyYXRlIHRoZSBTREsgYW5kIGNyZWF0ZSB0aGUgYXJlbmEgaW4gdW5pdHkuCgotIENyZWF0ZSB5b3VyIHNlcnZlci1zaWRlIHNjZW5lLgogIC0gU2V0dXAgeW91ciBlbnZpcm9ubWVudCwgZ2FtZXBsYXkgbWVjaGFuaWNzLCBhbmQgdHJhaW4geW91ciBhZ2VudHMgd2l0aCB1bml0eSBtbC1hZ2VudHMKICAtIFNldHVwICoqSHlwZUR1ZWxSZWNvcmRlciAqKnRvIHRyYWNrIHlvdXIgbWFpbiBzY2VuZSBvYmplY3RzIGluIHNwYWNlLgogIC0gQ2FsbCB0aGUgcmVjb3JkZXIncyAqKlB1c2hTdGF0ZUNoYW5nZSAqKm1ldGhvZCB0byBzdHJlYW0gYW55IHN0YXRlIGRhdGEgdG8gdGhlIGNsaWVudHMuCiAgICAtIFNldCB0aGUgc3RhdGUgc2NvcmVzIHByb3BlcnR5IGluIG9yZGVyIGZvciB0aGUgc2VydmVyIHRvIGJlIGFibGUgdG8gZGV0ZWN0IHRoZSBtYXRjaCdzIHByb2dyZXNzIGFuZCByZXNvbHV0aW9uIGF0IHRoZSBlbmQuCiAgLSBCdWlsZCBmb3IgTGludXggRGVkaWNhdGVkIFNlcnZlciBhbmQgdXBsb2FkIHlvdXIgYnVpbGQgdG8gaHlwZWR1ZWwuCi0gQ3JlYXRlIHlvdXIgY2xpZW50LXNpZGUgc2NlbmUuCiAgLSBEdXBsaWNhdGUgb2YgdGhlIHNlcnZlciBzaWRlLCBidXQgd2l0aCBncmFwaGljcyBhbmQgd2l0aG91dCB0aGUgYWdlbnQgbG9naWMuCiAgLSBUaGUgKipIeXBlRHVlbFJlY29yZGVyICoqd2lsbCBhdXRvbWF0aWNhbGx5IHBsYXliYWNrIHRoZSBwb3NpdGlvbnMgb2YgeW91ciBtYWluIHNjZW5lIG9iamVjdHMKICAtIExpc3RlbiB0byBldmVudHMgb2YgdGhlICoqSHlwZUR1ZWxDbGllbnQgKippbnN0YW5jZSB0byB1c2UgeW91ciBzdGF0ZSBjaGFuZ2VzIHRvIG1hbmFnZSB0aGUgVUkgYW5kIGdyYXBoaWNhbCBlbGVtZW50cyBvZiB5b3VyIGdhbWUuCgojIyAgSG93IGl0IFdvcmtzCgpXaGVuIGEgbWF0Y2ggYmVnaW5zIG9uIEh5cGVEdWVsLCB3ZSBydW4gdGhlIGFyZW5hJ3Mgc2VydmVyIGJ1aWxkIHdoaWNoIHNlbmRzIGJhY2sgcmVhbHRpbWUgZGF0YSBmcm9tIHRoZSBzaW11bGF0aW9uLiBDbGllbnRzIG9uIHRoZSB3ZWJzaXRlIGFyZSBydW5uaW5nIHRoZWlyIG93biB3ZWJHTCB2ZXJzaW9ucyBvZiB0aGUgYXJlbmEgKHRoZSBjbGllbnQtc2lkZSBidWlsZCkgYW5kIGNvbm5lY3QgdG8gb3VyIEFQSSB3aGljaCBzdHJlYW1zIGFsbCB0aGUgc2ltdWxhdGlvbiBkYXRhLCB3aGljaCBpcyB0aGVuIHVzZWQgaW4gdW5pdHkgdG8gcmVjcmVhdGUgdGhlIGV4YWN0IHNhbWUgc2NlbmUuCgpgYGBtZXJtYWlkCmdyYXBoIFRECiAgICBBWyJVbml0eSBTREs8YnIvPuKame+4jyJdIC0tPiBCWyJTZXJ2ZXIgU2NlbmU8YnIvPvCflqXvuI8iXQogICAgQSAtLT4gQ1siQ2xpZW50IFNjZW5lPGJyLz7wn46uIl0KCiAgICBCIC0tPiBFWyJNTC1BZ2VudHMgJiBHYW1lcGxheSBMb2dpYyJdCiAgICBCIC0tPiBGWyJSZWNvcmRlciBUcmFja2luZyJdCiAgICBCIC0tPiBHWyJQdXNoU3RhdGVDaGFuZ2U8YnIvPisgU2NvcmVzIl0KCiAgICBDIC0tPiBIWyJEdXBsaWNhdGUgU2NlbmUiXQogICAgQyAtLT4gSVsiUmVjb3JkZXIgUGxheWJhY2siXQogICAgQyAtLT4gSlsiQ2xpZW50IEV2ZW50cyDihpIgVUkiXQoKYGBg",
    "lastUpdated": "2025-09-02T19:36:09.997Z"
  },
  {
    "sourceFile": "hypeduel/boosts.mdx",
    "sourceHash": "ClRoZSBCb29zdHMgc3lzdGVtIHRyYW5zZm9ybXMgSHlwZUR1ZWwgZnJvbSBwYXNzaXZlIHZpZXdpbmcgdG8gYWN0aXZlIHBhcnRpY2lwYXRpb24uIFB1cmNoYXNlIHNpbmdsZS11c2UgcG93ZXItdXBzIHdpdGggSFlQRVMgdG9rZW5zIHRvIGRpcmVjdGx5IGluZmx1ZW5jZSBBSSBiYXR0bGUgb3V0Y29tZXMgd2hpbGUgbWF0Y2hlcyBhcmUgaGFwcGVuaW5nLgoKIyMgV2hhdCBBcmUgQm9vc3RzPwoKKipCb29zdHMqKiBhcmUgcmVhbC10aW1lIHBvd2VyLXVwcyB0aGF0IHByb3ZpZGUgdGVtcG9yYXJ5LCByYW5kb20gYWR2YW50YWdlcyB0byBzb21lL2FsbCBBSSBjb21wZXRpdG9ycyBkdXJpbmcgYmF0dGxlcy4gVW5saWtlIGJldHRpbmcgKHdoaWNoIGlzIHBhc3NpdmUpLCBib29zdHMgbGV0IHlvdSBhY3RpdmVseSBwYXJ0aWNpcGF0ZSBpbiB0aGUgY29tcGV0aXRpb24gYXMgaXQgdW5mb2xkcy4KCiMjIyBLZXkgQ2hhcmFjdGVyaXN0aWNzCgotICoqU2luZ2xlLVVzZSoqOiBFYWNoIGJvb3N0IGNhbiBvbmx5IGJlIHVzZWQgb25jZSBwZXIgYmF0dGxlCi0gKipSZWFsLVRpbWUqKjogRGVwbG95IGR1cmluZyBsaXZlIG1hdGNoZXMgZm9yIGltbWVkaWF0ZSBlZmZlY3QKLSAqKkxpbWl0ZWQgQXZhaWxhYmlsaXR5Kio6IEZpbml0ZSBxdWFudGl0aWVzIGNyZWF0ZSBzdHJhdGVnaWMgc2NhcmNpdHkKLSAqKkFyZW5hLVNwZWNpZmljKio6IERpZmZlcmVudCBib29zdCB0eXBlcyBmb3IgZWFjaCBhcmVuYSBlbnZpcm9ubWVudAoKIyMgSG93IHRvIFVzZSBCb29zdHMKCiMjIyBQdXJjaGFzaW5nIEJvb3N0cwoKPFN0ZXBzPgogIDxTdGVwIHRpdGxlPSJFbnRlciBBcmVuYSI+TmF2aWdhdGUgdG8gYW4gYWN0aXZlIGJhdHRsZSBhcmVuYSB3aXRoIGxpdmUgbWF0Y2hlczwvU3RlcD4KICA8U3RlcCB0aXRsZT0iU2VsZWN0IGEgQm9vc3QiPkJvb3N0cyBhcmUgZGlzcGxheWVkIGJlbG93IHRoZSBsaXZlIGdhbWUgc2NyZWVuPC9TdGVwPgogIDxTdGVwIHRpdGxlPSJDb25maXJtIFB1cmNoYXNlIj5QYXkgSFlQRVMgY29zdCBhbmQgYm9vc3RzIGFyZSBhZGRlZCB0byB5b3VyIGludmVudG9yeTwvU3RlcD4KPC9TdGVwcz4KCiMjIEJvb3N0IEVjb25vbWljcwoKIyMjIFJldmVudWUgRGlzdHJpYnV0aW9uCgpCb29zdCBwdXJjaGFzZXMgZ2VuZXJhdGUgcmV2ZW51ZSBzaGFyZWQgYmV0d2VlbiBhcmVuYSBzdGFrZWhvbGRlcnM6CgpgYGAKQm9vc3QgUHVyY2hhc2U6IDEwMCUK4pSc4pSA4pSAIDUwJSDihpIgQXJlbmEgVHJlYXN1cnkgKHRva2VuIGJ1eWJhY2tzKQrilJTilIDilIAgNTAlIOKGkiBBcmVuYSBDcmVhdG9yIChkZXZlbG9wbWVudCBpbmNlbnRpdmUpCmBgYAoKIyMjIEVjb25vbWljIE9wdGltaXphdGlvbgoKU21hcnQgYm9vc3QgdXNhZ2UgY2FuIGltcHJvdmUgUk9JOgoKMS4gKipWYWx1ZSBCZXR0aW5nKio6IEJvb3N0IHVuZGVyZG9ncyBmb3IgaGlnaGVyIHBheW91dCBtdWx0aXBsaWVycwoyLiAqKkluc3VyYW5jZSBCb29zdGluZyoqOiBQcm90ZWN0IGxhcmdlIGJldHMgd2l0aCBkZWZlbnNpdmUgYm9vc3RzCjMuICoqTW9tZW50dW0gVHJhZGluZyoqOiBDaGFpbiBib29zdHMgdG8gY3JlYXRlIGRlY2lzaXZlIGFkdmFudGFnZXMKNC4gKipBcmJpdHJhZ2UgT3Bwb3J0dW5pdGllcyoqOiBJZGVudGlmeSBtaXNwcmljZWQgYm9vc3QgZWZmZWN0cwo=",
    "lastUpdated": "2025-09-02T19:36:09.998Z"
  },
  {
    "sourceFile": "hypeduel/betting-system.mdx",
    "sourceHash": "Ckh5cGVEdWVsJ3MgYmV0dGluZyBzeXN0ZW0gaXMgYnVpbHQgb24gKipwYXJpbXV0dWVsIHByaW5jaXBsZXMqKiAtIGEgZmFpciwgdHJhbnNwYXJlbnQgbWV0aG9kIHdoZXJlIGFsbCBiZXRzIGFyZSBwb29sZWQgdG9nZXRoZXIgYW5kIHdpbm5lcnMgc2hhcmUgdGhlIHRvdGFsIHByaXplIHBvb2wuIFRoaXMgY3JlYXRlcyBkeW5hbWljIG9kZHMgYW5kIGVuc3VyZXMgdGhlIGhvdXNlIG5ldmVyIGhhcyBhbiB1bmZhaXIgYWR2YW50YWdlLgoKIyMgSG93IFBhcmltdXR1ZWwgQmV0dGluZyBXb3JrcwoKVW5saWtlIHRyYWRpdGlvbmFsIHNwb3J0c2Jvb2tzIHdpdGggZml4ZWQgb2RkcywgcGFyaW11dHVlbCBiZXR0aW5nIGNyZWF0ZXMgYSBmYWlyLCBjb21tdW5pdHktZHJpdmVuIHdhZ2VyaW5nIGVudmlyb25tZW50OgoKIyMjIFRyYWRpdGlvbmFsIEJldHRpbmcgdnMgUGFyaW11dHVlbAoKPFRhYnM+CiAgPFRhYiB0aXRsZT0iVHJhZGl0aW9uYWwgU3BvcnRzYm9vayI+CiAgICBgYGAKICAgIEhvdXNlIHNldHMgb2RkczogQUkgQWxwaGEgd2lucyBhdCAyOjEKICAgIOKUnOKUgOKUgCBQbGF5ZXIgYmV0cyAxMDAgSFlQRVMKICAgIOKUnOKUgOKUgCBJZiB3aW5zOiByZWNlaXZlcyAyMDAgSFlQRVMKICAgIOKUnOKUgOKUgCBJZiBsb3NlczogaG91c2Uga2VlcHMgMTAwIEhZUEVTCiAgICDilJTilIDilIAgSG91c2UgcHJvZml0IGJ1aWx0IGludG8gb2RkcwogICAgYGBgCiAgPC9UYWI+CgogIDxUYWIgdGl0bGU9Ikh5cGVEdWVsIFBhcmltdXR1ZWwiPgogICAgYGBgCiAgICBDb21tdW5pdHkgY3JlYXRlcyBwb29sOiBBbGwgYmV0cyBjb21iaW5lZAogICAg4pSc4pSA4pSAIFBsYXllcnMgYmV0IG9uIGRpZmZlcmVudCBBSXMKICAgIOKUnOKUgOKUgCBXaW5uZXJzIHNoYXJlIGVudGlyZSBwcml6ZSBwb29sCiAgICDilJzilIDilIAgT2RkcyBjaGFuZ2UgYmFzZWQgb24gYmV0dGluZyBwYXR0ZXJucwogICAg4pSU4pSA4pSAIE5vIGhvdXNlIGFkdmFudGFnZSAtIHRyYW5zcGFyZW50IGZlZXMgb25seQogICAgYGBgCiAgPC9UYWI+CjwvVGFicz4KCiMjIEJldHRpbmcgUHJvY2VzcwoKIyMjIFN0ZXAtYnktU3RlcCBCZXR0aW5nCgo8U3RlcHM+CiAgPFN0ZXAgdGl0bGU9IkFyZW5hIFNlbGVjdGlvbiI+Q2hvb3NlIGFuIGFjdGl2ZSBhcmVuYSB3aXRoIHVwY29taW5nIEFJIGJhdHRsZXM8L1N0ZXA+CiAgPFN0ZXAgdGl0bGU9IkFJIEFuYWx5c2lzIj4KICAgIFJldmlldyBjb21wZXRpbmcgQUkgbW9kZWxzOiAtIFJlY2VudCBwZXJmb3JtYW5jZSBzdGF0aXN0aWNzIC0gSGVhZC10by1oZWFkIGJhdHRsZSBoaXN0b3J5IC0gQ29tbXVuaXR5IGJldHRpbmcKICAgIHBhdHRlcm5zIC0gVGVjaG5pY2FsIHNwZWNpZmljYXRpb25zCiAgPC9TdGVwPgogIDxTdGVwIHRpdGxlPSJCZXQgUGxhY2VtZW50Ij4KICAgIC0gU2VsZWN0IHlvdXIgcHJlZmVycmVkIEFJIC0gRW50ZXIgYmV0IGFtb3VudCBpbiBIWVBFUyAtIFJldmlldyBwb3RlbnRpYWwgcGF5b3V0IHJhbmdlIC0gQ29uZmlybSBiZXQgcGxhY2VtZW50CiAgPC9TdGVwPgogIDxTdGVwIHRpdGxlPSJQb29sIE1vbml0b3JpbmciPldhdGNoIGhvdyBiZXR0aW5nIHBhdHRlcm5zIGFmZmVjdCBwb3RlbnRpYWwgcGF5b3V0cyBhcyBtb3JlIHBsYXllcnMgam9pbjwvU3RlcD4KPC9TdGVwcz4KCiMjIFByaXplIFBvb2wgRGlzdHJpYnV0aW9uCgpFdmVyeSBiZXR0aW5nIHBvb2wgZm9sbG93cyBhIHRyYW5zcGFyZW50IGZlZSBzdHJ1Y3R1cmU6CgpgYGAKVG90YWwgQmV0dGluZyBQb29sOiAxMDAlCuKUnOKUgOKUgCA4NSUg4oaSIFdpbm5lcnMgKHByb3BvcnRpb25hbCBkaXN0cmlidXRpb24pCuKUnOKUgOKUgCAxMCUg4oaSIEFyZW5hIFRyZWFzdXJ5ICh0b2tlbiBidXliYWNrcykK4pSU4pSA4pSAIDUlIOKGkiBBcmVuYSBDcmVhdG9yIChkZXZlbG9wbWVudCByZXdhcmQpCmBgYAoKIyMjIFdpbm5lciBQYXlvdXQgQ2FsY3VsYXRpb24KCldpbm5lcnMgcmVjZWl2ZSBwYXlvdXRzIHByb3BvcnRpb25hbCB0byB0aGVpciBiZXQgc2l6ZSB3aXRoaW4gdGhlIHdpbm5pbmcgcG9vbDoKCmBgYHR5cGVzY3JpcHQKZnVuY3Rpb24gY2FsY3VsYXRlUGF5b3V0KHBsYXllckJldDogbnVtYmVyLCB3aW5uaW5nUG9vbDogbnVtYmVyLCB0b3RhbFdpbm5lclBheW91dDogbnVtYmVyKTogbnVtYmVyIHsKICBjb25zdCBwbGF5ZXJTaGFyZSA9IHBsYXllckJldCAvIHdpbm5pbmdQb29sOwogIGNvbnN0IHBheW91dCA9IHRvdGFsV2lubmVyUGF5b3V0ICogcGxheWVyU2hhcmU7CiAgcmV0dXJuIHBheW91dDsKfQpgYGAKCioqRXhhbXBsZSBTY2VuYXJpbyoqOgoKLSBUb3RhbCBwb29sOiAxMCwwMDAgSFlQRVMKLSBZb3VyIGJldCBvbiBBSSBBbHBoYTogNTAwIEhZUEVTCi0gVG90YWwgYmV0cyBvbiBBSSBBbHBoYTogMiwwMDAgSFlQRVMKLSBBSSBBbHBoYSB3aW5zIQoKKipZb3VyIHBheW91dCoqOgoKYGBgCldpbm5lciBwb29sIHNoYXJlOiA4LDUwMCBIWVBFUyAoODUlIG9mIDEwLDAwMCkKWW91ciBzaGFyZTogNTAwIC8gMiwwMDAgPSAyNSUgb2Ygd2lubmluZyBiZXRzCllvdXIgcGF5b3V0OiA4LDUwMCDDlyAwLjI1ID0gMiwxMjUgSFlQRVMKUmV0dXJuOiAzMjUlICg0LjI1OjEgb2RkcykKYGBgCgojIyBCZXR0aW5nIExpbWl0cyAmIFJ1bGVzCgojIyMgTWluaW11bSAmIE1heGltdW0gQmV0cwoKPEFjY29yZGlvbkdyb3VwPgogIDxBY2NvcmRpb24gdGl0bGU9Ik1pbmltdW0gQmV0IFJlcXVpcmVtZW50cyI+CiAgICAtICoqU3RhbmRhcmQgQXJlbmFzKio6IDEwIEhZUEVTIG1pbmltdW0KICAgIC0gKipQcmVtaXVtIEFyZW5hcyoqOiA1MCBIWVBFUyBtaW5pbXVtCiAgICAtICoqVG91cm5hbWVudCBFdmVudHMqKjogMTAwIEhZUEVTIG1pbmltdW0KICAgIAogICAgKk1pbmltdW1zIGVuc3VyZSBtZWFuaW5nZnVsIHByaXplIHBvb2xzIGFuZCBwcmV2ZW50IHNwYW0gYmV0dGluZyoKICA8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9Ik1heGltdW0gQmV0IExpbWl0cyI+CiAgLSAqKlBlciBCYXR0bGUqKjogMTAsMDAwIEhZUEVTIG1heGltdW0gLSAqKlBlciBQbGF5ZXIgRGFpbHkqKjogNTAsMDAwIEhZUEVTIG1heGltdW0gLSAqKkFyZW5hIFBvb2wqKjogTm8gc2luZ2xlIGJldAogIGNhbiBleGNlZWQgNTAlIG9mIGN1cnJlbnQgcG9vbCAqTWF4aW11bXMgcHJldmVudCBtYXJrZXQgbWFuaXB1bGF0aW9uIGFuZCBlbnN1cmUgZmFpciBwbGF5Kgo8L0FjY29yZGlvbj4KCiAgPEFjY29yZGlvbiB0aXRsZT0iU3BlY2lhbCBFdmVudCBSdWxlcyI+CiAgICAtICoqVG91cm5hbWVudCBGaW5hbHMqKjogSGlnaGVyIGxpbWl0cyBtYXkgYXBwbHkKICAgIC0gKipOZXcgQXJlbmEgTGF1bmNoKio6IFJlZHVjZWQgbGltaXRzIGR1cmluZyBib25kaW5nIHBoYXNlCiAgICAtICoqTWFpbnRlbmFuY2UgUGVyaW9kcyoqOiBCZXR0aW5nIG1heSBiZSB0ZW1wb3JhcmlseSBzdXNwZW5kZWQKICA8L0FjY29yZGlvbj4KPC9BY2NvcmRpb25Hcm91cD4KCiMjIyBCZXR0aW5nIEN1dG9mZiBUaW1lcwoKQmV0IHBsYWNlbWVudCBkZWFkbGluZXMgZW5zdXJlIGZhaXIgY29tcGV0aXRpb246CgotICoqU3RhbmRhcmQgQmF0dGxlcyoqOiAzMCBzZWNvbmRzIGJlZm9yZSBtYXRjaCBzdGFydAotICoqUXVpY2sgQmF0dGxlcyoqOiAxNSBzZWNvbmRzIGJlZm9yZSBtYXRjaCBzdGFydAotICoqVG91cm5hbWVudCBNYXRjaGVzKio6IDYwIHNlY29uZHMgYmVmb3JlIG1hdGNoIHN0YXJ0Cgo8V2FybmluZz5CZXRzIHBsYWNlZCBhZnRlciBjdXRvZmYgdGltZSB3aWxsIGJlIHJlamVjdGVkIGFuZCBmdW5kcyByZXR1cm5lZCBpbW1lZGlhdGVseSB0byB5b3VyIEhZUEVTIGJhbGFuY2UuPC9XYXJuaW5nPgo=",
    "lastUpdated": "2025-09-02T19:36:09.999Z"
  },
  {
    "sourceFile": "hypeduel/arenas.mdx",
    "sourceHash": "CkFyZW5hcyBhcmUgdGhlIGhlYXJ0IG9mIEh5cGVEdWVsIC0gdW5pcXVlIGNvbXBldGl0aXZlIGVudmlyb25tZW50cyB3aGVyZSBBSSBtb2RlbHMgYmF0dGxlIGluIHNwZWNpYWxpemVkIHNjZW5hcmlvcy4gRWFjaCBhcmVuYSBmZWF0dXJlcyBkaXN0aW5jdCBnYW1lcGxheSBtZWNoYW5pY3MsIEFJIGNoYWxsZW5nZXMsIGFuZCBjb21tdW5pdHkgZWNvbm9taWVzIHBvd2VyZWQgYnkgQXJlbmFDb2lucy4KCiMjIEFyZW5hIExpZmVjeWNsZQoKIyMjIERldmVsb3BtZW50IFN0YWdlcwoKPFN0ZXBzPgogIDxTdGVwIHRpdGxlPSJDb25jZXB0ICYgRGVzaWduIj5BcmVuYSBjcmVhdG9ycyBkZXZlbG9wIHRoZSBjb3JlIGdhbWVwbGF5IGNvbmNlcHQsIHJ1bGVzLCBhbmQgQUkgcmVxdWlyZW1lbnRzPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlRlY2huaWNhbCBJbXBsZW1lbnRhdGlvbiI+QnVpbGQgdGhlIGJhdHRsZSBlbmdpbmUsIEFJIGludGVncmF0aW9uLCBhbmQgYm9vc3Qgc3lzdGVtPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlRlc3RpbmcgJiBCYWxhbmNpbmciPkFscGhhIGFuZCBiZXRhIHRlc3Rpbmcgd2l0aCBjb21tdW5pdHkgZmVlZGJhY2sgYW5kIEFJIG1vZGVsIG9wdGltaXphdGlvbjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJMYXVuY2ggJiBCb25kaW5nIj5QdWJsaWMgbGF1bmNoIHdpdGggQXJlbmFDb2luIGJvbmRpbmcgcGhhc2UgYW5kIGluaXRpYWwgY29tbXVuaXR5IGJ1aWxkaW5nPC9TdGVwPgoKICA8U3RlcCB0aXRsZT0iR3Jvd3RoICYgRXZvbHV0aW9uIj5PbmdvaW5nIGRldmVsb3BtZW50LCBmZWF0dXJlIGFkZGl0aW9ucywgYW5kIGNvbW11bml0eSBleHBhbnNpb248L1N0ZXA+CjwvU3RlcHM+CgojIyMgQ29tbXVuaXR5IEJ1aWxkaW5nCgoqKkFyZW5hIFN1Y2Nlc3MgRmFjdG9ycyoqOgoKPFRhYnM+CiAgPFRhYiB0aXRsZT0iRW5nYWdlbWVudCI+CiAgICAqKlBsYXllciBSZXRlbnRpb24gU3RyYXRlZ2llcyoqIC0gUmVndWxhciBjb250ZW50IHVwZGF0ZXMgYW5kIG5ldyBmZWF0dXJlcyAtIENvbW11bml0eSBldmVudHMgYW5kIHRvdXJuYW1lbnRzIC0KICAgIExlYWRlcmJvYXJkcyBhbmQgYWNoaWV2ZW1lbnQgc3lzdGVtcyAtIFNvY2lhbCBmZWF0dXJlcyBhbmQgcGxheWVyIGludGVyYWN0aW9uIC0gQ3JlYXRvciBjb21tdW5pY2F0aW9uIGFuZAogICAgdHJhbnNwYXJlbmN5CiAgPC9UYWI+Cgo8VGFiIHRpdGxlPSJCYWxhbmNlIj4KICAqKkZhaXIgQ29tcGV0aXRpb24gTWFpbnRlbmFuY2UqKiAtIEFJIG1vZGVsIHBlcmZvcm1hbmNlIGJhbGFuY2luZyAtIEJvb3N0IGVmZmVjdGl2ZW5lc3MgdHVuaW5nIC0gRWNvbm9taWMgcGFyYW1ldGVyCiAgYWRqdXN0bWVudHMgLSBDb21tdW5pdHkgZmVlZGJhY2sgaW50ZWdyYXRpb24gLSBSZWd1bGFyIG1ldGEgYW5hbHlzaXMgYW5kIHVwZGF0ZXMKPC9UYWI+CgogIDxUYWIgdGl0bGU9Iklubm92YXRpb24iPgogICAgKipDb250aW51b3VzIEltcHJvdmVtZW50KiogLSBOZXcgQUkgbW9kZWwgaW50ZWdyYXRpb24gLSBHYW1lcGxheSBtZWNoYW5pYyBlbmhhbmNlbWVudHMgLSBWaXN1YWwgYW5kIHRlY2huaWNhbAogICAgdXBncmFkZXMgLSBDcm9zcy1hcmVuYSBjb2xsYWJvcmF0aW9uIGZlYXR1cmVzIC0gQ3V0dGluZy1lZGdlIHRlY2hub2xvZ3kgYWRvcHRpb24KICA8L1RhYj4KPC9UYWJzPgoKIyMgQXJlbmEgRWNvbm9taWNzCgojIyMgUmV2ZW51ZSBHZW5lcmF0aW9uCgpFYWNoIGFyZW5hIGdlbmVyYXRlcyByZXZlbnVlIHRocm91Z2ggbXVsdGlwbGUgc3RyZWFtczoKCjxBY2NvcmRpb25Hcm91cD4KICA8QWNjb3JkaW9uIHRpdGxlPSJCZXR0aW5nIEZlZXMgKFByaW1hcnkgUmV2ZW51ZSkiPgogICAgKioxMCUgb2YgYWxsIGJldHRpbmcgcG9vbHMqKiAtIENvbnNpc3RlbnQgcmV2ZW51ZSBmcm9tIGFjdGl2ZSBwbGF5ZXIgYmFzZSAtIFNjYWxlcyB3aXRoIGJldHRpbmcgdm9sdW1lIGFuZCBmcmVxdWVuY3kKICAgIC0gUHJlZGljdGFibGUgaW5jb21lIHN0cmVhbSBmb3IgcGxhbm5pbmcgLSBEcml2ZXMgQXJlbmFDb2luIHZhbHVlIHRocm91Z2ggYnV5YmFja3MgKipPcHRpbWl6YXRpb24gU3RyYXRlZ2llcyoqOiAtCiAgICBJbmNyZWFzZSBiYXR0bGUgZnJlcXVlbmN5IGR1cmluZyBwZWFrIGhvdXJzIC0gT3B0aW1pemUgbWF0Y2ggZHVyYXRpb24gZm9yIG1heGltdW0gZW5nYWdlbWVudCAtIEltcGxlbWVudCBkeW5hbWljCiAgICBwcmljaW5nIGZvciBzcGVjaWFsIGV2ZW50cyAtIENyZWF0ZSBjb21wZWxsaW5nIGJldHRpbmcgbmFycmF0aXZlcwogIDwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iQm9vc3QgUmV2ZW51ZSAoU2Vjb25kYXJ5IFJldmVudWUpIj4KICAqKjUwJSBvZiBib29zdCBwdXJjaGFzZSByZXZlbnVlKiogLSBIaWdoZXItbWFyZ2luIHJldmVudWUgd2l0aCBncm93dGggcG90ZW50aWFsIC0gSW5jcmVhc2VzIGR1cmluZyBleGNpdGluZyBvciBjbG9zZQogIGJhdHRsZXMgLSBFbmNvdXJhZ2VzIGludGVyYWN0aXZlIGdhbWVwbGF5IHBhcnRpY2lwYXRpb24gLSBDcmVhdGVzIGFkZGl0aW9uYWwgZW5nYWdlbWVudCBiZXlvbmQgYmV0dGluZyAqKkdyb3d0aAogIFRhY3RpY3MqKjogLSBEZXZlbG9wIHVuaXF1ZSBhbmQgcG93ZXJmdWwgYm9vc3QgdHlwZXMgLSBCYWxhbmNlIGJvb3N0IGVmZmVjdHMgZm9yIHN0cmF0ZWdpYyBpbXBvcnRhbmNlIC0gQ3JlYXRlIGJvb3N0CiAgY29tYmluYXRpb25zIGFuZCBzeW5lcmdpZXMgLSBJbXBsZW1lbnQgZHluYW1pYyBib29zdCBwcmljaW5nCjwvQWNjb3JkaW9uPgoKICA8QWNjb3JkaW9uIHRpdGxlPSJUcmFkaW5nIEZlZXMgKExvbmctdGVybSBSZXZlbnVlKSI+CiAgICAqKjY2JSBvZiBBcmVuYUNvaW4gdHJhZGluZyBmZWVzIChwb3N0LURFWCkqKiAtIFBhc3NpdmUgcmV2ZW51ZSByZXF1aXJpbmcgbWluaW1hbCBlZmZvcnQgLSBHcm93cyB3aXRoIHRva2VuIGFkb3B0aW9uCiAgICBhbmQgc3BlY3VsYXRpb24gLSBCZW5lZml0cyBmcm9tIG92ZXJhbGwgY3J5cHRvIG1hcmtldCBncm93dGggLSBQcm92aWRlcyBsb25nLXRlcm0gc3VzdGFpbmFiaWxpdHkgKipFbmhhbmNlbWVudAogICAgTWV0aG9kcyoqOiAtIEJ1aWxkIHN0cm9uZyB0b2tlbiBob2xkZXIgY29tbXVuaXR5IC0gSW1wbGVtZW50IGdvdmVybmFuY2UgYW5kIHV0aWxpdHkgZmVhdHVyZXMgLSBQYXJ0bmVyIHdpdGggb3RoZXIKICAgIERlRmkgcHJvdG9jb2xzIC0gQ3JlYXRlIHRva2VuIGJ1cm4gbWVjaGFuaXNtcwogIDwvQWNjb3JkaW9uPgo8L0FjY29yZGlvbkdyb3VwPgoKIyMjIFBlcmZvcm1hbmNlIE1ldHJpY3MKCioqS2V5IEFyZW5hIFN1Y2Nlc3MgSW5kaWNhdG9ycyoqOgoKPENhcmQgdGl0bGU9IlVzZXIgRW5nYWdlbWVudCIgaWNvbj0idXNlcnMiPgogIC0gRGFpbHkgYWN0aXZlIHVzZXJzIGFuZCByZXRlbnRpb24gcmF0ZXMgLSBBdmVyYWdlIHNlc3Npb24gZHVyYXRpb24gYW5kIGRlcHRoIC0gQ29tbXVuaXR5IGdyb3d0aCBhbmQgc29jaWFsIGFjdGl2aXR5IC0KICBVc2VyLWdlbmVyYXRlZCBjb250ZW50IGFuZCBmZWVkYmFjawo8L0NhcmQ+Cgo8Q2FyZCB0aXRsZT0iRmluYW5jaWFsIEhlYWx0aCIgaWNvbj0iZG9sbGFyLXNpZ24iPgogIC0gVG90YWwgYmV0dGluZyB2b2x1bWUgYW5kIGdyb3d0aCB0cmVuZHMgLSBSZXZlbnVlIHBlciB1c2VyIGFuZCBtb25ldGl6YXRpb24gLSBBcmVuYUNvaW4gbWFya2V0IGNhcCBhbmQgdHJhZGluZyB2b2x1bWUKICAtIFRyZWFzdXJ5IGJhbGFuY2UgYW5kIGJ1eWJhY2sgYWN0aXZpdHkKPC9DYXJkPgoKPENhcmQgdGl0bGU9IkNvbXBldGl0aXZlIEJhbGFuY2UiIGljb249InNjYWxlIj4KICAtIEFJIG1vZGVsIHdpbiByYXRlIGRpc3RyaWJ1dGlvbiAtIEJldHRpbmcgcG9vbCBkaXN0cmlidXRpb24gcGF0dGVybnMgLSBCb29zdCB1c2FnZSBlZmZlY3RpdmVuZXNzIHJhdGVzIC0gQmF0dGxlCiAgb3V0Y29tZSB1bnByZWRpY3RhYmlsaXR5IG1ldHJpY3MKPC9DYXJkPgoKPENhcmQgdGl0bGU9IlRlY2huaWNhbCBQZXJmb3JtYW5jZSIgaWNvbj0iZ2F1Z2UiPgogIC0gQmF0dGxlIGV4ZWN1dGlvbiBzcGVlZCBhbmQgcmVsaWFiaWxpdHkgLSBVc2VyIGludGVyZmFjZSByZXNwb25zaXZlbmVzcyAtIFNlcnZlciB1cHRpbWUgYW5kIGVycm9yIHJhdGVzIC0gU2NhbGFiaWxpdHkKICBhbmQgcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9uCjwvQ2FyZD4K",
    "lastUpdated": "2025-09-02T19:36:10.002Z"
  },
  {
    "sourceFile": "hypeduel/arenacoins.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.004Z"
  },
  {
    "sourceFile": "createkit/whitelist.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.005Z"
  },
  {
    "sourceFile": "createkit/storage.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.007Z"
  },
  {
    "sourceFile": "createkit/rewards.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.009Z"
  },
  {
    "sourceFile": "createkit/quickstart.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.010Z"
  },
  {
    "sourceFile": "createkit/minting.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.012Z"
  },
  {
    "sourceFile": "createkit/introduction.mdx",
    "sourceHash": "ClshW05QTV0oaHR0cHM6Ly9ub2RlaS5jby9ucG0vQGIzZG90ZnVuL2Jhc2VtaW50LnN2ZyldKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL0BiM2RvdGZ1bi9iYXNlbWludCkKCjxDb2RlR3JvdXA+CmBgYGJhc2ggbnBtCm5wbSBpbnN0YWxsIEBiM2RvdGZ1bi9iYXNlbWludApgYGAKCmBgYGJhc2ggeWFybgp5YXJuIGFkZCBAYjNkb3RmdW4vYmFzZW1pbnQKYGBgCgpgYGBiYXNoIHBucG0KcG5wbSBhZGQgQGIzZG90ZnVuL2Jhc2VtaW50CmBgYAo8L0NvZGVHcm91cD4KCiMjIFdoeSBDcmVhdGVLaXQ/CioqQ3JlYXRlIE5GVHMgZm9yIGZyZWUqKiB3aXRoIENyZWF0ZUtpdCwgdXNlcnMganVzdCBzaWduIGEgbWVzc2FnZSAobm8gZ2FzIHJlcXVpcmVkKSBhbmQgdGhlIGNvbGxlY3Rpb24gaXMgZGVwbG95ZWQgYW5kIG1pbnRlZCBpbiBhIHNpbmdsZSB0cmFuc2FjdGlvbiBhdCB0aGUgZmlyc3QgbWludC4KCjxOb3RlPioqVHJ5IGl0IG91dDoqKiBbQ3JlYXRlIE5GVHMgZm9yIGZyZWUgJiBlYXJuXShodHRwczovL2V4cGxvcmVyLmIzLmZ1bi9hcHBzL25mdHMvY3JlYXRlKTwvTm90ZT4KCkNyZWF0ZUtpdCwgcG93ZXJlZCBieSB0aGUgQmFzZU1pbnQgUHJvdG9jb2wsIGlzIGEgY29tcHJlaGVuc2l2ZSBUeXBlU2NyaXB0IFNESyB0aGF0IHJldm9sdXRpb25pemVzIE5GVCBjb2xsZWN0aW9uIGNyZWF0aW9uIGFuZCBtYW5hZ2VtZW50LiBCdWlsdCBzcGVjaWZpY2FsbHkgZm9yIHRoZSBCMyBlY29zeXN0ZW0sIGl0IHByb3ZpZGVzIGEgc3RyZWFtbGluZWQsIGdhcy1lZmZpY2llbnQgd29ya2Zsb3cgZm9yIGRlcGxveWluZyBhbmQgbWFuYWdpbmcgTkZUIGNvbGxlY3Rpb25zIHdpdGggbWluaW1hbCBjb3N0cyBhbmQgbWF4aW11bSBmbGV4aWJpbGl0eS4KCjxDYXJkR3JvdXAgY29scz17Mn0+CiAgPENhcmQgdGl0bGU9Ilplcm8gR2FzIENyZWF0aW9uIiBpY29uPSJjaXJjbGUtZG9sbGFyIj4KICAgIENyZWF0ZSBORlRzIHdpdGggb25jaGFpbiBhZGRyZXNzZXMgY29tcGxldGVseSBmcmVlIGR1cmluZyB0aGUgaW5pdGlhbCBzZXR1cCBwaGFzZQogIDwvQ2FyZD4KICA8Q2FyZCB0aXRsZT0iU2luZ2xlIFRyYW5zYWN0aW9uIERlcGxveSIgaWNvbj0iYm9sdCI+CiAgICBEZXBsb3kgY29sbGVjdGlvbnMgYW5kIG1pbnQgeW91ciBmaXJzdCBORlQgaW4gYSBzaW5nbGUgdHJhbnNhY3Rpb24KICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9Ik11bHRpLVN0YW5kYXJkIFN1cHBvcnQiIGljb249ImxheWVyLWdyb3VwIj4KICAgIFN1cHBvcnRzIGJvdGggRVJDNzIxIGFuZCBFUkMxMTU1IHRva2VuIHN0YW5kYXJkcwogIDwvQ2FyZD4KICA8Q2FyZCB0aXRsZT0iTWFya2V0cGxhY2UgUmVhZHkiIGljb249InN0b3JlIj4KICAgIE9wZW5TZWEtY29tcGF0aWJsZSBtZXRhZGF0YSBmb3JtYXQgZW5zdXJlcyBzZWFtbGVzcyBtYXJrZXRwbGFjZSBpbnRlZ3JhdGlvbgogIDwvQ2FyZD4KPC9DYXJkR3JvdXA+CgojIyBLZXkgRmVhdHVyZXMKCiMjIyDwn46oICoqQ29sbGVjdGlvbiBNYW5hZ2VtZW50KioKLSBEZXBsb3kgRVJDNzIxIGFuZCBFUkMxMTU1IGNvbGxlY3Rpb25zCi0gQ3VzdG9taXplIGNvbGxlY3Rpb24gcGFyYW1ldGVycyAobmFtZSwgc3ltYm9sLCBzdXBwbHksIHByaWNpbmcpCi0gU2V0IG1pbnRpbmcgdGltZWZyYW1lcyBhbmQgbGltaXRzCi0gTWFuYWdlIGNvbGxlY3Rpb24gbWV0YWRhdGEgYW5kIFVSSXMKLSBTdXBwb3J0IGZvciBkaWZmZXJlbnQgbWVkaWEgdHlwZXMgKDNEIG1vZGVscywgYXJ0d29yaywgdmlkZW8sIG1lbWVzKQoKIyMjIPCflJIgKipTZWN1cmUgRGVwbG95bWVudCoqCi0gVHdvLXN0ZXAgc2lnbmF0dXJlIHZlcmlmaWNhdGlvbiBwcm9jZXNzCi0gQ3JlYXRvciBzaWduYXR1cmUgdmFsaWRhdGlvbgotIERlcGxveWVyIHNpZ25hdHVyZSB2YWxpZGF0aW9uCi0gQ29sbGVjdGlvbiBhZGRyZXNzIHByZWRpY3Rpb24KCiMjIyDwn46vICoqVG9rZW4gT3BlcmF0aW9ucyoqCi0gTWludCBFUkM3MjEgYW5kIEVSQzExNTUgdG9rZW5zCi0gV2hpdGVsaXN0LWJhc2VkIG1pbnRpbmcgd2l0aCBNZXJrbGUgcHJvb2ZzCi0gQXV0b21hdGljIHByaWNlIGNhbGN1bGF0aW9uCi0gQnVpbHQtaW4gcGFyYW1ldGVyIHZhbGlkYXRpb24KLSBHYXMtZWZmaWNpZW50IHRyYW5zYWN0aW9ucwoKIyMjIPCfkrAgKipSZXdhcmQgRGlzdHJpYnV0aW9uKioKLSBUcmFjayBjcmVhdG9yIHJld2FyZHMKLSBNb25pdG9yIHBlci1jb2xsZWN0aW9uIHJld2FyZCBhY2N1bXVsYXRpb24KLSBWaWV3IHRvdGFsIGFuZCB1bmNsYWltZWQgcmV3YXJkcyBwZXIgY29sbGVjdGlvbgotIFRyYWNrIHJld2FyZCBkaXN0cmlidXRpb24gcGVyIHJlY2lwaWVudCB0eXBlCi0gV2l0aGRyYXcgYWNjdW11bGF0ZWQgcmV3YXJkcwoKIyMgU3lzdGVtIEZsb3cKClRoZSBCYXNlTWludCBwcm90b2NvbCBwcm92aWRlcyBhIHVuaXF1ZSwgZ2FzLWVmZmljaWVudCB3b3JrZmxvdzoKCjxTdGVwcz4KICA8U3RlcCB0aXRsZT0iQ29sbGVjdGlvbiBDcmVhdGlvbiAmIFNpZ25hdHVyZSBHZW5lcmF0aW9uIj4KICAgIENyZWF0b3JzIGRlZmluZSBjb2xsZWN0aW9uIHBhcmFtZXRlcnMgYW5kIGdlbmVyYXRlIGNyeXB0b2dyYXBoaWMgc2lnbmF0dXJlcyBzdG9yZWQgb2ZmLWNoYWluIHdpdGggemVybyBnYXMgY29zdHMuCiAgPC9TdGVwPgogIDxTdGVwIHRpdGxlPSJPZmYtY2hhaW4gU3RvcmFnZSAmIERpc2NvdmVyeSI+CiAgICBDb2xsZWN0aW9uIGRhdGEgaXMgc3RvcmVkIHNlY3VyZWx5IGluIEJhc2VNaW50IHN0b3JhZ2Ugd2l0aCBkZXRlcm1pbmlzdGljIGFkZHJlc3NlcyBmb3IgZWFzeSBkaXNjb3ZlcnkuCiAgPC9TdGVwPgogIDxTdGVwIHRpdGxlPSJEZXBsb3ltZW50ICYgRmlyc3QgTWludCI+CiAgICBUaGUgZmlyc3QgbWludGVyIHRyaWdnZXJzIG9uLWNoYWluIGRlcGxveW1lbnQgaW4gYSBzaW5nbGUgdHJhbnNhY3Rpb24gdGhhdCBjb3ZlcnMgYm90aCBkZXBsb3ltZW50IGFuZCBmaXJzdCBtaW50LgogIDwvU3RlcD4KICA8U3RlcCB0aXRsZT0iUmVndWxhciBNaW50aW5nIFBoYXNlIj4KICAgIE9wZW4gbWludGluZyBmb3IgYWxsIHVzZXJzIHdpdGggb3B0aW9uYWwgd2hpdGVsaXN0IHN1cHBvcnQgYW5kIHdhbGxldCBsaW1pdHMuCiAgPC9TdGVwPgo8L1N0ZXBzPgoKIyMgUmV3YXJkIFN0cnVjdHVyZQoKQ3JlYXRlS2l0IGZlYXR1cmVzIGFuIGlubm92YXRpdmUgcmV3YXJkIHN5c3RlbSB0aGF0IGJlbmVmaXRzIGFsbCBwYXJ0aWNpcGFudHMgaW4gdGhlIGVjb3N5c3RlbToKCnwgUmVjaXBpZW50IFR5cGUgfCBEZWZhdWx0IFNoYXJlIHwgRGVzY3JpcHRpb24gfAp8LS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLXwKfCAqKkNyZWF0b3IqKiB8IDQwJSB8IENvbGxlY3Rpb24gb3JpZ2luYXRvciB8CnwgKipGaXJzdCBNaW50ZXIqKiB8IDMwJSB8IEluaXRpYWwgZGVwbG95ZXIgd2hvIHRyaWdnZXJzIGRlcGxveW1lbnQgfAp8ICoqR2FtZSBPd25lcioqIHwgMjAlIHwgUGxhdGZvcm0gaW50ZWdyYXRvciB8CnwgKipQbGF0Zm9ybSoqIHwgMTAlIHwgUHJvdG9jb2wgZmVlIHwKCjxOb3RlPgpSZXdhcmQgcmF0ZXMgYXJlIGNvbmZpZ3VyYWJsZSBieSB0aGUgcHJvdG9jb2wgb3duZXIgYW5kIGNhbiBiZSBhZGp1c3RlZCBiYXNlZCBvbiBlY29zeXN0ZW0gbmVlZHMuCjwvTm90ZT4KCiMjIFN1cHBvcnRlZCBOZXR3b3JrcwoKQ3JlYXRlS2l0IHN1cHBvcnRzIHRoZSBCMyBlY29zeXN0ZW0gd2l0aCBwbGFubmVkIGV4cGFuc2lvbiB0byBhZGRpdGlvbmFsIG5ldHdvcmtzOgoKPENhcmRHcm91cCBjb2xzPXsyfT4KICA8Q2FyZCB0aXRsZT0iQjMgTWFpbm5ldCIgaWNvbj0iZ2xvYmUiPgogICAgKipDaGFpbiBJRDoqKiA4MzMzICAKICAgIFByb2R1Y3Rpb24tcmVhZHkgZGVwbG95bWVudCBmb3IgbGl2ZSBhcHBsaWNhdGlvbnMKICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9IkIzIFRlc3RuZXQiIGljb249ImZsYXNrIj4KICAgICoqQ2hhaW4gSUQ6KiogMTk5MyAgCiAgICBEZXZlbG9wbWVudCBhbmQgdGVzdGluZyBlbnZpcm9ubWVudAogIDwvQ2FyZD4KPC9DYXJkR3JvdXA+CgojIyBHZXR0aW5nIFN0YXJ0ZWQKClJlYWR5IHRvIHN0YXJ0IGJ1aWxkaW5nPyBDaGVjayBvdXQgb3VyIGluc3RhbGxhdGlvbiBndWlkZSBhbmQgcXVpY2tzdGFydCB0dXRvcmlhbCB0byBiZWdpbiBjcmVhdGluZyB5b3VyIGZpcnN0IE5GVCBjb2xsZWN0aW9uIHdpdGggQ3JlYXRlS2l0LgoKPENhcmRHcm91cCBjb2xzPXsyfT4KICA8Q2FyZCB0aXRsZT0iSW5zdGFsbGF0aW9uIiBpY29uPSJkb3dubG9hZCIgaHJlZj0iL2NyZWF0ZWtpdC9pbnN0YWxsYXRpb24iPgogICAgSW5zdGFsbCBDcmVhdGVLaXQgYW5kIHNldCB1cCB5b3VyIGRldmVsb3BtZW50IGVudmlyb25tZW50CiAgPC9DYXJkPgogIDxDYXJkIHRpdGxlPSJRdWljayBTdGFydCIgaWNvbj0icm9ja2V0IiBocmVmPSIvY3JlYXRla2l0L3F1aWNrc3RhcnQiPgogICAgQnVpbGQgeW91ciBmaXJzdCBORlQgY29sbGVjdGlvbiBpbiBtaW51dGVzCiAgPC9DYXJkPgo8L0NhcmRHcm91cD4KCiMjIERldmVsb3BlciBSZXNvdXJjZXMKCjxDYXJkR3JvdXAgY29scz17M30+CiAgPENhcmQgdGl0bGU9IkNvbGxlY3Rpb24gTWFuYWdlbWVudCIgaWNvbj0iZm9sZGVyIiBocmVmPSIvY3JlYXRla2l0L2NvbGxlY3Rpb25zIj4KICAgIExlYXJuIGhvdyB0byBjcmVhdGUgYW5kIG1hbmFnZSBORlQgY29sbGVjdGlvbnMKICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9Ik1pbnRpbmciIGljb249ImNvaW5zIiBocmVmPSIvY3JlYXRla2l0L21pbnRpbmciPgogICAgSW1wbGVtZW50IHRva2VuIG1pbnRpbmcgZnVuY3Rpb25hbGl0eQogIDwvQ2FyZD4KICA8Q2FyZCB0aXRsZT0iRXhhbXBsZXMiIGljb249ImNvZGUiIGhyZWY9Ii9jcmVhdGVraXQvZXhhbXBsZXMiPgogICAgRXhwbG9yZSBwcmFjdGljYWwgaW1wbGVtZW50YXRpb24gZXhhbXBsZXMKICA8L0NhcmQ+CjwvQ2FyZEdyb3VwPgo=",
    "lastUpdated": "2025-09-02T19:36:10.014Z"
  },
  {
    "sourceFile": "createkit/installation.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.015Z"
  },
  {
    "sourceFile": "createkit/examples.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.018Z"
  },
  {
    "sourceFile": "createkit/error-handling.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.021Z"
  },
  {
    "sourceFile": "createkit/collections.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.023Z"
  },
  {
    "sourceFile": "bondkit/quickstart.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.025Z"
  },
  {
    "sourceFile": "bondkit/networks.mdx",
    "sourceHash": "CiMjIEJhc2UgTWFpbm5ldAoKfCBOYW1lIHwgQWRkcmVzcyB8CnwtLS0tLS18LS0tLS0tLS0tfAp8IEJvbmRraXRUb2tlbkZhY3RvcnkgfCBgMHgwY2NBMzZlOUJFOEZkZjQ1NmRFNEJDMjBiMzc4QjE1NjBBZWI2NjUzYCB8CnwgQm9uZGtpdFRva2VuIEltcGxlbWVudGF0aW9uIHwgYDB4NjhkRWNDMDlEODgwMEVEMTEzOEM3ODFBQmU0MDU2YWJhN2E0ZUY3RWAgfAp8IFVuaXN3YXAgVjQgUG9vbCBNYW5hZ2VyIHwgYDB4NDk4NTgxZkY3MTg5MjJjM2Y4ZTZBMjQ0OTU2YUYwOTlCMjY1MmIyYmAgfAp8IEJvbmRraXRVbmlzd2FwVjRIb29rIHwgYDB4QjM2ZjRBMkZCMThiNzQ1ZWY4ZUQzMTQ1Mjc4MWE0NjNkMkIzZjBjQ2AgfAp8IEIzIHwgYDB4QjNCMzJGOWY4ODI3RDQ2MzRmRTdkOTczRmExMDM0RWM5ZmREQjNCM2AgfAp8IEJvbmRpbmdQaGFzZSBTcGxpdHRlciB8IGAweDJBQjY5ZTBkOUQyMEQzNzAwNDY2MTUzRDg0YTY1NzQxMjgxNTRGZDJgIHwKfCBEZXhQaGFzZSBTcGxpdHRlciB8IGBUQkRgIHwKCjxOb3RlPgpCb25kS2l0IG9wZXJhdGVzIG9uIEJhc2UgbWFpbm5ldC4gVGVzdG5ldC9kZXYgZW52aXJvbm1lbnRzIGFyZSBjdXJyZW50bHkgbm90IGF2YWlsYWJsZS4KPC9Ob3RlPgoKCg==",
    "lastUpdated": "2025-09-02T19:36:10.027Z"
  },
  {
    "sourceFile": "bondkit/introduction.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.029Z"
  },
  {
    "sourceFile": "bondkit/installation.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.031Z"
  },
  {
    "sourceFile": "bondkit/how-it-works.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.033Z"
  },
  {
    "sourceFile": "basement/unity-guide.mdx",
    "sourceHash": "CiMjIEZlYXR1cmVzCgpUaGUgQjMgVW5pdHkgU0RLIHByb3ZpZGVzIGNvbXByZWhlbnNpdmUgaW50ZWdyYXRpb24gY2FwYWJpbGl0aWVzIGZvciBVbml0eSBkZXZlbG9wZXJzOgoKPENhcmRHcm91cCBjb2xzPXsxfT4KICA8Q2FyZCB0aXRsZT0iU2Vzc2lvbiBNYW5hZ2VtZW50IiBpY29uPSJ1c2VyLWNoZWNrIj4KICAgIFRoZSBTREsgYXV0b21hdGljYWxseSBhbmQgc2VhbWxlc3NseSBoYW5kbGVzIHVzZXIgYXV0aGVudGljYXRpb24uCiAgPC9DYXJkPgogIAogIDxDYXJkIHRpdGxlPSJBUElzIGFzIEZ1bmN0aW9ucyIgaWNvbj0iY29kZSI+CiAgICBVc2UgYWxsIG9mIHRoZSBsYXVuY2hlciBBUElzIGVhc2lseSB3aXRoIHN1cHBvcnQgZm9yIGJvdGggY2FsbGJhY2sgYmFzZWQgQU5EIGFzeW5jL2F3YWl0IGJhc2VkIGNhbGxzLgogIDwvQ2FyZD4KICAKICA8Q2FyZCB0aXRsZT0iV2ViaG9va3MgZm9yIFdlYkdMIiBpY29uPSJ3ZWJob29rIj4KICAgIEhhbmRsZXMgbGF1bmNoZXIgY2xpZW50IHdlYmhvb2tzLCBhbmQgcGFyc2VzIGFuZCBwcm9wYWdhdGVzIHRoZW0gdG8geW91ciBvd24gQyMgQ29kZS4KICA8L0NhcmQ+CjwvQ2FyZEdyb3VwPgoKIyMgSW5zdGFsbGF0aW9uIGFuZCBVc2FnZQoKPFN0ZXBzPgo8U3RlcCB0aXRsZT0iRG93bmxvYWQgdGhlIFNESyI+CiAgSGVhZCBvdmVyIHRvIHRoZSBHaXRIdWIgcmVwb3NpdG9yeSBhbmQgZG93bmxvYWQgdGhlIGxhdGVzdCByZWxlYXNlLgogIAogIDxDYXJkIHRpdGxlPSJHZXQgdGhlIFVuaXR5IFNESyIgaWNvbj0iZG93bmxvYWQiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9iMy1mdW4vYjMtdW5pdHktc2RrIiBjdGE9IkRvd25sb2FkIGZyb20gR2l0SHViIiBob3Jpem9udGFsPgogICAgQWNjZXNzIHRoZSBvZmZpY2lhbCBCMyBVbml0eSBTREsgcmVwb3NpdG9yeSB3aXRoIGluc3RhbGxhdGlvbiBpbnN0cnVjdGlvbnMKICA8L0NhcmQ+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJJbnN0YWxsIHRvIFVuaXR5IFByb2plY3QiPgogIEZvbGxvdyB0aGUgc2V0dXAgZ3VpZGUgaW5zdHJ1Y3Rpb25zIG9uIEdpdEh1YiB0byBpbnN0YWxsIHRoZSBTREsgdG8geW91ciBVbml0eSBQcm9qZWN0LgogIAogIDxOb3RlPgogIFRoZSBHaXRIdWIgcmVwb3NpdG9yeSBjb250YWlucyBkZXRhaWxlZCBpbnN0YWxsYXRpb24gaW5zdHJ1Y3Rpb25zIGFuZCBzZXR1cCByZXF1aXJlbWVudHMuCiAgPC9Ob3RlPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iSW5pdGlhbGl6ZSB0aGUgU0RLIj4KICBBZnRlciBpbnN0YWxsaW5nIHRoZSBTREsgYW5kIGZvbGxvd2luZyB0aGUgc2V0dXAgZ3VpZGUsIHlvdSdsbCBiZSBhYmxlIHRvIGVhc2lseSBjYWxsIGFsbCB0aGUgQVBJcyBhcyBmdW5jdGlvbnMuCiAgCiAgPENoZWNrPgogIFlvdXIgVW5pdHkgcHJvamVjdCBpcyBub3cgcmVhZHkgdG8gaW50ZWdyYXRlIHdpdGggdGhlIEIzIGxhdW5jaGVyIQogIDwvQ2hlY2s+CjwvU3RlcD4KPC9TdGVwcz4KCiMjIENvZGUgRXhhbXBsZXMKCiMjIyBUcmlnZ2VyIFJ1bGVzIEVuZ2luZQoKSGVyZSdzIGFuIGV4YW1wbGUgb2YgaG93IHRvIHRyaWdnZXIgdGhlIHJ1bGVzIGVuZ2luZSBmcm9tIHdpdGhpbiB5b3VyIFVuaXR5IGdhbWU6CgpgYGBjc2hhcnAgVW5pdHkgQyMgRXhhbXBsZQpCM0xhdW5jaGVyQ2xpZW50LlRyaWdnZXJSdWxlc0VuZ2luZShuZXcgQjNMYXVuY2hlckNsaWVudC5UcmlnZ2VyUnVsZXNFbmdpbmVCb2R5CnsKICAgIGxhdW5jaGVySnd0ID0gQjNJbnN0YW5jZS5JbnN0YW5jZS5TZXNzaW9uSldUID8/IGp3dElucHV0LnRleHQsCiAgICB0cmlnZ2VyID0gIm9wZW4tdGlwLW1vZGFsIiwKICAgIG90aGVyV2FsbGV0ID0gb3RoZXJXYWxsZXRJbnB1dC50ZXh0LAp9LCBudWxsKTsKYGBgCgojIyMgU2Vzc2lvbiBNYW5hZ2VtZW50CgpUaGUgU0RLIGF1dG9tYXRpY2FsbHkgaGFuZGxlcyB1c2VyIHNlc3Npb25zOgoKYGBgY3NoYXJwIFNlc3Npb24gRXhhbXBsZQovLyBBY2Nlc3MgdGhlIGN1cnJlbnQgc2Vzc2lvbiBKV1QKc3RyaW5nIHNlc3Npb25Ub2tlbiA9IEIzSW5zdGFuY2UuSW5zdGFuY2UuU2Vzc2lvbkpXVDsKCi8vIENoZWNrIGlmIHVzZXIgaXMgYXV0aGVudGljYXRlZAppZiAoQjNJbnN0YW5jZS5JbnN0YW5jZS5Jc0F1dGhlbnRpY2F0ZWQpCnsKICAgIC8vIFVzZXIgaXMgbG9nZ2VkIGluIGFuZCByZWFkeSB0byBpbnRlcmFjdCB3aXRoIEIzIHNlcnZpY2VzCiAgICBEZWJ1Zy5Mb2coIlVzZXIgYXV0aGVudGljYXRlZCBzdWNjZXNzZnVsbHkiKTsKfQpgYGAKCiMjIEFQSSBJbnRlZ3JhdGlvbgoKVGhlIFVuaXR5IFNESyBwcm92aWRlcyBzZWFtbGVzcyBhY2Nlc3MgdG8gYWxsIEIzIGxhdW5jaGVyIEFQSXM6Cgo8QWNjb3JkaW9uR3JvdXA+CjxBY2NvcmRpb24gdGl0bGU9IkNhbGxiYWNrLWJhc2VkIENhbGxzIj4KICBUcmFkaXRpb25hbCBjYWxsYmFjayBwYXR0ZXJuIGZvciBoYW5kbGluZyBBUEkgcmVzcG9uc2VzOgogIAogIGBgYGNzaGFycAogIEIzTGF1bmNoZXJDbGllbnQuU29tZUFQSUNhbGwocmVxdWVzdERhdGEsIChyZXNwb25zZSkgPT4gewogICAgICAvLyBIYW5kbGUgcmVzcG9uc2UKICAgICAgRGVidWcuTG9nKCJBUEkgY2FsbCBjb21wbGV0ZWQiKTsKICB9KTsKICBgYGAKPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJBc3luYy9Bd2FpdCBDYWxscyI+CiAgTW9kZXJuIGFzeW5jL2F3YWl0IHBhdHRlcm4gZm9yIGNsZWFuZXIgY29kZToKICAKICBgYGBjc2hhcnAKICBwdWJsaWMgYXN5bmMgdm9pZCBDYWxsQVBJKCkKICB7CiAgICAgIHZhciByZXNwb25zZSA9IGF3YWl0IEIzTGF1bmNoZXJDbGllbnQuU29tZUFQSUNhbGxBc3luYyhyZXF1ZXN0RGF0YSk7CiAgICAgIC8vIEhhbmRsZSByZXNwb25zZQogICAgICBEZWJ1Zy5Mb2coIkFQSSBjYWxsIGNvbXBsZXRlZCIpOwogIH0KICBgYGAKPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJXZWJHTCBXZWJob29rcyI+CiAgSGFuZGxlIGxhdW5jaGVyIGV2ZW50cyBpbiBXZWJHTCBidWlsZHM6CiAgCiAgYGBgY3NoYXJwCiAgLy8gUmVnaXN0ZXIgd2ViaG9vayBoYW5kbGVycwogIEIzSW5zdGFuY2UuSW5zdGFuY2UuT25XZWJob29rUmVjZWl2ZWQgKz0gSGFuZGxlV2ViaG9vazsKICAKICBwcml2YXRlIHZvaWQgSGFuZGxlV2ViaG9vayhXZWJob29rRGF0YSBkYXRhKQogIHsKICAgICAgLy8gUHJvY2VzcyBpbmNvbWluZyB3ZWJob29rIGRhdGEKICAgICAgRGVidWcuTG9nKCQiUmVjZWl2ZWQgd2ViaG9vazoge2RhdGEudHlwZX0iKTsKICB9CiAgYGBgCjwvQWNjb3JkaW9uPgo8L0FjY29yZGlvbkdyb3VwPgoKIyMgTmV4dCBTdGVwcwoKPENhcmRHcm91cCBjb2xzPXsyfT4KICA8Q2FyZCB0aXRsZT0iR2FtZSBMYXVuY2hlciBHdWlkZSIgaWNvbj0icm9ja2V0IiBocmVmPSIvYmFzZW1lbnQvZ2FtZS1sYXVuY2hlciI+CiAgICBMZWFybiBob3cgdG8gaW50ZWdyYXRlIHdpdGggdGhlIEJTTU5UIGdhbWUgbGF1bmNoZXIKICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9IkJTTU5UIEFQSSBEb2NzIiBpY29uPSJib29rIiBocmVmPSJodHRwczovL2RvY3MuYmFzZW1lbnQuZnVuL2FwaSI+CiAgICBDb21wbGV0ZSBBUEkgZG9jdW1lbnRhdGlvbiBmb3IgYWxsIGF2YWlsYWJsZSBlbmRwb2ludHMKICA8L0NhcmQ+CiAgCiAgPENhcmQgdGl0bGU9IlVuaXR5IERvY3VtZW50YXRpb24iIGljb249ImV4dGVybmFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZG9jcy51bml0eTNkLmNvbS8iPgogICAgT2ZmaWNpYWwgVW5pdHkgZG9jdW1lbnRhdGlvbiBhbmQgcmVzb3VyY2VzCiAgPC9DYXJkPgogIAogIDxDYXJkIHRpdGxlPSJFeGFtcGxlIFByb2plY3RzIiBpY29uPSJmb2xkZXIiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9iMy1mdW4vdW5pdHktZXhhbXBsZXMiPgogICAgU2FtcGxlIFVuaXR5IHByb2plY3RzIHVzaW5nIHRoZSBCMyBTREsKICA8L0NhcmQ+CjwvQ2FyZEdyb3VwPgoKIyMgU3VwcG9ydAoKPEluZm8+CkZvciB0ZWNobmljYWwgc3VwcG9ydCwgYnVnIHJlcG9ydHMsIG9yIGZlYXR1cmUgcmVxdWVzdHMsIHBsZWFzZSB2aXNpdCB0aGUgR2l0SHViIHJlcG9zaXRvcnkgb3IgcmVhY2ggb3V0IHRvIG91ciBkZXZlbG9wZXIgY29tbXVuaXR5Lgo8L0luZm8+Cgo8Q2FyZCB0aXRsZT0iR2V0IFVuaXR5IFNESyBTdXBwb3J0IiBpY29uPSJoZWxwLWNpcmNsZSIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2IzLWZ1bi9iMy11bml0eS1zZGsvaXNzdWVzIiBjdGE9IkdpdEh1YiBJc3N1ZXMiIGhvcml6b250YWw+CiAgUmVwb3J0IGlzc3VlcyBvciBnZXQgaGVscCBmcm9tIHRoZSBkZXZlbG9wZXIgY29tbXVuaXR5CjwvQ2FyZD4K",
    "lastUpdated": "2025-09-02T19:36:10.037Z"
  },
  {
    "sourceFile": "basement/introduction.mdx",
    "sourceHash": "CjxpbWcgc3JjPSIvaW1hZ2VzL2JzbW50LWdhbWUtZGV2cy1iYW5uZXIuanBnIiBhbHQ9IkJhc2VtZW50LmZ1biBEZXZlbG9wZXIgRGFzaGJvYXJkIiBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC0zeGwiIC8+CgojIyBXaGF0IGlzIEJhc2VtZW50PwpCYXNlbWVudCBpcyB0aGUgZ2FtaW5nLWZvY3VzZWQgbGF5ZXIgb2YgdGhlIEIzIGVjb3N5c3RlbSwgZGVzaWduZWQgc3BlY2lmaWNhbGx5IGZvciBnYW1lIGRldmVsb3BlcnMgYW5kIGdhbWluZyBjb21tdW5pdGllcy4gSXQgcHJvdmlkZXM6Cgo8aW1nIHNyYz0iL2ltYWdlcy9ic21udC1sb2dvLnN2ZyIgYWx0PSJCYXNlbWVudC5mdW4iIGNsYXNzTmFtZT0idy0zMiIgLz4KCi0gKipHYW1lIExhdW5jaGVyKio6IERlcGxveSBhbmQgbWFuYWdlIGdhbWVzIG9uIEIzCi0gKipEZXZlbG9wZXIgVG9vbHMqKjogU0RLcyBhbmQgQVBJcyBmb3IgZ2FtZSBkZXZlbG9wbWVudAotICoqQ29tbXVuaXR5IEZlYXR1cmVzKio6IFBsYXllciBwcm9maWxlcywgYWNoaWV2ZW1lbnRzLCBhbmQgc29jaWFsIGZlYXR1cmVzCi0gKipCcmFuZCBSZXNvdXJjZXMqKjogQXNzZXRzIGFuZCBndWlkZWxpbmVzIGZvciBjb25zaXN0ZW50IGJyYW5kaW5nCgo8Tm90ZT4KICA8YSBocmVmPSJodHRwczovL2Jhc2VtZW50LmZ1biI+CiAgICBQbGF5IG9uIHRoZSBiYXNlbWVudC5mdW4gYXBwCiAgPC9hPgo8L05vdGU+CgojIyBHZXR0aW5nIFN0YXJ0ZWQKCiA8aWZyYW1lCiAgIGNsYXNzTmFtZT0idy1mdWxsIGFzcGVjdC12aWRlbyByb3VuZGVkLXhsIG1iLTYiCiAgICBzcmM9Imh0dHBzOi8vY3VzdG9tZXItZ2c2cXM3bm01dWU5NHQ2NC5jbG91ZGZsYXJlc3RyZWFtLmNvbS9hZTllN2MwNjk0ZGFjYjhkNjAyMzA5YzM4MWZjZTc5Ni9pZnJhbWU/cG9zdGVyPWh0dHBzJTNBJTJGJTJGY3VzdG9tZXItZ2c2cXM3bm01dWU5NHQ2NC5jbG91ZGZsYXJlc3RyZWFtLmNvbSUyRmFlOWU3YzA2OTRkYWNiOGQ2MDIzMDljMzgxZmNlNzk2JTJGdGh1bWJuYWlscyUyRnRodW1ibmFpbC5qcGclM0Z0aW1lJTNEJTI2aGVpZ2h0JTNENjAwIgogICAgdGl0bGU9IkJhc2VtZW50LmZ1biBEZXZlbG9wZXIgRGFzaGJvYXJkIgogICAgZnJhbWVCb3JkZXI9IjAiCiAgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiCiAgYWxsb3dGdWxsU2NyZWVuCiAgPjwvaWZyYW1lPgoKPENhcmRHcm91cCBjb2xzPXsyfT4KPENhcmQgdGl0bGU9IkdhbWUgTGF1bmNoZXIgR3VpZGUiIGljb249InJvY2tldCIgaHJlZj0iL2Jhc2VtZW50L2dhbWUtbGF1bmNoZXIiPgogIExlYXJuIGhvdyB0byBkZXBsb3kgeW91ciBnYW1lcyB1c2luZyB0aGUgQmFzZW1lbnQgR2FtZSBMYXVuY2hlcgo8L0NhcmQ+Cgo8Q2FyZCB0aXRsZT0iVW5pdHkgR3VpZGUiIGljb249InVuaXR5IiBocmVmPSIvYmFzZW1lbnQvdW5pdHktZ3VpZGUiPgogIEludGVncmF0ZSBCMyBmZWF0dXJlcyBpbnRvIHlvdXIgVW5pdHkgZ2FtZXMKPC9DYXJkPgoKPENhcmQgdGl0bGU9IkNvbnN0cnVjdCBHdWlkZSIgaWNvbj0iZ2FtZXBhZCIgaHJlZj0iL2Jhc2VtZW50L2NvbnN0cnVjdC1ndWlkZSI+CiAgQnVpbGQgZ2FtZXMgd2l0aCBDb25zdHJ1Y3QgMyBhbmQgQjMgaW50ZWdyYXRpb24KPC9DYXJkPgoKPENhcmQgdGl0bGU9IkJyYW5kIEtpdCIgaWNvbj0icGFsZXR0ZSIgaHJlZj0iL2Jhc2VtZW50L2JyYW5kLWtpdCI+CiAgQWNjZXNzIEJhc2VtZW50IGJyYW5kaW5nIGFzc2V0cyBhbmQgZ3VpZGVsaW5lcwo8L0NhcmQ+CjwvQ2FyZEdyb3VwPgoKIyMgS2V5IEZlYXR1cmVzCgo8QWNjb3JkaW9uR3JvdXA+CjxBY2NvcmRpb24gdGl0bGU9IkdhbWUgRGV2ZWxvcG1lbnQgU0RLcyI+CkNvbXByZWhlbnNpdmUgc29mdHdhcmUgZGV2ZWxvcG1lbnQga2l0cyBmb3IgVW5pdHksIENvbnN0cnVjdCwgYW5kIG90aGVyIHBvcHVsYXIgZ2FtZSBlbmdpbmVzLCBlbmFibGluZyBzZWFtbGVzcyBpbnRlZ3JhdGlvbiB3aXRoIEIzJ3MgYmxvY2tjaGFpbiBmZWF0dXJlcy4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJQbGF5ZXIgSWRlbnRpdHkgJiBBY2NvdW50cyI+Ckdsb2JhbCBhY2NvdW50IHN5c3RlbSB0aGF0IGFsbG93cyBwbGF5ZXJzIHRvIG1haW50YWluIGNvbnNpc3RlbnQgcHJvZmlsZXMsIGFjaGlldmVtZW50cywgYW5kIGFzc2V0cyBhY3Jvc3MgYWxsIGdhbWVzIGluIHRoZSBCYXNlbWVudCBlY29zeXN0ZW0uCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iQXNzZXQgTWFuYWdlbWVudCI+ClRvb2xzIGZvciBtYW5hZ2luZyBpbi1nYW1lIGFzc2V0cywgTkZUcywgYW5kIHRva2Vucywgd2l0aCBlYXN5IGludGVncmF0aW9uIGZvciBkZXZlbG9wZXJzIGFuZCB0cmFuc3BhcmVudCBvd25lcnNoaXAgZm9yIHBsYXllcnMuCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iQ29tbXVuaXR5IEZlYXR1cmVzIj4KQnVpbHQtaW4gc29jaWFsIGZlYXR1cmVzLCBsZWFkZXJib2FyZHMsIHRvdXJuYW1lbnRzLCBhbmQgY29tbXVuaXR5IG1hbmFnZW1lbnQgdG9vbHMgdG8gZW5oYW5jZSBwbGF5ZXIgZW5nYWdlbWVudC4KPC9BY2NvcmRpb24+CjwvQWNjb3JkaW9uR3JvdXA+CgoKUmVhZHkgdG8gc3RhcnQgYnVpbGRpbmc/IENoZWNrIG91dCBvdXIgW0dhbWUgTGF1bmNoZXIgR3VpZGVdKC9iYXNlbWVudC9nYW1lLWxhdW5jaGVyKSB0byBkZXBsb3kgeW91ciBmaXJzdCBnYW1lIG9uIEIzLgo=",
    "lastUpdated": "2025-09-02T19:36:10.039Z"
  },
  {
    "sourceFile": "basement/game-launcher.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.041Z"
  },
  {
    "sourceFile": "basement/construct-guide.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.043Z"
  },
  {
    "sourceFile": "basement/brand-kit.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.046Z"
  },
  {
    "sourceFile": "b3ar/introduction.mdx",
    "sourceHash": "CiMjIFdoYXQgaXMgQjNBUj8KCk1vcmUgZG9jdW1lbnRhdGlvbiBpcyBjb21pbmcgc29vbi4K",
    "lastUpdated": "2025-09-02T19:36:10.048Z"
  },
  {
    "sourceFile": "anyspend/onramp.mdx",
    "sourceHash": "CiMjIFdoYXQgSXQgRG9lcwoKVGhlIEFueVNwZW5kIG9ucmFtcCBhbGxvd3MgdXNlcnMgdG8gcGF5IHdpdGggdHJhZGl0aW9uYWwgZmlhdCBtZXRob2RzIChlLmcuLCBjcmVkaXQgY2FyZCwgYmFuayB0cmFuc2ZlcikgYW5kIGF1dG9tYXRpY2FsbHkgZXhlY3V0ZSBhbnkgb25jaGFpbiB0cmFuc2FjdGlvbi4gVGhpcyBzZWFtbGVzcyBmbG93IGVsaW1pbmF0ZXMgdGhlIG5lZWQgZm9yIHVzZXJzIHRvIG1hbnVhbGx5IGFjcXVpcmUgY3J5cHRvY3VycmVuY3kgb3IgbWFuYWdlIHdhbGxldCBmdW5kaW5nLgoKSXTigJlzIGRlc2lnbmVkIHRvIHJlZHVjZSBmcmljdGlvbiBmb3Igbm9uLWNyeXB0by1uYXRpdmUgdXNlcnMsIG1ha2luZyBibG9ja2NoYWluLXBvd2VyZWQgcHJvZHVjdHMgYWNjZXNzaWJsZSB0byBhIGJyb2FkZXIgYXVkaWVuY2UuCgojIyBIb3cgSXQgV29ya3MKCjEuICoqVXNlciBJbml0aWF0ZXMgQWN0aW9uKipcCiAgIEEgdXNlciBiZWdpbnMgYW4gb25jaGFpbiBhY3Rpb24gKGUuZy4sIG1pbnRpbmcsIHN0YWtpbmcsIG9yIGNvbnRyYWN0IGludGVyYWN0aW9uKS4KMi4gKipGaWF0IFBheW1lbnQqKlwKICAgVGhleSBwYXkgd2l0aCBhIGNhcmQgb3IgYmFuayB0cmFuc2ZlciB2aWEgU3RyaXBlIG9yIENvaW5iYXNlIFBheS4KMy4gKipDb252ZXJzaW9uIFwrIEV4ZWN1dGlvbioqXAogICBBbnlTcGVuZCBjb252ZXJ0cyBmaWF0IHRvIHRoZSBkZXNpcmVkIGNyeXB0b2N1cnJlbmN5IGFuZCBleGVjdXRlcyB0aGUgdHJhbnNhY3Rpb24uCjQuICoqV2FsbGV0IERlbGl2ZXJ5KipcCiAgIFRoZSByZXN1bHQgaXMgc2VudCB0byB0aGUgdXNlcidzIGNvbm5lY3RlZCB3YWxsZXQgb3IgZ2xvYmFsIHdhbGxldC4gTm8gY3J5cHRvIGFjcXVpc2l0aW9uIHJlcXVpcmVkLgoKIyMgUGF5bWVudCBPcHRpb25zCgoqKlN0cmlwZSoqCgotIEdsb2JhbCBzdXBwb3J0IGZvciBtYWpvciBjcmVkaXQvZGViaXQgY2FyZHMKLSAzRCBTZWN1cmUgYXV0aGVudGljYXRpb24KLSBDdXJyZW5jeSBjb252ZXJzaW9uIGZvciBub24tVVNEIHRyYW5zYWN0aW9ucwotIExvY2FsaXplZCBwYXltZW50IG1ldGhvZHMgYW5kIGZlZSBhZGp1c3RtZW50CgoqKkNvaW5iYXNlIFBheSoqCgotIFVzZXJzIGNhbiBwYXkgZGlyZWN0bHkgd2l0aCB0aGVpciBDb2luYmFzZSBhY2NvdW50IGJhbGFuY2VzIG9yIGRlYml0IGNhcmQKLSBObyBuZWVkIHRvIHRyYW5zZmVyIGZ1bmRzIGJldHdlZW4gcGxhdGZvcm1zCi0gVHJ1c3RlZCBVWCBmb3IgZXhpc3RpbmcgQ29pbmJhc2UgdXNlcnMKLSBObyBhZGRpdGlvbmFsIGZlZXMgZnJvbSBBbnlTcGVuZAoKKipFeHRlbnNpYmxlIFByb3ZpZGVyIEFyY2hpdGVjdHVyZSoqCgotIE1vZHVsYXIgc3lzdGVtIHRvIHN1cHBvcnQgYWRkaXRpb25hbCBmaWF0IHByb3ZpZGVycwotIER5bmFtaWMgcm91dGluZyBiYXNlZCBvbiByZWdpb24gYW5kIGF2YWlsYWJpbGl0eQotIEJ1aWx0LWluIGNvbXBsaWFuY2UgZmxleGliaWxpdHkgZm9yIHJlZ2lvbmFsIHN1cHBvcnQKCiMjIFNlY3VyaXR5CgpBbnlTcGVuZCBpbmNsdWRlcyBhIGJ1aWx0LWluLCByZWFsLXRpbWUgcmlzayBlbmdpbmUgZGVzaWduZWQgdG8gbWluaW1pemUgZnJhdWQgd2hpbGUga2VlcGluZyB0aGUgdXNlciBleHBlcmllbmNlIHNlYW1sZXNzLgoKKipLZXkgRmVhdHVyZXM6KioKCi0gQmVoYXZpb3JhbCBhbmQgdHJhbnNhY3Rpb25hbCByaXNrIGFuYWx5c2lzCi0gRGV2aWNlIGFuZCBuZXR3b3JrIHNlY3VyaXR5IGNoZWNrcwotIFJlYWwtdGltZSB0aHJlYXQgaW50ZWxsaWdlbmNlCgoqKlNtYXJ0IFRyYW5zYWN0aW9uIEV2YWx1YXRpb24qKgoKRWFjaCB0cmFuc2FjdGlvbiBpcyBldmFsdWF0ZWQgaW4gcmVhbCB0aW1lOgoKLSAqKkFsbG93KirCoOKAkyB0cmFuc2FjdGlvbiBwcm9jZWVkcyBub3JtYWxseQotICoqVmVyaWZ5KirCoOKAkyBhZGRpdGlvbmFsIHVzZXIgdmVyaWZpY2F0aW9uIG1heSBiZSByZXF1aXJlZAotICoqQmxvY2sqKsKg4oCTIHN1c3BpY2lvdXMgYWN0aXZpdHkgaXMgcHJldmVudGVkCgojIyBHbG9iYWwgQ292ZXJhZ2UKCkFueVNwZW5kIHN1cHBvcnRzIGEgd2lkZSByYW5nZSBvZiBjdXJyZW5jaWVzIGFuZCByZWdpb25zIHRocm91Z2ggaW50ZWdyYXRlZCBwcm92aWRlcnM6CgotIEF1dG9tYXRpYyBsb2NhdGlvbiBkZXRlY3Rpb24gYW5kIGxvY2FsaXphdGlvbgotIExvY2FsIHBheW1lbnQgbWV0aG9kcyBhbmQgY3VycmVuY3kgaGFuZGxpbmcKLSBEeW5hbWljIHByb3ZpZGVyIHNlbGVjdGlvbiBiYXNlZCBvbiBnZW9ncmFwaHkKLSBSZWdpb25hbCBjb21wbGlhbmNlIG91dCBvZiB0aGUgYm94CgojIyBGZWVzCgotICoqU3RyaXBlIFBheW1lbnRzOioqwqA1LjQlIFwrIFwkMC4zMCBwZXIgdHJhbnNhY3Rpb24gKGZsYXQgcmF0ZSwgZ2xvYmFsKQotICoqQ29pbmJhc2UgUGF5OioqwqBObyBhZGRpdGlvbmFsIGZlZXMgZnJvbSBBbnlTcGVuZAoKVXNlcnMgYXJlIHNob3duIGEgdHJhbnNwYXJlbnQgZmVlIGJyZWFrZG93biBkdXJpbmcgY2hlY2tvdXQuCgojIyBDb21tb24gVXNlIENhc2VzCgpBbnlTcGVuZCBlbmFibGVzIGRldmVsb3BlcnMgdG86CgotIExldCB1c2VycyBtaW50IE5GVHMgd2l0aCBhIGNyZWRpdCBjYXJkCi0gQWxsb3cgc3Rha2luZywgdm90aW5nLCBvciBnYW1lIGFjdGlvbnMgZGlyZWN0bHkgZnJvbSBmaWF0Ci0gT25ib2FyZCB1c2VycyB0byBEZUZpLCBnYW1pbmcsIG9yIG90aGVyIGRBcHBzIHdpdGggbm8gY3J5cHRvIHByZXJlcXVpc2l0ZQ==",
    "lastUpdated": "2025-09-02T19:36:10.050Z"
  },
  {
    "sourceFile": "anyspend/introduction.mdx",
    "sourceHash": "CjxpbWcgc3JjPSIvaW1hZ2VzL2FueXNwZW5kLWV4YW1wbGUtYmFubmVyLmpwZyIgYWx0PSJBbnlTcGVuZCBCYW5uZXIiIGNsYXNzTmFtZT0idy1mdWxsIHJvdW5kZWQteGwiIC8+CgojIyBXaGF0IGlzIEFueVNwZW5kPwoKQW55U3BlbmQgaXMgQjMncyBjb21wcmVoZW5zaXZlIHBheW1lbnQgaW5mcmFzdHJ1Y3R1cmUgdGhhdCBlbmFibGVzIHNlYW1sZXNzIGNyeXB0byB0cmFuc2FjdGlvbnMgYWNyb3NzIG11bHRpcGxlIGJsb2NrY2hhaW5zLiBXaGV0aGVyIHlvdSdyZSBidWlsZGluZyBhIERlRmkgYXBwbGljYXRpb24sIE5GVCBtYXJrZXRwbGFjZSwgb3IgZ2FtaW5nIHBsYXRmb3JtLCBBbnlTcGVuZCBwcm92aWRlcyB0aGUgY29tcG9uZW50cyBhbmQgQVBJcyB5b3UgbmVlZCB0byBhY2NlcHQgcGF5bWVudHMgaW4gYW55IHRva2VuLgoKW1RyeSBBbnlTcGVuZCBpbiB5b3VyIGJyb3dzZXJdKGh0dHBzOi8vYW55c3BlbmQuY29tL3N3YXApCgojIyBVc2UgQ2FzZXMKCjxDYXJkR3JvdXAgY29scz17Mn0+CjxDYXJkIGhyZWY9Ii9hbnlzcGVuZC9leGFtcGxlcyI+CiAgPGltZyBzcmM9Ii9pbWFnZXMvY3VzdG9taXplLWZvci1zd2FwLnBuZyIgY2xhc3NOYW1lPSJ3LWZ1bGwgaC00OCBvYmplY3QtY292ZXIgcm91bmRlZC14bCBtYi00IiAvPgogIDxoMyBjbGFzc05hbWU9InRleHQtbGcgZm9udC1zZW1pYm9sZCB0ZXh0LXByaW1hcnkgYmxvY2sgbWItMSI+Q3Jvc3MtQ2hhaW4gU3dhcHM8L2gzPgogIEVuYWJsZSB1c2VycyB0byBzd2FwIHRva2VucyBiZXR3ZWVuIGRpZmZlcmVudCBibG9ja2NoYWlucyB3aXRoIGF1dG9tYXRpYyByb3V0aW5nIGFuZCBiZXN0IHByaWNlIGRpc2NvdmVyeS4KPC9DYXJkPgoKPENhcmQgaHJlZj0iL2FueXNwZW5kL2V4YW1wbGVzIj4KICA8aW1nIHNyYz0iL2ltYWdlcy9jdXN0b21pemUtZm9yLWNoZWNrb3V0LnBuZyIgY2xhc3NOYW1lPSJ3LWZ1bGwgaC00OCBvYmplY3QtY292ZXIgcm91bmRlZC14bCBtYi00IiAvPgogIDxoMyBjbGFzc05hbWU9InRleHQtbGcgZm9udC1zZW1pYm9sZCB0ZXh0LXByaW1hcnkgYmxvY2sgbWItMSI+Q2hlY2tvdXQ8L2gzPgogIE9uZS1jbGljayBjaGVja291dCBidXR0b25zIHRoYXQgYWNjZXB0IGFueSB0b2tlbiBhcyBwYXltZW50LCB3aXRoIGF1dG9tYXRpYyBjb252ZXJzaW9uLgo8L0NhcmQ+Cgo8Q2FyZCBocmVmPSIvYW55c3BlbmQvZXhhbXBsZXMiPgogIDxpbWcgc3JjPSIvaW1hZ2VzL2N1c3RvbWl6ZS1mb3ItZGVmaS5wbmciIGNsYXNzTmFtZT0idy1mdWxsIGgtNDggb2JqZWN0LWNvdmVyIHJvdW5kZWQteGwgbWItNCIgLz4KICA8aDMgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC1wcmltYXJ5IGJsb2NrIG1iLTEiPkRlRmk8L2gzPgogIEV4ZWN1dGUgYW55IG9uY2hhaW4gY29udHJhY3QgY2FsbCwgd2l0aCB1c2FnZSBmb3Igc3Rha2luZywgcHJlZGljdGlvbiBtYXJrZXRzLCBib25kaW5nIGN1cnZlcywgYW5kIG1vcmUuCjwvQ2FyZD4KCjxDYXJkIGhyZWY9Ii9hbnlzcGVuZC9leGFtcGxlcyI+CiAgPGltZyBzcmM9Ii9pbWFnZXMvY3VzdG9taXplLWZvci1nYW1lcy5wbmciIGNsYXNzTmFtZT0idy1mdWxsIGgtNDggb2JqZWN0LWNvdmVyIHJvdW5kZWQteGwgbWItNCIgLz4KICA8aDMgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC1wcmltYXJ5IGJsb2NrIG1iLTEiPkdhbWVzPC9oMz4KICBFbWJlZGRhYmxlIGluIG5hdGl2ZSBpT1MvQW5kcm9pZCwgVW5pdHksICYgb3RoZXIgc3VyZmFjZXMuCjwvQ2FyZD4KPC9DYXJkR3JvdXA+CgojIyBGZWF0dXJlcwoKPFN0ZXBzPgo8U3RlcCB0aXRsZT0iVXNlciBJbml0aWF0ZXMgUGF5bWVudCI+ClVzZXIgY2xpY2tzIGEgcGF5bWVudCBidXR0b24gb3IgaW50ZXJhY3RzIHdpdGggeW91ciBpbnRlcmZhY2UsIGNob29zaW5nIHRoZWlyIHByZWZlcnJlZCB0b2tlbgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQW55U3BlbmQgUXVvdGVzIj4KT3VyIHJvdXRpbmcgZW5naW5lIGZpbmRzIHRoZSBiZXN0IHBhdGggdG8gY29udmVydCB0aGVpciB0b2tlbiB0byB0aGUgcmVxdWlyZWQgZGVzdGluYXRpb24gdG9rZW4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNyb3NzLUNoYWluIEV4ZWN1dGlvbiI+CklmIG5lZWRlZCwgdG9rZW5zIGFyZSBicmlkZ2VkIGFjcm9zcyBjaGFpbnMgdXNpbmcgc2VjdXJlLCBiYXR0bGUtdGVzdGVkIGluZnJhc3RydWN0dXJlCjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJGaW5hbCBEZWxpdmVyeSI+ClRva2VucyBhcnJpdmUgYXQgdGhlIGRlc3RpbmF0aW9uIGFkZHJlc3MsIGV4ZWN1dGUgYW55IGN1c3RvbSBsb2dpYywgYW5kIHRyaWdnZXIgeW91ciBzdWNjZXNzIGNhbGxiYWNrcwo8L1N0ZXA+CjwvU3RlcHM+CgojIyBVc2UgQ2FzZXMKPGltZyBzcmM9Ii9pbWFnZXMvYW55c3BlbmQtb25yYW1wLWFueW9uZS5wbmciIGFsdD0iQW55U3BlbmQgQmFubmVyIiBjbGFzc05hbWU9InctZnVsbCByb3VuZGVkLXhsIiAvPgoKPEFjY29yZGlvbkdyb3VwPgo8QWNjb3JkaW9uIHRpdGxlPSJEZUZpIEFwcGxpY2F0aW9ucyI+CkVuYWJsZSB0b2tlbiBzd2FwcywgcHJvdmlkZSBsaXF1aWRpdHksIGFuZCBmYWNpbGl0YXRlIHlpZWxkIGZhcm1pbmcgYWNyb3NzIG11bHRpcGxlIGNoYWlucyB3aXRoIGF1dG9tYXRpYyByb3V0aW5nIGFuZCBjb21wZXRpdGl2ZSByYXRlcy4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJORlQgTWFya2V0cGxhY2VzIj4KQWxsb3cgdXNlcnMgdG8gYnV5IE5GVHMgd2l0aCBhbnkgdG9rZW4gdGhleSBvd24sIHJlbW92aW5nIGJhcnJpZXJzIGFuZCBpbmNyZWFzaW5nIGNvbnZlcnNpb24gcmF0ZXMgYnkgc3VwcG9ydGluZyB0aGVpciBwcmVmZXJyZWQgcGF5bWVudCBtZXRob2RzLgo8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IkdhbWluZyBQbGF0Zm9ybXMiPgpBY2NlcHQgcGF5bWVudHMgZm9yIGluLWdhbWUgYXNzZXRzLCB0b3VybmFtZW50IGVudHJpZXMsIGFuZCBwcmVtaXVtIGZlYXR1cmVzIHVzaW5nIGFueSBjcnlwdG9jdXJyZW5jeSBvciBmaWF0IHBheW1lbnQgbWV0aG9kcy4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJFLWNvbW1lcmNlIj4KSW50ZWdyYXRlIGNyeXB0byBwYXltZW50cyBpbnRvIHRyYWRpdGlvbmFsIGUtY29tbWVyY2UgcGxhdGZvcm1zIHdpdGggYXV0b21hdGljIGZpYXQgY29udmVyc2lvbiBhbmQgc2V0dGxlbWVudC4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJTdWJzY3JpcHRpb24gU2VydmljZXMiPgpBY2NlcHQgcmVjdXJyaW5nIHBheW1lbnRzIGluIGNyeXB0byB3aXRoIGF1dG9tYXRpYyBjb252ZXJzaW9uIHRvIHlvdXIgcHJlZmVycmVkIHNldHRsZW1lbnQgY3VycmVuY3kuCjwvQWNjb3JkaW9uPgo8L0FjY29yZGlvbkdyb3VwPgoKIyMgUXVpY2sgU3RhcnQKCkdldCBzdGFydGVkIHdpdGggQW55U3BlbmQgaW4ganVzdCBhIGZldyBzdGVwczoKCmBgYHRzeAppbXBvcnQgeyBBbnlTcGVuZCwgQW55c3BlbmRQcm92aWRlciB9IGZyb20gIkBiM2RvdGZ1bi9zZGsvYW55c3BlbmQvcmVhY3QiOwppbXBvcnQgeyBCM1Byb3ZpZGVyIH0gZnJvbSAiQGIzZG90ZnVuL3Nkay9nbG9iYWwtYWNjb3VudC9yZWFjdCI7CgppbXBvcnQgIkBiM2RvdGZ1bi9zZGsvaW5kZXguY3NzIjsKCmZ1bmN0aW9uIEFwcCgpIHsKICByZXR1cm4gKAogICAgPEIzUHJvdmlkZXIgdGhlbWU9ImxpZ2h0IiBlbnZpcm9ubWVudD0icHJvZHVjdGlvbiI+CiAgICAgIDxBbnlzcGVuZFByb3ZpZGVyPgogICAgICAgIDxBbnlTcGVuZCAvPgogICAgICA8L0FueXNwZW5kUHJvdmlkZXI+CiAgICA8L0IzUHJvdmlkZXI+CiAgKTsKfQoKZXhwb3J0IGRlZmF1bHQgQXBwCmBgYAoKIyMgV2hhdCdzIE5leHQ/Cgo8Q2FyZEdyb3VwIGNvbHM9ezN9Pgo8Q2FyZCB0aXRsZT0iSW5zdGFsbGF0aW9uIiBpY29uPSJkb3dubG9hZCIgaHJlZj0iL2FueXNwZW5kL2luc3RhbGxhdGlvbiI+CiAgU2V0IHVwIEFueVNwZW5kIGluIHlvdXIgcHJvamVjdCB3aXRoIG5wbSwgeWFybiwgb3IgcG5wbQo8L0NhcmQ+Cgo8Q2FyZCB0aXRsZT0iQ29tcG9uZW50cyIgaWNvbj0icHV6emxlLXBpZWNlIiBocmVmPSIvYW55c3BlbmQvY29tcG9uZW50cyI+CiAgRXhwbG9yZSBwcmUtYnVpbHQgY29tcG9uZW50cyBmb3IgY29tbW9uIHBheW1lbnQgc2NlbmFyaW9zCjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJFeGFtcGxlcyIgaWNvbj0iY29kZSIgaHJlZj0iL2FueXNwZW5kL2V4YW1wbGVzIj4KICBTZWUgcmVhbC13b3JsZCBpbXBsZW1lbnRhdGlvbiBleGFtcGxlcyBhbmQgYmVzdCBwcmFjdGljZXMKPC9DYXJkPgo8L0NhcmRHcm91cD4KCiMjIEdldHRpbmcgSGVscAoKLSAqKkRpc2NvcmQqKjogSm9pbiBvdXIgW0Rpc2NvcmQgY29tbXVuaXR5XShodHRwczovL2Rpc2NvcmQuZ2cvYjNkb3RmdW4pIGZvciBzdXBwb3J0Ci0gKipEb2N1bWVudGF0aW9uKio6IENvbXByZWhlbnNpdmUgZ3VpZGVzIGFuZCBBUEkgcmVmZXJlbmNlcwotICoqRXhhbXBsZXMqKjogUmVhZHktdG8tdXNlIGNvZGUgc2FtcGxlcyBhbmQgaW50ZWdyYXRpb25zCgo8ZGl2IGNsYXNzTmFtZT0iZmxleCBmbGV4LXJvdyBnYXAtNCI+CjxkaXYgY2xhc3NOYW1lPSJmbGV4LTEiPgo8YSBocmVmPSJodHRwczovL3guY29tL2FueXNwZW5kIiB0YXJnZXQ9Il9ibGFuayI+CiAgPGltZyBzcmM9Ii9pbWFnZXMvZm9sbG93LXVwZGF0ZXMtb24teC5wbmciIGNsYXNzTmFtZT0idy1mdWxsIGgtZnVsbCBvYmplY3QtY292ZXIgcm91bmRlZC14bCBtYi00IiAvPgo8L2E+CjwvZGl2PgoKPGRpdiBjbGFzc05hbWU9ImZsZXgtMSI+CiAgPGEgaHJlZj0iL2FueXNwZW5kL2luc3RhbGxhdGlvbiI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9hbnlzcGVuZC1nZXR0aW5nLXN0YXJ0ZWQucG5nIiBjbGFzc05hbWU9InctZnVsbCBoLWZ1bGwgb2JqZWN0LWNvdmVyIHJvdW5kZWQteGwgbWItNCIgLz4KICA8L2E+CjwvZGl2Pgo8L2Rpdj4K",
    "lastUpdated": "2025-09-02T19:36:10.053Z"
  },
  {
    "sourceFile": "anyspend/installation.mdx",
    "sourceHash": "CjxpZnJhbWUgY2xhc3M9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCBtYi02IiBzcmM9Imh0dHBzOi8vY3VzdG9tZXItZ2c2cXM3bm01dWU5NHQ2NC5jbG91ZGZsYXJlc3RyZWFtLmNvbS82NmQ5ZWJjMmUzYTE0ZWM4N2RmYTM2MGI4M2UyNjkwMC9pZnJhbWU/cG9zdGVyPWh0dHBzJTNBJTJGJTJGY3VzdG9tZXItZ2c2cXM3bm01dWU5NHQ2NC5jbG91ZGZsYXJlc3RyZWFtLmNvbSUyRjY2ZDllYmMyZTNhMTRlYzg3ZGZhMzYwYjgzZTI2OTAwJTJGdGh1bWJuYWlscyUyRnRodW1ibmFpbC5qcGclM0Z0aW1lJTNEMTY4JTI2aGVpZ2h0JTNENjAwIiB0aXRsZT0iQW55U3BlbmQgU2V0dXAiIGZyYW1lYm9yZGVyPSIwIiBhbGxvdz0iYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZSIgYWxsb3dmdWxsc2NyZWVuIC8+CgojIyBQcmVyZXF1aXNpdGVzCgo8Q2FyZEdyb3VwIGNvbHM9ezN9PgogIDxDYXJkIHRpdGxlPSJOb2RlLmpzIiBpY29uPSJub2RlLWpzIj4KICAgIHYyMC4xNS4wIG9yIGhpZ2hlcgogIDwvQ2FyZD4KICA8Q2FyZCB0aXRsZT0iUmVhY3QiIGljb249InJlYWN0Ij4KICAgIFZlcnNpb24gMTggb3IgMTkKICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9IlR5cGVTY3JpcHQiIGljb249ImNvZGUiPgogICAgUmVjb21tZW5kZWQgZm9yIGJldHRlciBEWAogIDwvQ2FyZD4KPC9DYXJkR3JvdXA+CgojIyBJbnN0YWxsYXRpb24KCkNob29zZSB5b3VyIHByZWZlcnJlZCBwYWNrYWdlIG1hbmFnZXI6Cgo8VGFicz4KICA8VGFiIHRpdGxlPSJucG0iPgogICAgYGBgYmFzaAogICAgbnBtIGluc3RhbGwgQGIzZG90ZnVuL3NkawogICAgYGBgCiAgPC9UYWI+CiAgPFRhYiB0aXRsZT0icG5wbSI+CiAgICBgYGBiYXNoCiAgICBwbnBtIGFkZCBAYjNkb3RmdW4vc2RrCiAgICBgYGAKICA8L1RhYj4KPC9UYWJzPgoKIyMgQmFzaWMgU2V0dXAKCiMjIyAxLiBQcm92aWRlciBTZXR1cAoKV3JhcCB5b3VyIGFwcCB3aXRoIHRoZSBgQjNQcm92aWRlcmAgYW5kIGBBbnlzcGVuZFByb3ZpZGVyYCB0byBlbmFibGUgQW55U3BlbmQgZnVuY3Rpb25hbGl0eToKCmBgYHRzeCBBcHAudHN4IGljb249cmVhY3QKaW1wb3J0IHsgQW55c3BlbmRQcm92aWRlciB9IGZyb20gIkBiM2RvdGZ1bi9zZGsvYW55c3BlbmQvcmVhY3QiOwppbXBvcnQgeyBCM1Byb3ZpZGVyIH0gZnJvbSAiQGIzZG90ZnVuL3Nkay9nbG9iYWwtYWNjb3VudC9yZWFjdCI7CmltcG9ydCAiQGIzZG90ZnVuL3Nkay9pbmRleC5jc3MiOwoKZnVuY3Rpb24gQXBwKCkgewogIHJldHVybiAoCiAgICA8QjNQcm92aWRlciB0aGVtZT0ibGlnaHQiIGVudmlyb25tZW50PSJwcm9kdWN0aW9uIj4KICAgICAgPEFueXNwZW5kUHJvdmlkZXI+ey8qIFlvdXIgYXBwIGNvbXBvbmVudHMgKi99PC9BbnlzcGVuZFByb3ZpZGVyPgogICAgPC9CM1Byb3ZpZGVyPgogICk7Cn0KCmV4cG9ydCBkZWZhdWx0IEFwcDsKYGBgCgojIyMgMi4gRW52aXJvbm1lbnQgQ29uZmlndXJhdGlvbgoKPFRhYnM+CiAgPFRhYiB0aXRsZT0iTWFpbm5ldCI+CiAgICAqKkVuZHBvaW50Kio6IGBodHRwczovL21haW5uZXQuYW55c3BlbmQuY29tYAoKICAgIFVzZSB0aGlzIGZvciBwcm9kdWN0aW9uIGFwcGxpY2F0aW9ucyB3aXRoIHJlYWwgdHJhbnNhY3Rpb25zLgogIDwvVGFiPgogIDxUYWIgdGl0bGU9IlRlc3RuZXQiPgogICAgKipFbmRwb2ludCoqOiBgaHR0cDovL3Rlc3RuZXQuYW55c3BlbmQuY29tYAoKICAgIFVzZSB0aGlzIGZvciBkZXZlbG9wbWVudCBhbmQgdGVzdGluZyB3aXRoIHRlc3QgdG9rZW5zLgoKICAgIE5vdGU6IFRlc3RuZXQgaXMgY3VycmVudGx5IG5vdCBhdmFpbGFibGUuCiAgPC9UYWI+CjwvVGFicz4KCiMjIyAzLiBUeXBlU2NyaXB0IENvbmZpZ3VyYXRpb24gKE9wdGlvbmFsIGJ1dCBSZWNvbW1lbmRlZCkKCjxOb3RlPgogIElmIHlvdSdyZSB1c2luZyBUeXBlU2NyaXB0LCBlbnN1cmUgeW91ciBgdHNjb25maWcuanNvbmAgaW5jbHVkZXMgdGhlc2Ugc2V0dGluZ3MgZm9yIG9wdGltYWwgY29tcGF0aWJpbGl0eToKPC9Ob3RlPgoKYGBganNvbiB0c2NvbmZpZy5qc29uIGljb249c2V0dGluZ3MKewogICJjb21waWxlck9wdGlvbnMiOiB7CiAgICAibW9kdWxlUmVzb2x1dGlvbiI6ICJub2RlIiwKICAgICJhbGxvd1N5bnRoZXRpY0RlZmF1bHRJbXBvcnRzIjogdHJ1ZSwKICAgICJlc01vZHVsZUludGVyb3AiOiB0cnVlCiAgfQp9CmBgYAoKIyMgVmVyaWZpY2F0aW9uCgpDcmVhdGUgYSBzaW1wbGUgdGVzdCBjb21wb25lbnQgdG8gdmVyaWZ5IHlvdXIgc2V0dXAgd29ya3MgY29ycmVjdGx5OgoKYGBgdHN4IFRlc3RDb21wb25lbnQudHN4IGljb249dGVzdC10dWJlIGxpbmVzCmltcG9ydCB7IEFueVNwZW5kIH0gZnJvbSAiQGIzZG90ZnVuL3Nkay9hbnlzcGVuZC9yZWFjdCI7CgpmdW5jdGlvbiBUZXN0Q29tcG9uZW50KCkgewogIHJldHVybiA8QW55U3BlbmQgLz47Cn0KYGBgCgojIyBOZXh0IFN0ZXBzCgo8Q2FyZEdyb3VwIGNvbHM9ezN9PgogIDxDYXJkIHRpdGxlPSJFeHBsb3JlIENvbXBvbmVudHMiIGljb249InB1enpsZS1waWVjZSIgaHJlZj0iL2FueXNwZW5kL2NvbXBvbmVudHMiPgogICAgTGVhcm4gYWJvdXQgYXZhaWxhYmxlIGNvbXBvbmVudHMgZm9yIGRpZmZlcmVudCBwYXltZW50IHNjZW5hcmlvcwogIDwvQ2FyZD4KICA8Q2FyZCB0aXRsZT0iTGVhcm4gYWJvdXQgSG9va3MiIGljb249ImxpbmsiIGhyZWY9Ii9hbnlzcGVuZC9ob29rcyI+CiAgICBEaXNjb3ZlciBSZWFjdCBob29rcyBmb3IgYnVpbGRpbmcgY3VzdG9tIHBheW1lbnQgZmxvd3MKICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9IlNlZSBFeGFtcGxlcyIgaWNvbj0iY29kZSIgaHJlZj0iL2FueXNwZW5kL2V4YW1wbGVzIj4KICAgIEJyb3dzZSByZWFsLXdvcmxkIGltcGxlbWVudGF0aW9uIGV4YW1wbGVzCiAgPC9DYXJkPgo8L0NhcmRHcm91cD4KCiMjIFRyb3VibGVzaG9vdGluZwoKPEFjY29yZGlvbkdyb3VwPgogIDxBY2NvcmRpb24gdGl0bGU9IkltcG9ydCBFcnJvcnMiPgogICAgTWFrZSBzdXJlIHlvdSd2ZSBpbnN0YWxsZWQgdGhlIFNESyBjb3JyZWN0bHkgYW5kIGltcG9ydGVkIHRoZSBDU1MgZmlsZS4gVGhlIFNESyByZXF1aXJlcyBSZWFjdCAxOFwrIGFuZCBtYXkgaGF2ZSBjb21wYXRpYmlsaXR5IGlzc3VlcyB3aXRoIG9sZGVyIHZlcnNpb25zLgogIDwvQWNjb3JkaW9uPgogIDxBY2NvcmRpb24gdGl0bGU9IlByb3ZpZGVyIE5vdCBGb3VuZCI+CiAgICBFbnN1cmUgeW91IGhhdmUgYEIzUHJvdmlkZXJgIGFuZCBgQW55c3BlbmRQcm92aWRlcmAgcGxhY2VkIGhpZ2ggaW4geW91ciBjb21wb25lbnQgdHJlZSwgdHlwaWNhbGx5IGluIHlvdXIgbWFpbiBBcHAgY29tcG9uZW50LgogIDwvQWNjb3JkaW9uPgogIDxBY2NvcmRpb24gdGl0bGU9IlR5cGVTY3JpcHQgRXJyb3JzIj4KICAgIElmIHlvdSdyZSBzZWVpbmcgVHlwZVNjcmlwdCBlcnJvcnMsIHZlcmlmeSB5b3VyIGB0c2NvbmZpZy5qc29uYCBpbmNsdWRlcyB0aGUgcmVjb21tZW5kZWQgc2V0dGluZ3MgYWJvdmUuCiAgPC9BY2NvcmRpb24+CjwvQWNjb3JkaW9uR3JvdXA+Cg==",
    "lastUpdated": "2025-09-02T19:36:10.056Z"
  },
  {
    "sourceFile": "anyspend/hooks.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.058Z"
  },
  {
    "sourceFile": "anyspend/examples.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.060Z"
  },
  {
    "sourceFile": "anyspend/error-handling.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.063Z"
  },
  {
    "sourceFile": "anyspend/components.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.065Z"
  },
  {
    "sourceFile": "arenakit/introduction.mdx",
    "sourceHash": "CiMjIFdoYXQgaXMgQXJlbmFLaXQ/CgpNb3JlIGRvY3VtZW50YXRpb24gaXMgY29taW5nIHNvb24uCg==",
    "lastUpdated": "2025-09-02T19:36:10.068Z"
  },
  {
    "sourceFile": "sdk/global-account/permissions.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.071Z"
  },
  {
    "sourceFile": "sdk/global-account/introduction.mdx",
    "sourceHash": "CiMjIFdoYXQgYXJlIEIzIEdsb2JhbCBBY2NvdW50cz8KCkIzIEdsb2JhbCBBY2NvdW50cyBhcmUgYSB1bmlmaWVkIGF1dGhlbnRpY2F0aW9uIHN5c3RlbSB0aGF0IHByb3ZpZGVzIHVzZXJzIHdpdGggYSBzaW5nbGUgaWRlbnRpdHkgYWNyb3NzIHRoZSBlbnRpcmUgQjMgZWNvc3lzdGVtLiBVc2VycyBjYW4gYXV0aGVudGljYXRlIG9uY2UgYW5kIGFjY2VzcyBhbGwgQjMgYXBwbGljYXRpb25zLCBnYW1lcywgYW5kIHNlcnZpY2VzIHNlYW1sZXNzbHkuCgojIyBLZXkgRmVhdHVyZXMKCjxDYXJkR3JvdXAgY29scz17Mn0+Cgo8Q2FyZCB0aXRsZT0iU29jaWFsIExvZ2luIiBpY29uPSJ1c2VycyI+CiAgU3VwcG9ydCBmb3IgR29vZ2xlLCBEaXNjb3JkLCBhbmQgb3RoZXIgc29jaWFsIGF1dGhlbnRpY2F0aW9uIHByb3ZpZGVycy4KPC9DYXJkPgoKPENhcmQgdGl0bGU9IlNlc3Npb24gTWFuYWdlbWVudCIgaWNvbj0ia2V5Ij4KICBTZWN1cmUgc2Vzc2lvbiBrZXkgYXV0aGVudGljYXRpb24gd2l0aCBjdXN0b21pemFibGUgcGVybWlzc2lvbnMuCjwvQ2FyZD4KCjxDYXJkIHRpdGxlPSJDcm9zcy1QbGF0Zm9ybSIgaWNvbj0ibW9iaWxlIj4KICBXb3JrcyBhY3Jvc3Mgd2ViLCBtb2JpbGUsIGFuZCBkZXNrdG9wIGFwcGxpY2F0aW9ucy4KPC9DYXJkPgoKPENhcmQgdGl0bGU9IkRldmVsb3BlciBGcmllbmRseSIgaWNvbj0iY29kZSI+CiAgU2ltcGxlIFJlYWN0IGNvbXBvbmVudHMgYW5kIGhlYWRsZXNzIFR5cGVTY3JpcHQgc2VydmljZXMuCjwvQ2FyZD4KCjwvQ2FyZEdyb3VwPgoKIyMgQXJjaGl0ZWN0dXJlCgpUaGUgR2xvYmFsIEFjY291bnRzIHN5c3RlbSBjb25zaXN0cyBvZiBzZXZlcmFsIGtleSBjb21wb25lbnRzOgoKIyMjIEF1dGhlbnRpY2F0aW9uIEZsb3cKMS4gKipTb2NpYWwgTG9naW4qKjogVXNlcnMgYXV0aGVudGljYXRlIHdpdGggdGhlaXIgcHJlZmVycmVkIHNvY2lhbCBwcm92aWRlcgoyLiAqKkFjY291bnQgQ3JlYXRpb24qKjogQSBCMyBHbG9iYWwgQWNjb3VudCBpcyBjcmVhdGVkIG9yIGxpbmtlZAozLiAqKlNlc3Npb24gS2V5cyoqOiBPcHRpb25hbCBzZXNzaW9uIGtleXMgZm9yIGVuaGFuY2VkIHNlY3VyaXR5CjQuICoqUGVybWlzc2lvbnMqKjogR3JhbnVsYXIgcGVybWlzc2lvbnMgZm9yIGRpZmZlcmVudCBhY3Rpb25zCgojIyMgUmVhY3QgQ29tcG9uZW50cwotIGBCM1Byb3ZpZGVyYDogQ29udGV4dCBwcm92aWRlciBmb3IgR2xvYmFsIEFjY291bnRzCi0gYFNpZ25JbldpdGhCM2A6IENvbXBsZXRlIGF1dGhlbnRpY2F0aW9uIGZsb3cKLSBgUmVxdWVzdFBlcm1pc3Npb25zQnV0dG9uYDogUGVybWlzc2lvbiBtYW5hZ2VtZW50Ci0gYEFjY291bnRBc3NldHNgOiBEaXNwbGF5IHVzZXIgYXNzZXRzCgojIyMgSGVhZGxlc3MgU2VydmljZXMKLSBBdXRoZW50aWNhdGlvbiBzZXJ2aWNlIGZvciBjdXN0b20gaW1wbGVtZW50YXRpb25zCi0gU2Vzc2lvbiBtYW5hZ2VtZW50IHV0aWxpdGllcwotIFBlcm1pc3Npb24gdmFsaWRhdGlvbiBoZWxwZXJzCgojIyBRdWljayBTdGFydAoKIyMjIEJhc2ljIEF1dGhlbnRpY2F0aW9uCgpgYGB0c3gKaW1wb3J0IHsgQjNQcm92aWRlciwgU2lnbkluV2l0aEIzIH0gZnJvbSAiQGIzZG90ZnVuL3Nkay9nbG9iYWwtYWNjb3VudC9yZWFjdCI7CgpmdW5jdGlvbiBBcHAoKSB7CiAgcmV0dXJuICgKICAgIDxCM1Byb3ZpZGVyIGVudmlyb25tZW50PSJwcm9kdWN0aW9uIj4KICAgICAgPFNpZ25JbldpdGhCMwogICAgICAgIHByb3ZpZGVyPXt7IHN0cmF0ZWd5OiAiZ29vZ2xlIiB9fQogICAgICAgIHBhcnRuZXJJZD0ieW91ci1wYXJ0bmVyLWlkIgogICAgICAgIG9uTG9naW5TdWNjZXNzPXsoZ2xvYmFsQWNjb3VudCkgPT4gewogICAgICAgICAgY29uc29sZS5sb2coIlVzZXIgYXV0aGVudGljYXRlZDoiLCBnbG9iYWxBY2NvdW50KTsKICAgICAgICB9fQogICAgICAvPgogICAgPC9CM1Byb3ZpZGVyPgogICk7Cn0KYGBgCgojIyMgQ2hlY2sgQXV0aGVudGljYXRpb24gU3RhdHVzCgpgYGB0c3gKaW1wb3J0IHsgdXNlQjMgfSBmcm9tICJAYjNkb3RmdW4vc2RrL2dsb2JhbC1hY2NvdW50L3JlYWN0IjsKCmZ1bmN0aW9uIFVzZXJQcm9maWxlKCkgewogIGNvbnN0IHsgYWNjb3VudCwgaXNBdXRoZW50aWNhdGVkIH0gPSB1c2VCMygpOwoKICByZXR1cm4gKAogICAgPGRpdj4KICAgICAge2lzQXV0aGVudGljYXRlZCA/ICgKICAgICAgICA8cD5XZWxjb21lLCB7YWNjb3VudD8uZGlzcGxheU5hbWV9ITwvcD4KICAgICAgKSA6ICgKICAgICAgICA8cD5QbGVhc2Ugc2lnbiBpbjwvcD4KICAgICAgKX0KICAgIDwvZGl2PgogICk7Cn0KYGBgCgojIyBFbnZpcm9ubWVudCBDb25maWd1cmF0aW9uCgpTZXQgdXAgeW91ciBlbnZpcm9ubWVudCB2YXJpYWJsZXM6CgpgYGBiYXNoCiMgUHJvZHVjdGlvbgpORVhUX1BVQkxJQ19CM19BUEk9aHR0cHM6Ly9hcGkuYjMuZnVuCk5FWFRfUFVCTElDX0JTTU5UX0FQST1odHRwczovL2FwaS5iYXNlbWVudC5mdW4KCiMgRGV2ZWxvcG1lbnQgIApORVhUX1BVQkxJQ19CM19BUEk9aHR0cHM6Ly9kZXYtYXBpLmIzLmZ1bgpORVhUX1BVQkxJQ19CU01OVF9BUEk9aHR0cHM6Ly9kZXYtYXBpLmJhc2VtZW50LmZ1bgpgYGAKCiMjIE5leHQgU3RlcHMKCjxDYXJkR3JvdXAgY29scz17Mn0+Cgo8Q2FyZCB0aXRsZT0iQXV0aGVudGljYXRpb24gR3VpZGUiIGljb249InNoaWVsZCIgaHJlZj0iL3Nkay9nbG9iYWwtYWNjb3VudC9hdXRoZW50aWNhdGlvbiI+CiAgTGVhcm4gYWJvdXQgZGlmZmVyZW50IGF1dGhlbnRpY2F0aW9uIHN0cmF0ZWdpZXMgYW5kIGltcGxlbWVudGF0aW9uLgo8L0NhcmQ+Cgo8Q2FyZCB0aXRsZT0iUGVybWlzc2lvbnMgU3lzdGVtIiBpY29uPSJsb2NrIiBocmVmPSIvc2RrL2dsb2JhbC1hY2NvdW50L3Blcm1pc3Npb25zIj4KICBVbmRlcnN0YW5kIHNlc3Npb24ga2V5cyBhbmQgcGVybWlzc2lvbiBtYW5hZ2VtZW50Lgo8L0NhcmQ+Cgo8Q2FyZCB0aXRsZT0iUmVhY3QgSG9va3MiIGljb249InJlYWN0IiBocmVmPSIvc2RrL2dsb2JhbC1hY2NvdW50L2hvb2tzIj4KICBFeHBsb3JlIGF2YWlsYWJsZSBob29rcyBmb3IgR2xvYmFsIEFjY291bnRzIGludGVncmF0aW9uLgo8L0NhcmQ+Cgo8Q2FyZCB0aXRsZT0iRXhhbXBsZXMiIGljb249ImNvZGUiIGhyZWY9Ii9zZGsvZ2xvYmFsLWFjY291bnQvZXhhbXBsZXMiPgogIFNlZSBjb21wbGV0ZSBleGFtcGxlcyBhbmQgaW50ZWdyYXRpb24gcGF0dGVybnMuCjwvQ2FyZD4KCjwvQ2FyZEdyb3VwPgo=",
    "lastUpdated": "2025-09-02T19:36:10.073Z"
  },
  {
    "sourceFile": "sdk/global-account/hooks.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.076Z"
  },
  {
    "sourceFile": "sdk/global-account/examples.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.078Z"
  },
  {
    "sourceFile": "sdk/global-account/authentication.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.081Z"
  },
  {
    "sourceFile": "learn/troubleshooting/transactions-and-wallet-issues.mdx",
    "sourceHash": "CiMjIEZyZXF1ZW50bHkgQXNrZWQgUXVlc3Rpb25zCgo8QWNjb3JkaW9uR3JvdXA+CjxBY2NvcmRpb24gdGl0bGU9Ik15IGRlcG9zaXQgaXNuJ3Qgc2hvd2luZyB1cC4gV2hhdCBkbyBJIGRvPyI+CkNvbmZpcm0gdGhlIHRyYW5zYWN0aW9uIHdhcyBzZW50IHRvIHRoZSByaWdodCBhZGRyZXNzIGFuZCBjaGFpbi4gSWYgaXQncyBjb3JyZWN0LCBpdCBtYXkganVzdCBiZSBwcm9jZXNzaW5nLiBZb3UgY2FuIGNoZWNrIHRoZSBkZXRhaWxzIG9mIHlvdXIgdHJhbnNhY3Rpb24gdXNpbmcgdGhlICoqQjMgQmxvY2sgRXhwbG9yZXIqKjogWyoqZXhwbG9yZXIuYjMuZnVuKipdKGh0dHBzOi8vZXhwbG9yZXIuYjMuZnVuLykuCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iSG93IGxvbmcgZG8gd2l0aGRyYXdhbHMgYW5kIGRlcG9zaXRzIHRha2U/Ij4KV2l0aGRyYXdhbHMgYW5kIGRlcG9zaXRzIHR5cGljYWxseSBjb21wbGV0ZSB3aXRoaW4gYSBmZXcgbWludXRlcyBidXQgbWF5IHZhcnkgZGVwZW5kaW5nIG9uIG5ldHdvcmsgY29uZ2VzdGlvbi4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJJIHNlbnQgdG9rZW5zIHRvIHRoZSB3cm9uZyBuZXR3b3JrLiBDYW4gSSByZWNvdmVyIHRoZW0/Ij4KVW5mb3J0dW5hdGVseSwgdG9rZW5zIHNlbnQgdG8gdW5zdXBwb3J0ZWQgY2hhaW5zIG1heSBub3QgYmUgcmVjb3ZlcmFibGUuIENvbnRhY3Qgc3VwcG9ydCB3aXRoIGZ1bGwgZGV0YWlscy4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJXaHkgZGlkIG15IHRyYW5zYWN0aW9uIGZhaWw/Ij4KTW9zdCBmYWlsZWQgdHJhbnNhY3Rpb25zIGFyZSBkdWUgdG8gbmV0d29yayBpc3N1ZXMsIGxvdyBnYXMsIG9yIHdhbGxldCBkaXNjb25uZWN0cy4gVHJ5IGFnYWluIG9yIHJlZnJlc2guCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iTXkgc3dhcHBlZCB0b2tlbnMgZGlkIG5vdCBhcnJpdmUgdG8gbXkgd2FsbGV0LiBXaGF0IGRvIEkgZG8/Ij4KU3dhcHMgdXN1YWxseSB0YWtlIGp1c3QgYSBmZXcgbWludXRlcyB0byBjb21wbGV0ZS4gSG93ZXZlciwgbmV0d29yayBjb25nZXN0aW9uIGNhbiBzb21ldGltZXMgZGVsYXkgcHJvY2Vzc2luZy4gSW4gcmFyZSBjYXNlcywgdHJhbnNhY3Rpb25zIG1heSBnZXQgc3R1Y2suIElmIHlvdXIgc3dhcCBoYXNuJ3QgYXJyaXZlZCBhZnRlciBhIHJlYXNvbmFibGUgd2FpdCwgcGxlYXNlIHJlYWNoIG91dCB0byBvdXIgc3VwcG9ydCB0ZWFtIHdpdGggdGhlIHRyYW5zYWN0aW9uIGhhc2ggYW5kIHdhbGxldCBhZGRyZXNzIHNvIHdlIGNhbiBhc3Npc3QgeW91Lgo8L0FjY29yZGlvbj4KPC9BY2NvcmRpb25Hcm91cD4KCjxUaXA+CkFsd2F5cyBkb3VibGUtY2hlY2sgd2FsbGV0IGFkZHJlc3NlcyBhbmQgbmV0d29yayBzZWxlY3Rpb25zIGJlZm9yZSBjb25maXJtaW5nIHRyYW5zYWN0aW9ucyB0byBhdm9pZCBzZW5kaW5nIHRva2VucyB0byB0aGUgd3JvbmcgZGVzdGluYXRpb24uCjwvVGlwPgoKPEluZm8+CkZvciB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24sIHRoZSBCMyBCbG9jayBFeHBsb3JlciBhdCBbZXhwbG9yZXIuYjMuZnVuXShodHRwczovL2V4cGxvcmVyLmIzLmZ1bikgaXMgeW91ciBiZXN0IHJlc291cmNlIGZvciBjaGVja2luZyB0cmFuc2FjdGlvbiBzdGF0dXMgYW5kIGRldGFpbHMuCjwvSW5mbz4K",
    "lastUpdated": "2025-09-02T19:36:10.085Z"
  },
  {
    "sourceFile": "learn/troubleshooting/staking-and-rewards-faq.mdx",
    "sourceHash": "CiMjIEZyZXF1ZW50bHkgQXNrZWQgUXVlc3Rpb25zCgo8QWNjb3JkaW9uR3JvdXA+CjxBY2NvcmRpb24gdGl0bGU9IkhvdyBkb2VzIHN0YWtpbmcgd29yaz8iPgpTdGFraW5nIHlvdXIgQjMgdG9rZW5zIGdpdmVzIHlvdSBwYXNzaXZlIHJld2FyZHMgYW5kIGFjY2VzcyB0byBTdGFrZSB0byBXaW4gZ2FtZXMuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBwbGVhc2UgcmVhZCBvdXIgKipXaGF0IGlzIFN0YWtpbmcgYW5kIEhvdyBEb2VzIGl0IFdvcmsqKiBhcnRpY2xlLgo8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IldoYXQgaXMgdGhlIGNvb2xkb3duIHBlcmlvZCB3aGVuIEkgdW5zdGFrZT8iPgpBZnRlciB5b3UgdW5zdGFrZSwgdGhlcmUgaXMgYSA0NS1kYXkgY29vbGRvd24gYmVmb3JlIHlvdSBjYW4gd2l0aGRyYXcgeW91ciB0b2tlbnMuCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iSSBzdGFrZWQgYnV0IGRvbid0IHNlZSByZXdhcmRzLiBXaGF0IHNob3VsZCBJIGRvPyI+CldhaXQgYSBmZXcgbWludXRlcyBhbmQgcmVmcmVzaC4gSWYgaXQgc3RpbGwgZG9lc24ndCBzaG93LCBjb25maXJtIHlvdXIgdHJhbnNhY3Rpb24gc3VjY2VlZGVkIG9uIHRoZSBibG9ja2NoYWluLiBJZiB5b3VyIHRyYW5zYWN0aW9uIHN1Y2NlZWRlZCwgYnV0IHlvdSBhcmUgc3RpbGwgbm90IGFjY3VtdWxhdGluZyB0b2tlbnMsIGNvbnRhY3Qgc3VwcG9ydC4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJJIHVuc3Rha2VkIG15IHRva2VucyBidXQgSSBkb24ndCBzZWUgdGhlbSBpbiBteSB3YWxsZXQuIFdoZXJlIGlzIG15IG1vbmV5PyI+ClVuc3Rha2luZyB0cmlnZ2VycyBhIDQ1LWRheSBjb29sZG93biBwZXJpb2QuIER1cmluZyB0aGlzIHRpbWUsIHlvdXIgdG9rZW5zIGFyZSBzdGlsbCBoZWxkIGluIHRoZSBzdGFraW5nIHBvb2wgYW5kIG5vdCB5ZXQgYXZhaWxhYmxlIGluIHlvdXIgd2FsbGV0LiBPbmNlIHRoZSBjb29sZG93biBlbmRzLCB5b3UnbGwgbmVlZCB0byByZXR1cm4gdG8gdGhlIHN0YWtpbmcgcGFnZSBhbmQgY2xpY2sgKipXaXRoZHJhdyoqIHRvIG1vdmUgeW91ciB0b2tlbnMgYmFjayBpbnRvIHlvdXIgd2FsbGV0Lgo8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IkhvdyBkbyBJIGNsYWltIG15IHN0YWtpbmcgcmV3YXJkcz8iPgpTdGFraW5nIHJld2FyZHMgYXJlIGN1cnJlbnRseSBpbiBhbiBhY2N1bXVsYXRpb24gcGhhc2UgYW5kIGFyZSBub3QgeWV0IGNsYWltYWJsZS4gV2hlbiBjbGFpbWluZyBiZWNvbWVzIGF2YWlsYWJsZSwgd2UnbGwgbm90aWZ5IGFsbCBzdGFrZXJzIGFuZCB1cGRhdGUgdGhpcyBwYWdlIHdpdGggdGhlIHN0ZXBzIHRvIGNsYWltLgo8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IklzIHRoZXJlIGEgc3Rha2luZyBtaW5pbXVtPyI+Clllcy4gVGhlIG1pbmltdW0gYW1vdW50IHlvdSBjYW4gc3Rha2UgaXMgNTAgQjMuCjwvQWNjb3JkaW9uPgo8L0FjY29yZGlvbkdyb3VwPgoKPFdhcm5pbmc+ClJlbWVtYmVyIHRoYXQgdGhlIDQ1LWRheSBjb29sZG93biBwZXJpb2QgaXMgbWFuZGF0b3J5IGZvciBhbGwgdW5zdGFraW5nIG9wZXJhdGlvbnMuIFBsYW4gYWNjb3JkaW5nbHkgaWYgeW91IG5lZWQgYWNjZXNzIHRvIHlvdXIgdG9rZW5zIGJ5IGEgc3BlY2lmaWMgZGF0ZS4KPC9XYXJuaW5nPgo=",
    "lastUpdated": "2025-09-02T19:36:10.087Z"
  },
  {
    "sourceFile": "learn/troubleshooting/stake-to-win-games-faq.mdx",
    "sourceHash": "CiMjIEZyZXF1ZW50bHkgQXNrZWQgUXVlc3Rpb25zCgo8QWNjb3JkaW9uR3JvdXA+CjxBY2NvcmRpb24gdGl0bGU9IkhvdyBkb2VzIHRoZSBXZWVrbHkgUHJpemUgUG9vbCB3b3JrPyI+CllvdSBtdXN0IG1hbnVhbGx5IGVudGVyIGVhY2ggd2VlayBiZXR3ZWVuIE1vbmRheSBhbmQgRnJpZGF5IGJlZm9yZSB0aGUgMTowMCBQTSBVVEMgY3V0b2ZmLiBUaHJlZSB3aW5uZXJzIHBlciB0aWVyLgo8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IldoYXQgaXMgdGhlIE1vbnRobHkgTWVnYSBQcml6ZT8iPgpPbmUgc3Rha2VyIGlzIHJhbmRvbWx5IHNlbGVjdGVkIGVhY2ggbW9udGggdG8gd2luIGEgc3VycHJpc2UgcmV3YXJkIGxpa2UgdG9rZW5zIG9yIE5GVHMuCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iRG8gSSBuZWVkIHRvIGNsYWltIFNwaW4gdGhlIFdoZWVsIG9yIFNsb3RzIHJld2FyZHM/Ij4KTm8uIEFsbCByZXdhcmRzIGFyZSBzZW50IGRpcmVjdGx5IHRvIHlvdXIgd2FsbGV0IGFmdGVyIGVhY2ggZ2FtZS4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJDYW4gSSBwbGF5IG1vcmUgdGhhbiBvbmNlIHBlciBkYXk/Ij4KTm8uIFNwaW4gdGhlIFdoZWVsIGFuZCBTbG90cyBhcmUgbGltaXRlZCB0byBvbmUgcGxheSBwZXIgZGF5IHBlciB3YWxsZXQuCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iVGhlIHdoZWVsIG9yIHNsb3QgbWFjaGluZSB3b24ndCBzdG9wIHNwaW5uaW5nLiBXaGF0J3MgZ29pbmcgb24/Ij4KVGhpcyBpcyBhIGtub3duIHZpc3VhbCBidWcuIFNvbWV0aW1lcyB0aGUgc3BpbiBhbmltYXRpb24gZG9lc24ndCBzdG9wLCBidXQgdGhlIHJld2FyZCBpcyBzdGlsbCBwcm9jZXNzZWQuIFRyeSByZWZyZXNoaW5nIHRoZSBwYWdlLiBZb3VyIHByaXplIHNob3VsZCBhcHBlYXIgaW1tZWRpYXRlbHksIGFuZCB5b3UgY2FuIGFsc28gY2hlY2sgeW91ciBCMyBiYWxhbmNlIGZvciBjaGFuZ2VzLiBUbyBjb25maXJtIHlvdXIgcmV3YXJkIG9uLWNoYWluLCB5b3UgY2FuIGxvb2sgdXAgdGhlIHRyYW5zYWN0aW9uIG9uIHRoZSAqKkIzIEV4cGxvcmVyKio6IFsqKmV4cGxvcmVyLmIzLmZ1bioqXShodHRwczovL2V4cGxvcmVyLmIzLmZ1bi8pLiBJZiB5b3UncmUgc3RpbGwgdW5zdXJlLCBmZWVsIGZyZWUgdG8gcmVhY2ggb3V0IHRvIHN1cHBvcnQuCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iSSBkaWRuJ3QgZ2V0IG15IHJld2FyZCBmb3Igc3Bpbm5pbmcgdGhlIHdoZWVsIG9yIHBsYXlpbmcgdGhlIHNsb3QgbWFjaGluZS4gV2hhdCBzaG91bGQgSSBkbz8iPgpNb3N0IGxpa2VseSwgeW91ciByZXdhcmQgd2FzIHByb2Nlc3NlZCwgYnV0IGR1ZSB0byBhIHZpc3VhbCBidWcsIHlvdSBtYXkgbm90IGhhdmUgc2VlbiBpdCBoYXBwZW4uIEZpcnN0LCByZWZyZXNoIHRoZSBwYWdlIGFuZCBjaGVjayBpZiB5b3VyIEIzIGJhbGFuY2UgaGFzIGNoYW5nZWQuIFlvdSBjYW4gYWxzbyBjb25maXJtIHRoZSB0cmFuc2FjdGlvbiB1c2luZyB0aGUgW0IzIEV4cGxvcmVyXShodHRwczovL2V4cGxvcmVyLmIzLmZ1bi8pIGJ5IGVudGVyaW5nIHlvdXIgd2FsbGV0IGFkZHJlc3MuIElmIHlvdSdyZSBzdGlsbCB1bnN1cmUgb3IgbmVlZCBoZWxwLCBmZWVsIGZyZWUgdG8gcmVhY2ggb3V0IHRvIHN1cHBvcnQgYW5kIHdlJ2xsIGhlbHAgY29uZmlybSB5b3VyIHJld2FyZC4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJXaGF0IGFyZSB0aGUgU3Rha2UgdG8gV2luIHRpZXJzPyI+ClRpZXJzIGFyZSBiYXNlZCBvbiBob3cgbXVjaCBCMyB5b3UndmUgc3Rha2VkOiAqKlJvb2tpZSoqICgxS+KAkzNLKSwgKipHcmluZGVyKiogKDNL4oCTMTAwSyksICoqV2hhbGUqKiAoMTAwSyspLgo8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IldoeSBjYW4ndCBJIGFjY2VzcyBTdGFrZSB0byBXaW4gZ2FtZXM/Ij4KWW91IG5lZWQgYXQgbGVhc3QgMSwwMDAgQjMgc3Rha2VkIHRvIHVubG9jayBhY2Nlc3MuCjwvQWNjb3JkaW9uPgo8L0FjY29yZGlvbkdyb3VwPgoKPFdhcm5pbmc+CklmIHlvdSBleHBlcmllbmNlIHZpc3VhbCBidWdzIHdpdGggdGhlIHNwaW5uaW5nIGFuaW1hdGlvbnMsIGRvbid0IHdvcnJ5IC0geW91ciByZXdhcmRzIGFyZSBzdGlsbCBiZWluZyBwcm9jZXNzZWQuIEFsd2F5cyBjaGVjayB5b3VyIHdhbGxldCBiYWxhbmNlIGFuZCB0aGUgYmxvY2tjaGFpbiBleHBsb3JlciB0byBjb25maXJtIHRyYW5zYWN0aW9ucy4KPC9XYXJuaW5nPgo=",
    "lastUpdated": "2025-09-02T19:36:10.090Z"
  },
  {
    "sourceFile": "learn/troubleshooting/login-and-account-access.mdx",
    "sourceHash": "CiMjIEZyZXF1ZW50bHkgQXNrZWQgUXVlc3Rpb25zCgo8QWNjb3JkaW9uR3JvdXA+CjxBY2NvcmRpb24gdGl0bGU9IldoeSBjYW4ndCBJIGxvZyBpbiB0byBteSBhY2NvdW50PyI+Ck1ha2Ugc3VyZSB5b3UncmUgdXNpbmcgdGhlIGNvcnJlY3QgbG9naW4gbWV0aG9kIGFuZCB0aGF0IHlvdXIgd2FsbGV0IG9yIHNvY2lhbCBhY2NvdW50IGlzIGNvbm5lY3RlZCBwcm9wZXJseS4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJJIGRpZG4ndCByZWNlaXZlIG15IHZlcmlmaWNhdGlvbiBlbWFpbC4gV2hhdCBzaG91bGQgSSBkbz8iPgpDaGVjayBzcGFtIG9yIHRyeSByZXNlbmRpbmcgaXQuIElmIGl0IHN0aWxsIGRvZXNuJ3QgYXJyaXZlLCB0cnkgdXNpbmcgYSBkaWZmZXJlbnQgbG9naW4gbWV0aG9kIGxpa2Ugd2FsbGV0IG9yIERpc2NvcmQsIG9yIGNvbnRhY3QgdXMgdGhyb3VnaCBvdXIgc3VwcG9ydCBwb3J0YWwgZm9yIGFkZGl0aW9uYWwgYXNzaXN0YW5jZS4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJXaGF0IGxvZ2luIG1ldGhvZHMgYXJlIHN1cHBvcnRlZD8iPgpZb3UgY2FuIGxvZyBpbiB1c2luZyBlbWFpbCwgRGlzY29yZCwgVGVsZWdyYW0sIHdhbGxldCwgb3Igc29jaWFsIGFjY291bnRzIGxpa2UgR29vZ2xlIGFuZCBBcHBsZS4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJDYW4gSSBsaW5rIG11bHRpcGxlIGFjY291bnRzIHRvIG9uZSBwcm9maWxlPyI+Clllcy4gWW91IGNhbiBjb25uZWN0IHlvdXIgd2FsbGV0LCBEaXNjb3JkLCBhbmQgb3RoZXIgYWNjb3VudHMgaW4geW91ciBwcm9maWxlIHNldHRpbmdzIG9uIFsqKmJhc2VtZW50LmZ1bioqXShodHRwczovL2Jhc2VtZW50LmZ1bi8pLgo8L0FjY29yZGlvbj4KPC9BY2NvcmRpb25Hcm91cD4KCjxJbmZvPgpJZiB5b3UgY29udGludWUgaGF2aW5nIGxvZ2luIGlzc3VlcywgbWFrZSBzdXJlIHlvdSdyZSB1c2luZyB0aGUgc2FtZSBsb2dpbiBtZXRob2QgeW91IG9yaWdpbmFsbHkgdXNlZCB0byBjcmVhdGUgeW91ciBhY2NvdW50Lgo8L0luZm8+Cg==",
    "lastUpdated": "2025-09-02T19:36:10.093Z"
  },
  {
    "sourceFile": "learn/troubleshooting/games-and-competition-faq.mdx",
    "sourceHash": "CiMjIEZyZXF1ZW50bHkgQXNrZWQgUXVlc3Rpb25zCgo8QWNjb3JkaW9uR3JvdXA+CjxBY2NvcmRpb24gdGl0bGU9IkhvdyBkbyBJIGpvaW4gYSB0b3VybmFtZW50PyI+CkdvIHRvIHRoZSAqKkNvbXBldGUqKiB0YWIgb24gWyoqYmFzZW1lbnQuZnVuKipdKGh0dHBzOi8vYmFzZW1lbnQuZnVuLyksIHNlbGVjdCBhIGxpdmUgdG91cm5hbWVudCwgYW5kIGNsaWNrICoqSm9pbioqLiBDb25maXJtIHRoZSB0cmFuc2FjdGlvbiB0byByZWdpc3Rlci4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJIb3cgZG8gd2FnZXJzIHdvcms/Ij4KWW91IGNhbiBjaGFsbGVuZ2UgZnJpZW5kcyBvciBvcGVuIHB1YmxpYyB3YWdlcnMgYnkgZnVuZGluZyBhIGJldCBvbiBbYmFzZW1lbnQuZnVuXShodHRwczovL2Jhc2VtZW50LmZ1bi8pLiBTZWxlY3QgYW55IGdhbWUsIGFuZCB0aGVuIGNsaWNrIHRoZSBzd29yZCBpY29uIHRvIGNyZWF0ZSBhIHdhZ2VyIGNoYWxsZW5nZS4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJXaGF0IGhhcHBlbnMgaWYgSSBkaXNjb25uZWN0IGR1cmluZyBhIG1hdGNoPyI+CkRpc2Nvbm5lY3RpbmcgbWF5IHJlc3VsdCBpbiBhIGxvc3MuCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iV2h5IHdvbid0IHRoZSBnYW1lIGxvYWQgb24gdGhlIHNpdGU/Ij4KRmlyc3QsIG1ha2Ugc3VyZSB5b3VyIGludGVybmV0IGNvbm5lY3Rpb24gaXMgc3RhYmxlLiBJZiB0aGUgaXNzdWUgY29udGludWVzLCB0cnkgdXNpbmcgYSBkaWZmZXJlbnQgYnJvd3NlciBvciBjbGVhcmluZyB5b3VyIGNhY2hlLiBJZiB0aGF0IGRvZXNuJ3QgaGVscCwgY29udGFjdCBzdXBwb3J0IGZvciBmdXJ0aGVyIGFzc2lzdGFuY2UuCjwvQWNjb3JkaW9uPgoKPEFjY29yZGlvbiB0aXRsZT0iQ2FuIEkgcGxheSBvbiBtb2JpbGUgYnJvd3Nlcj8iPgpTb21lIGdhbWVzIHN1cHBvcnQgbW9iaWxlIGJyb3dzZXJzLCBidXQgc29tZSBnYW1lcyBhcmUgb25seSBhdmFpbGFibGUgb24gZGVza3RvcC4gWW91IGNhbiBjaGVjayBmb3IgbW9iaWxlIHN1cHBvcnQgb24gdGhlIGdhbWUncyBkZXRhaWwgcGFnZS4KPC9BY2NvcmRpb24+Cgo8QWNjb3JkaW9uIHRpdGxlPSJJcyB0aGVyZSBhIG1vYmlsZSBhcHA/Ij4KWWVzLiBZb3UgY2FuIGRvd25sb2FkIHRoZSBCU01OVCBhcHAgb24gQW5kcm9pZCBhbmQgQXBwbGUuCjwvQWNjb3JkaW9uPgo8L0FjY29yZGlvbkdyb3VwPgoKPFRpcD4KRm9yIHRoZSBiZXN0IGdhbWluZyBleHBlcmllbmNlLCBlbnN1cmUgeW91IGhhdmUgYSBzdGFibGUgaW50ZXJuZXQgY29ubmVjdGlvbiBhbmQgdXNlIGFuIHVwZGF0ZWQgYnJvd3Nlci4gQ2hyb21lIGFuZCBGaXJlZm94IGdlbmVyYWxseSBwcm92aWRlIHRoZSBiZXN0IGNvbXBhdGliaWxpdHkuCjwvVGlwPgoKPEluZm8+ClRoZSBtb2JpbGUgYXBwIHByb3ZpZGVzIHRoZSBtb3N0IG9wdGltaXplZCBleHBlcmllbmNlIGZvciBtb2JpbGUgZ2FtaW5nLCBzbyBkb3dubG9hZCBpdCBmcm9tIHlvdXIgZGV2aWNlJ3MgYXBwIHN0b3JlIGZvciB0aGUgYmVzdCBwZXJmb3JtYW5jZS4KPC9JbmZvPgo=",
    "lastUpdated": "2025-09-02T19:36:10.095Z"
  },
  {
    "sourceFile": "learn/troubleshooting/feedback-and-reporting-issues.mdx",
    "sourceHash": "CiMjIEZyZXF1ZW50bHkgQXNrZWQgUXVlc3Rpb25zCgo8QWNjb3JkaW9uR3JvdXA+CjxBY2NvcmRpb24gdGl0bGU9IkhvdyBjYW4gSSByZXBvcnQgYSBidWc/Ij4KWW91IGNhbiByZXBvcnQgYnVncyB1c2luZyB0aGUgY2hhdCBidXR0b24gb24gdGhpcyBzaXRlLiBCZSBzdXJlIHRvIGluY2x1ZGUgYW55IGhlbHBmdWwgc2NyZWVuc2hvdHMgYW5kIGEgY2xlYXIgZGVzY3JpcHRpb24gb2YgdGhlIGlzc3VlIHNvIHdlIGNhbiBpbnZlc3RpZ2F0ZSBxdWlja2x5Lgo8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IldoZXJlIGNhbiBJIGdpdmUgZmVlZGJhY2sgb3Igc3VnZ2VzdGlvbnM/Ij4KV2UgbG92ZSBoZWFyaW5nIGZyb20gdGhlIGNvbW11bml0eS4gWW91IGNhbiBzaGFyZSB5b3VyIGlkZWFzIHRocm91Z2ggdGhlIGNoYXQgYnV0dG9uIGhlcmUgb3IgcmVhY2ggb3V0IHRvIHVzIG9uIERpc2NvcmQgb3IgWC4KCioqRGlzY29yZCoqIC0gW2Rpc2NvcmQuZ2cvYjNkb3RmdW5dKGh0dHBzOi8vZGlzY29yZC5nZy9iM2RvdGZ1bikKCioqWCoqIC0gW3guY29tL2IzZG90ZnVuXShodHRwczovL3guY29tL2IzZG90ZnVuKQo8L0FjY29yZGlvbj4KCjxBY2NvcmRpb24gdGl0bGU9IkNhbiBJIGNvbnRhY3QgYSByZWFsIHBlcnNvbj8iPgpZZXMuIElmIHlvdSBjYW4ndCBmaW5kIHRoZSBhbnN3ZXIgaGVyZSwgb3VyIHN1cHBvcnQgdGVhbSBpcyBhdmFpbGFibGUgdmlhIGNoYXQuCjwvQWNjb3JkaW9uPgo8L0FjY29yZGlvbkdyb3VwPgoKIyMgQmVzdCBQcmFjdGljZXMgZm9yIFJlcG9ydGluZyBJc3N1ZXMKCldoZW4gcmVwb3J0aW5nIGJ1Z3Mgb3IgaXNzdWVzLCBpbmNsdWRlOgoKLSAqKkNsZWFyIGRlc2NyaXB0aW9uKiogb2Ygd2hhdCB5b3Ugd2VyZSB0cnlpbmcgdG8gZG8KLSAqKlN0ZXBzIHRvIHJlcHJvZHVjZSoqIHRoZSBwcm9ibGVtCi0gKipTY3JlZW5zaG90cyBvciBzY3JlZW4gcmVjb3JkaW5ncyoqIGlmIGFwcGxpY2FibGUKLSAqKkJyb3dzZXIgYW5kIGRldmljZSBpbmZvcm1hdGlvbioqCi0gKipXYWxsZXQgYWRkcmVzcyoqIChpZiB0aGUgaXNzdWUgaXMgdHJhbnNhY3Rpb24tcmVsYXRlZCkKLSAqKlRyYW5zYWN0aW9uIGhhc2gqKiAoZm9yIGZhaWxlZCB0cmFuc2FjdGlvbnMpCgo8SW5mbz4KVGhlIG1vcmUgZGV0YWlsZWQgaW5mb3JtYXRpb24geW91IHByb3ZpZGUsIHRoZSBmYXN0ZXIgb3VyIHRlYW0gY2FuIGludmVzdGlnYXRlIGFuZCByZXNvbHZlIHlvdXIgaXNzdWUuCjwvSW5mbz4KCiMjIENvbW11bml0eSBDaGFubmVscwoKU3RheSBjb25uZWN0ZWQgd2l0aCB0aGUgQjMgY29tbXVuaXR5OgoKLSAqKkRpc2NvcmQqKjogW2Rpc2NvcmQuZ2cvYjNkb3RmdW5dKGh0dHBzOi8vZGlzY29yZC5nZy9iM2RvdGZ1bikgLSBSZWFsLXRpbWUgY29tbXVuaXR5IGNoYXQgYW5kIHN1cHBvcnQKLSAqKlggKFR3aXR0ZXIpKio6IFt4LmNvbS9iM2RvdGZ1bl0oaHR0cHM6Ly94LmNvbS9iM2RvdGZ1bikgLSBMYXRlc3QgdXBkYXRlcyBhbmQgYW5ub3VuY2VtZW50cyAgCi0gKipTdXBwb3J0IENoYXQqKjogQXZhaWxhYmxlIG9uIHRoaXMgZG9jdW1lbnRhdGlvbiBzaXRlCgo8VGlwPgpPdXIgY29tbXVuaXR5IGlzIHZlcnkgYWN0aXZlIGFuZCBoZWxwZnVsIC0gZG9uJ3QgaGVzaXRhdGUgdG8gYXNrIHF1ZXN0aW9ucyBpbiBEaXNjb3JkIHdoZXJlIG90aGVyIHVzZXJzIGFuZCB0ZWFtIG1lbWJlcnMgY2FuIGFzc2lzdCB5b3UgcXVpY2tseS4KPC9UaXA+Cg==",
    "lastUpdated": "2025-09-02T19:36:10.099Z"
  },
  {
    "sourceFile": "learn/staking-rewards/what-is-staking-and-how-does-it-work.mdx",
    "sourceHash": "CjxGcmFtZT4KPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3ZjkyY2M5NjVkODI2NmZlYmExZjFiL2ZpbGUtVjhzTnhORVdBZS5wbmciIGFsdD0iU3Rha2luZyBvdmVydmlldyBiYW5uZXIgc2hvd2luZyByZXdhcmRzIGFuZCBiZW5lZml0cyIgLz4KPC9GcmFtZT4KClN0YWtpbmcgaXMgdGhlIHByb2Nlc3Mgb2YgbG9ja2luZyB1cCB5b3VyIEIzIHRva2VucyBvbiB0aGUgcGxhdGZvcm0gaW4gZXhjaGFuZ2UgZm9yIHJld2FyZHMuIFJhdGhlciB0aGFuIGxlYXZpbmcgeW91ciB0b2tlbnMgaWRsZSBpbiB5b3VyIHdhbGxldCwgc3Rha2luZyBnaXZlcyB5b3UgYWNjZXNzIHRvIGJvbnVzIHJld2FyZHMgYW5kIGV4Y2x1c2l2ZSBmZWF0dXJlcyB3aXRoaW4gdGhlIGVjb3N5c3RlbS4gWW91ciB0b2tlbnMgcmVtYWluIHlvdXJzIC0geW91J3JlIHNpbXBseSBjb21taXR0aW5nIHRoZW0gZm9yIGEgcGVyaW9kIG9mIHRpbWUgdG8gdW5sb2NrIGFkZGVkIHZhbHVlIGxpa2UgZGFpbHkgc3BpbnMsIHByaXplIHBvb2xzLCBhbmQgbW9yZS4KCiMjIEhvdyBTdGFraW5nIFdvcmtzIG9uIEIzCgpXaGVuIHlvdSBzdGFrZSB5b3VyIEIzIHRva2VucywgeW91J3JlIGVsaWdpYmxlIGZvciB0d28gdHlwZXMgb2YgcmV3YXJkczoKCjEuICoqUGFzc2l2ZSBTdGFraW5nIFJld2FyZHMqKgoyLiAqKlN0YWtlIHRvIFdpbioqIChvdXIgdW5pcXVlLCBuby1sb3NzIHByaXplIHN5c3RlbSkKCiMjIyBQYXNzaXZlIFN0YWtpbmcKClBhc3NpdmUgc3Rha2luZyByZXdhcmRzIGFyZSBhdXRvbWF0aWNhbGx5IGVhcm5lZCBvdmVyIHRpbWUuIE9uY2UgeW91ciB0b2tlbnMgYXJlIHN0YWtlZCwgdGhleSBiZWdpbiBhY2N1bXVsYXRpbmcgcmV3YXJkcyB3aXRob3V0IGFueSBmdXJ0aGVyIGFjdGlvbiByZXF1aXJlZCBmcm9tIHlvdS4KCi0gTm8gbmVlZCB0byBjaGVjayBpbiBkYWlseQotIFlvdSBjYW4gdW5zdGFrZSBhdCBhbnkgdGltZSAoc3ViamVjdCB0byBhIDQ1LWRheSBjb29sLWRvd24pCgpUaGlzIGlzIGlkZWFsIGZvciBhbnlvbmUgd2hvIHdhbnRzIGEgaGFuZHMtb2ZmLCBjb25zaXN0ZW50IHdheSB0byBlYXJuIGZyb20gdGhlaXIgdG9rZW5zLgoKIyMjIFN0YWtlIHRvIFdpbgoKU3Rha2UgdG8gV2luIGlzIG91ciBpbnRlcmFjdGl2ZSwgbm8tbG9zcyBwcml6ZSBzeXN0ZW0gZGVzaWduZWQgdG8gbWFrZSBzdGFraW5nIG1vcmUgZnVuIGFuZCBlbmdhZ2luZy4gSW4gYWRkaXRpb24gdG8gcGFzc2l2ZSByZXdhcmRzLCBzdGFrZXJzIGdldCBhY2Nlc3MgdG8gZGFpbHkgYW5kIHdlZWtseSBnYW1lcyB3aGVyZSB5b3UgY2FuIHdpbiBleHRyYSBwcml6ZXMsIHdpdGhvdXQgcmlza2luZyB5b3VyIHRva2Vucy4KCkhlcmUncyB3aGF0IHlvdSBnZXQ6CgotIPCfjrAgKipEYWlseSBTbG90cyoqIOKAkyBTcGluIG9uY2UgcGVyIGRheSBmb3IgYSBjaGFuY2UgdG8gd2luIGJvbnVzIHJld2FyZHMKLSDwn46hICoqU3BpbiB0aGUgV2hlZWwqKiDigJMgQW5vdGhlciBjaGFuY2UgdG8gd2luLCBhdmFpbGFibGUgZGFpbHkgIAotIPCfj4YgKipXZWVrbHkgUHJpemUgUG9vbCoqIOKAkyBFbnRlciBvbmNlIHBlciB3ZWVrLCB3aXRoIHdpbm5lcnMgZHJhd24gYXQgdGhlIGVuZCBvZiB0aGUgd2VlawoKPENoZWNrPgpUaGVyZSdzIG5vIGRvd25zaWRlLiBZb3VyIHRva2VucyBzdGF5IHN0YWtlZCwgYW5kIHlvdSBnZXQgbXVsdGlwbGUgY2hhbmNlcyB0byB3aW4gZXZlcnkgd2Vlay4gSXQncyBhbGwgdXBzaWRlIQo8L0NoZWNrPgoKPEluZm8+ClN0YWtpbmcgY29tYmluZXMgdGhlIHNlY3VyaXR5IG9mIHBhc3NpdmUgaW5jb21lIHdpdGggdGhlIGV4Y2l0ZW1lbnQgb2YgcHJpemUgZ2FtZXMsIGNyZWF0aW5nIGEgdW5pcXVlIGFuZCByZXdhcmRpbmcgZXhwZXJpZW5jZSBmb3IgQjMgdG9rZW4gaG9sZGVycy4KPC9JbmZvPgo=",
    "lastUpdated": "2025-09-02T19:36:10.102Z"
  },
  {
    "sourceFile": "learn/staking-rewards/stake-to-win.mdx",
    "sourceHash": "ClN0YWtlIHRvIFdpbiBpcyBCMydzIG5vLWxvc3MgcHJpemUgc3lzdGVtIHRoYXQgcmV3YXJkcyB5b3UganVzdCBmb3Igc3Rha2luZyB5b3VyIHRva2Vucy4gT25jZSB5b3UncmUgaW4sIHlvdSB1bmxvY2sgYWNjZXNzIHRvIGEgZ3Jvd2luZyBsaXN0IG9mIGRhaWx5IGFuZCB3ZWVrbHkgZ2FtZXMsIHBsdXMgYSBzdXJwcmlzZSBtb250aGx5IG1lZ2EgcHJpemUhIE5vIGFkZGl0aW9uYWwgc3BlbmQgYW5kIG5vIGZlZXMgLSBqdXN0IHJld2FyZHMgZm9yIHN0YXlpbmcgc3Rha2VkLgoKIyMgVGllci1CYXNlZCBSZXdhcmRzCgpZb3VyIHJld2FyZCB0aWVyIGlzIGJhc2VkIG9uIGhvdyBtdWNoIEIzIHlvdSBoYXZlIHN0YWtlZC4gVGhlIGhpZ2hlciB5b3VyIHRpZXIsIHRoZSBiaWdnZXIgdGhlIHByaXplIHBvb2xzIHlvdSdyZSBlbGlnaWJsZSBmb3IuCgojIyMgV2hhbGUgVGllcgotICoqMTAwLDAwMCsgQjMgc3Rha2VkKioKLSBBY2Nlc3MgdG8gdGhlIGxhcmdlc3QgcHJpemUgcG9vbHMgYW5kIGhpZ2hlc3QtdGllciByZXdhcmRzCgojIyMgR3JpbmRlciBUaWVyCi0gKiozLDAwMCDigJMgOTksOTk5IEIzIHN0YWtlZCoqCi0gQmFsYW5jZWQgcmV3YXJkcyBmb3IgcmVndWxhciBzdGFrZXJzCgojIyMgUm9va2llIFRpZXIKLSAqKjEsMDAwIOKAkyAyLDk5OSBCMyBzdGFrZWQqKgotIEdyZWF0IGZvciBuZXcgcGxheWVycyBnZXR0aW5nIHN0YXJ0ZWQKCjxOb3RlPgpZb3UgY2FuIHBhcnRpY2lwYXRlIGluIGFsbCBnYW1lcyBhcyBsb25nIGFzIHlvdSBoYXZlIGF0IGxlYXN0ICoqMSwwMDAgQjMgc3Rha2VkKiouCjwvTm90ZT4KCiMjIEN1cnJlbnQgR2FtZXMKCiMjIyBEYWlseSBTbG90cwotIFNwaW4gb25jZSBwZXIgZGF5IGZvciBhIGNoYW5jZSBhdCBpbnN0YW50IEIzIHJld2FyZHMKCiMjIyBEYWlseSBTcGluIHRoZSBXaGVlbAotIFNwaW4gdGhlIHdoZWVsIGRhaWx5IGFuZCBzZWUgd2hhdCBsdWNrIGJyaW5ncyB5b3UKCiMjIyBXZWVrbHkgUHJpemUgUG9vbAotIEVudGVyIHdlZWtseSwgYmV0d2VlbiBNb25kYXkgYW5kIEZyaWRheSBmb3IgYSBjaGFuY2UgdG8gd2luCi0gVGhyZWUgd2lubmVycyBwZXIgdGllciBlYWNoIHdlZWsKCjxDaGVjaz4KQWxsIGdhbWVzIGFyZSBjb21wbGV0ZWx5IGZyZWUgdG8gcGxheSBvbmNlIHlvdSdyZSBzdGFraW5nLiBUaGVyZSBhcmUgbm8gYWRkaXRpb25hbCBjb3N0cyBvciBmZWVzLgo8L0NoZWNrPgoKPFRpcD4KVGhlIGJlYXV0eSBvZiBTdGFrZSB0byBXaW4gaXMgdGhhdCBpdCdzIHRydWx5IG5vLWxvc3MgLSB5b3VyIHN0YWtlZCB0b2tlbnMgcmVtYWluIHNlY3VyZSB3aGlsZSB5b3UgZ2V0IG11bHRpcGxlIGNoYW5jZXMgdG8gd2luIGFkZGl0aW9uYWwgcmV3YXJkcyBldmVyeSB3ZWVrLgo8L1RpcD4K",
    "lastUpdated": "2025-09-02T19:36:10.104Z"
  },
  {
    "sourceFile": "learn/staking-rewards/how-to-unstake-your-tokens.mdx",
    "sourceHash": "ClVuc3Rha2luZyBsZXRzIHlvdSBiZWdpbiB0aGUgcHJvY2VzcyBvZiBtb3ZpbmcgeW91ciBCMyB0b2tlbnMgb3V0IG9mIHN0YWtpbmcgYW5kIGJhY2sgaW50byB5b3VyIHdhbGxldC4gVGhpcyBpcyBhIDItcGFydCBwcm9jZXNzLCByZXF1aXJpbmcgYSA0NS1kYXkgY29vbGRvd24gYmVmb3JlIHlvdSBhcmUgYWJsZSB0byBjb21wbGV0ZSB0aGUgdW5zdGFraW5nIHByb2Nlc3MuIEZvbGxvdyB0aGlzIHF1aWNrIGd1aWRlIGZvciBhIHN0ZXAtYnktc3RlcCBvbiBob3cgdG8gdW5zdGFrZSB5b3VyIHRva2Vucy4KCiMjIFN0ZXBzIHRvIFVuc3Rha2UgLSBQYXJ0IDEKCjxpZnJhbWUKICBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCIKICBzcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL1lqYUk4d09URlU4IgogIHRpdGxlPSJIb3cgdG8gc3RhcnQgdGhlIHVuc3Rha2luZyBwcm9jZXNzIC0gUGFydCAxIgogIGZyYW1lQm9yZGVyPSIwIgogIGFsbG93PSJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIgogIGFsbG93RnVsbFNjcmVlbgo+PC9pZnJhbWU+Cgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJOYXZpZ2F0ZSB0byBzdGFraW5nIHBsYXRmb3JtIj4KICBHbyB0byBbc3Rha2UuYjMuZnVuXShodHRwczovL3N0YWtlLmIzLmZ1bi8pIGFuZCBsb2cgaW4gdXNpbmcgeW91ciBwcmVmZXJyZWQgbG9naW4gbWV0aG9kLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iU3RhcnQgdW5zdGFraW5nIj4KICBDbGljayAqKlVuc3Rha2UqKi4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODgwY2FhNzQwMWU1ZjIyNDEyZDZmMDcvZmlsZS1SUFV5TVpMR1F3LnBuZyIgYWx0PSJVbnN0YWtlIGJ1dHRvbiBvbiB0aGUgc3Rha2luZyBkYXNoYm9hcmQiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvbmZpcm0gdW5zdGFraW5nIj4KICBDbGljayAqKlVuc3Rha2UqKiBhZ2FpbiBvbiB0aGUgbmV4dCBzY3JlZW4uCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MGQ1OGVjMTFlN2QxNDU0NzE5MTQzL2ZpbGUtY2JwdzI4YnhzNy5wbmciIGFsdD0iVW5zdGFrZSBjb25maXJtYXRpb24gZGlhbG9nIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJDb25maWd1cmUgdW5zdGFraW5nIj4KICBFbnRlciB0aGUgYW1vdW50IHlvdSB3YW50IHRvIHVuc3Rha2UsIHdoZXJlIHlvdSB3YW50IHRvIHVuc3Rha2UgZnJvbSAoYm9udXMgb3IgcmVndWxhciBzdGFrZWQgdG9rZW5zKSwgYW5kIHRoZW4gY2xpY2sgKipSZWRlZW0qKi4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODgwZDViNmEzMDk0OTU0ODZkMTUyMjIvZmlsZS1DQjIyNlFsOGl1LnBuZyIgYWx0PSJVbnN0YWtpbmcgY29uZmlndXJhdGlvbiB3aXRoIGFtb3VudCBhbmQgc291cmNlIHNlbGVjdGlvbiIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQ29uZmlybSB0cmFuc2FjdGlvbiI+CiAgQ29uZmlybSB0aGUgdHJhbnNhY3Rpb24gaW4geW91ciB3YWxsZXQgdG8gY29tcGxldGUgdGhlIGZpcnN0IGhhbGYgb2YgdGhlIHVuc3Rha2luZyBwcm9jZXNzLiBPbmNlIGNvbXBsZXRlLCB5b3VyIHRva2VucyB3aWxsIGVudGVyIGEgNDUtZGF5IGNvb2wtZG93biBwZXJpb2QuIER1cmluZyB0aGlzIHRpbWUsIHlvdSBtdXN0IHdhaXQgNDUgZGF5cyBiZWZvcmUgeW91IGNhbiB3aXRoZHJhdyB5b3VyIHRva2VucyBmcm9tIHRoZSBwb29sLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4ODBkNmE4YzExZTdkMTQ1NDcxOTE0Yi9maWxlLTIzd2NOOUdJVjQucG5nIiBhbHQ9IlRyYW5zYWN0aW9uIGNvbmZpcm1hdGlvbiBhbmQgY29vbGRvd24gbm90aWZpY2F0aW9uIiAvPgogIDwvRnJhbWU+CiAgCiAgPFdhcm5pbmc+CiAgICBZb3VyIHRva2VucyBhcmUgbm93IGluIGEgNDUtZGF5IGNvb2xkb3duIHBlcmlvZC4gWW91IGNhbm5vdCBhY2Nlc3MgdGhlbSB1bnRpbCB0aGlzIHBlcmlvZCBlbmRzLgogIDwvV2FybmluZz4KPC9TdGVwPgo8L1N0ZXBzPgoKIyMgU3RlcHMgdG8gVW5zdGFrZSAtIFBhcnQgMgoKPGlmcmFtZQogIGNsYXNzTmFtZT0idy1mdWxsIGFzcGVjdC12aWRlbyByb3VuZGVkLXhsIgogIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvY1dGNjBHYTYzemMiCiAgdGl0bGU9IkhvdyB0byBjb21wbGV0ZSB0aGUgdW5zdGFraW5nIHByb2Nlc3MgLSBQYXJ0IDIiCiAgZnJhbWVCb3JkZXI9IjAiCiAgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiCiAgYWxsb3dGdWxsU2NyZWVuCj48L2lmcmFtZT4KCjxTdGVwcz4KPFN0ZXAgdGl0bGU9IlJldHVybiBhZnRlciBjb29sZG93biI+CiAgR28gdG8gW3N0YWtlLmIzLmZ1bl0oaHR0cHM6Ly9zdGFrZS5iMy5mdW4vKSBhbmQgbG9nIGluIHVzaW5nIHlvdXIgcHJlZmVycmVkIGxvZ2luIG1ldGhvZC4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkFjY2VzcyB1bnN0YWtpbmciPgogIENsaWNrICoqVW5zdGFrZSoqIGZyb20gdGhlIG1haW4gcGFnZS4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODgwY2FhNzQwMWU1ZjIyNDEyZDZmMDcvZmlsZS1SUFV5TVpMR1F3LnBuZyIgYWx0PSJVbnN0YWtlIGJ1dHRvbiBmb3IgYWNjZXNzaW5nIHdpdGhkcmF3YWwgb3B0aW9ucyIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iRmluZCB5b3VyIHBlbmRpbmcgd2l0aGRyYXdhbCI+CiAgTG9jYXRlIHRoZSB0cmFuc2FjdGlvbiB3aXRoIHlvdXIgcHJldmlvdXNseSB3aXRoZHJhd24gdG9rZW4uIElmIDQ1IGRheXMgaGF2ZSBwYXNzZWQgc2luY2UgeW91IGluaXRpYXRlZCB0aGUgcmVkZWVtIHJlcXVlc3QsIHlvdSBzaG91bGQgbm93IHNlZSB0aGUgb3B0aW9uIHRvIHdpdGhkcmF3IHlvdXIgdG9rZW5zLiBDbGljayAqKldpdGhkcmF3KiouCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MGQ5MTBhMzA5NDk1NDg2ZDE1MjQ0L2ZpbGUtaFY0NGlLY2ZlQS5wbmciIGFsdD0iV2l0aGRyYXcgYnV0dG9uIGF2YWlsYWJsZSBhZnRlciBjb29sZG93biBwZXJpb2QiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvbXBsZXRlIHdpdGhkcmF3YWwiPgogIFlvdSdsbCBiZSBwcm9tcHRlZCB0byBjb25maXJtIHlvdXIgd2l0aGRyYXdhbC4gQ2xpY2sgKipDb25maXJtKiogYW5kIHRoZW4gY29uZmlybSB0aGUgdHJhbnNhY3Rpb24gYWdhaW4gaW4geW91ciB3YWxsZXQgdG8gY29tcGxldGUgdGhlIHdpdGhkcmF3YWwgcHJvY2Vzcy4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODgwZDk3Y2IyOGVjZjE2NjM5YzhiYTIvZmlsZS00eEFVN294azcxLnBuZyIgYWx0PSJGaW5hbCB3aXRoZHJhd2FsIGNvbmZpcm1hdGlvbiBkaWFsb2ciIC8+CiAgPC9GcmFtZT4KICAKICA8Q2hlY2s+CiAgICBPbmNlIGNvbmZpcm1lZCwgeW91ciB0b2tlbnMgd2lsbCBiZSBhdmFpbGFibGUgaW4geW91ciB3YWxsZXQgZm9yIHVzZS4KICA8L0NoZWNrPgo8L1N0ZXA+CjwvU3RlcHM+Cgo8SW5mbz4KVGhlIDQ1LWRheSBjb29sZG93biBwZXJpb2QgaXMgZGVzaWduZWQgdG8gZW5zdXJlIHRoZSBzdGFiaWxpdHkgb2YgdGhlIHN0YWtpbmcgcG9vbC4gRHVyaW5nIHRoaXMgdGltZSwgeW91ciB0b2tlbnMgYXJlIG5vdCBlYXJuaW5nIHJld2FyZHMgYnV0IGFyZSBhbHNvIG5vdCBhdmFpbGFibGUgZm9yIHVzZS4KPC9JbmZvPgo=",
    "lastUpdated": "2025-09-02T19:36:10.107Z"
  },
  {
    "sourceFile": "learn/staking-rewards/how-to-stake-b3.mdx",
    "sourceHash": "ClN0YWtpbmcgeW91ciBCMyB0b2tlbnMgaXMgcXVpY2sgYW5kIGVhc3ksIGFuZCB1bmxvY2tzIGJvdGggcGFzc2l2ZSByZXdhcmRzIGFuZCBhY2Nlc3MgdG8gb3VyIFN0YWtlIHRvIFdpbiBwcml6ZSBzeXN0ZW0uIEluIHRoaXMgZ3VpZGUsIHdlJ2xsIHdhbGsgeW91IHRocm91Z2ggdGhlIHNpbXBsZSBzdGVwcyB0byBzdGFydCBzdGFraW5nIGRpcmVjdGx5IG9uIHRoZSBwbGF0Zm9ybS4KCiMjIE9wdGlvbiAxOiBTdGFrZSB3aXRoIEIzIFlvdSBBbHJlYWR5IE93bgoKPGlmcmFtZQogIGNsYXNzTmFtZT0idy1mdWxsIGFzcGVjdC12aWRlbyByb3VuZGVkLXhsIgogIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvWnU1VG5wVUJMNmsiCiAgdGl0bGU9IkhvdyB0byBzdGFrZSBCMyB0b2tlbnMgeW91IGFscmVhZHkgb3duIgogIGZyYW1lQm9yZGVyPSIwIgogIGFsbG93PSJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIgogIGFsbG93RnVsbFNjcmVlbgo+PC9pZnJhbWU+Cgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJOYXZpZ2F0ZSB0byBzdGFraW5nIHBsYXRmb3JtIj4KICBHbyB0byBbc3Rha2UuYjMuZnVuXShodHRwczovL3N0YWtlLmIzLmZ1bi8pIGFuZCBzaWduIGludG8geW91ciBhY2NvdW50IHVzaW5nIHlvdXIgY2hvc2VuIGxvZ2luIG1ldGhvZC4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlN0YXJ0IHN0YWtpbmcgcHJvY2VzcyI+CiAgQ2xpY2sgKipTdGFrZSBtb3JlIEIzKyoqLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4N2Y5N2NiNmE0ZjY0MDEyNTE3MzBiYi9maWxlLTdsRGhUWHIyR1UucG5nIiBhbHQ9IlN0YWtlIG1vcmUgQjMrIGJ1dHRvbiBvbiB0aGUgc3Rha2luZyBkYXNoYm9hcmQiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkVudGVyIHN0YWtlIGFtb3VudCI+CiAgRW50ZXIgdGhlIGFtb3VudCB5b3Ugd2lzaCB0byBzdGFrZSBhbmQgdGhlbiBjbGljayAqKlN0YWtlIGFuZCBFYXJuKiouCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3Zjk3ZWE4NTE4ZDI1MTZkMWE0NWUxL2ZpbGUtcnpzUkRCTm9heS5wbmciIGFsdD0iQW1vdW50IGlucHV0IGZpZWxkIHdpdGggU3Rha2UgYW5kIEVhcm4gYnV0dG9uIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJDb25maXJtIHRyYW5zYWN0aW9uIj4KICBDb25maXJtIHRoZSB0cmFuc2FjdGlvbiBpbiB5b3VyIHdhbGxldCB0byBjb21wbGV0ZSB0aGUgcHJvY2VzcyBvZiBzdGFraW5nIHlvdXIgQjMuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3ZjlhNTAxODVjMTMzYjJjMGE0OGFhL2ZpbGUtRzZ0NzZHQ2gxei5wbmciIGFsdD0iV2FsbGV0IGNvbmZpcm1hdGlvbiBkaWFsb2cgZm9yIHN0YWtpbmcgdHJhbnNhY3Rpb24iIC8+CiAgPC9GcmFtZT4KICAKICA8Q2hlY2s+CiAgICBZb3VyIHRva2VucyBhcmUgbm93IHN0YWtlZCBhbmQgZWFybmluZyByZXdhcmRzIQogIDwvQ2hlY2s+CjwvU3RlcD4KPC9TdGVwcz4KCiMjIE9wdGlvbiAyOiBTd2FwICYgU3Rha2UgZnJvbSBPdGhlciBUb2tlbnMKCjxpZnJhbWUKICBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCIKICBzcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLzR0aVppbUpJdl9NIgogIHRpdGxlPSJIb3cgdG8gc3dhcCBhbmQgc3Rha2UgZnJvbSBvdGhlciB0b2tlbnMiCiAgZnJhbWVCb3JkZXI9IjAiCiAgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiCiAgYWxsb3dGdWxsU2NyZWVuCj48L2lmcmFtZT4KCjxTdGVwcz4KPFN0ZXAgdGl0bGU9Ik5hdmlnYXRlIHRvIHN0YWtpbmcgcGxhdGZvcm0iPgogIEdvIHRvIFtzdGFrZS5iMy5mdW5dKGh0dHBzOi8vc3Rha2UuYjMuZnVuLykgYW5kIHNpZ24gaW50byB5b3VyIGFjY291bnQgdXNpbmcgeW91ciBjaG9zZW4gbG9naW4gbWV0aG9kLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iU3RhcnQgc3Rha2luZyBwcm9jZXNzIj4KICBDbGljayAqKlN0YWtlIG1vcmUgQjMrKiouCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3Zjk3Y2I2YTRmNjQwMTI1MTczMGJiL2ZpbGUtN2xEaFRYcjJHVS5wbmciIGFsdD0iU3Rha2UgbW9yZSBCMysgYnV0dG9uIGhpZ2hsaWdodGVkIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJDaG9vc2Ugc3dhcCBvcHRpb24iPgogIFRoZW4gY2xpY2sgKipTd2FwICYgc3Rha2UqKiBmcm9tIGFueSBjcnlwdG8uCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3ZjlmY2NiMjhlY2YxNjYzOWM4NjNiL2ZpbGUtUUtTQVRkZUZFdC5wbmciIGFsdD0iU3dhcCAmIHN0YWtlIG9wdGlvbiBmb3IgY29udmVydGluZyBvdGhlciB0b2tlbnMiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlNldCBhbW91bnQiPgogIEVudGVyIHRoZSBhbW91bnQgeW91IHdpc2ggdG8gc3Rha2UsIGFuZCB0aGVuIGNsaWNrICoqQ29udGludWUqKi4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODdmYTI4ZjE4NWMxMzNiMmMwYTQ5MDEvZmlsZS13NGI4Ukw4VGc0LnBuZyIgYWx0PSJBbW91bnQgaW5wdXQgd2l0aCBDb250aW51ZSBidXR0b24iIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlNlbGVjdCBzb3VyY2UgdG9rZW4iPgogIFlvdSdsbCB0aGVuIGJlIGFibGUgdG8gc2VsZWN0IHRoZSB0b2tlbiBhbmQgY2hhaW4geW91IHdhbnQgdG8gc3dhcCBmcm9tLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4N2ZhMjJiOTY1ZDgyNjZmZWJhMWZhMC9maWxlLVMwMkQ3S2I4WU4ucG5nIiBhbHQ9IlRva2VuIGFuZCBjaGFpbiBzZWxlY3Rpb24gaW50ZXJmYWNlIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJSZXZpZXcgYW5kIGNoZWNrb3V0Ij4KICBPbmNlIHlvdSd2ZSBtYWRlIHlvdXIgc2VsZWN0aW9uLCBjbGljayAqKkNoZWNrb3V0KiouCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3ZmEzMzRiMjhlY2YxNjYzOWM4NjUxL2ZpbGUtTVMyRFFRQUFpUy5wbmciIGFsdD0iQ2hlY2tvdXQgYnV0dG9uIGZvciBzd2FwIGFuZCBzdGFrZSB0cmFuc2FjdGlvbiIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQ29tcGxldGUgcGF5bWVudCI+CiAgTmV4dCwgY2xpY2sgKipQYXkgZnJvbSBDb25uZWN0ZWQgV2FsbGV0KiogKG9yIHlvdSBjYW4gY2hvb3NlIHRvIHBheSBmcm9tIGEgZGlmZmVyZW50IHdhbGxldCksIGFuZCB0aGVuIGNvbmZpcm0gdGhlIHRyYW5zYWN0aW9uIGluIHlvdXIgd2FsbGV0IHRvIGNvbXBsZXRlIHlvdXIgc3dhcCtzdGFrZS4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODdmYTM2NTZhNGY2NDAxMjUxNzMxMjEvZmlsZS1jeVduUDBCVFl3LnBuZyIgYWx0PSJQYXltZW50IG1ldGhvZCBzZWxlY3Rpb24gYW5kIGZpbmFsIGNvbmZpcm1hdGlvbiIgLz4KICA8L0ZyYW1lPgogIAogIDxDaGVjaz4KICAgIFlvdXIgdG9rZW5zIHdpbGwgYmUgc3dhcHBlZCB0byBCMyBhbmQgYXV0b21hdGljYWxseSBzdGFrZWQsIGVhcm5pbmcgcmV3YXJkcyBpbW1lZGlhdGVseSEKICA8L0NoZWNrPgo8L1N0ZXA+CjwvU3RlcHM+Cgo8Tm90ZT4KVGhlIG1pbmltdW0gc3Rha2luZyBhbW91bnQgaXMgNTAgQjMuIE9uY2Ugc3Rha2VkLCB5b3VyIHRva2VucyB3aWxsIGltbWVkaWF0ZWx5IHN0YXJ0IGVhcm5pbmcgcGFzc2l2ZSByZXdhcmRzIGFuZCB1bmxvY2sgYWNjZXNzIHRvIFN0YWtlIHRvIFdpbiBnYW1lcy4KPC9Ob3RlPgo=",
    "lastUpdated": "2025-09-02T19:36:10.109Z"
  },
  {
    "sourceFile": "learn/staking-rewards/how-spin-the-wheel-works.mdx",
    "sourceHash": "ClNwaW4gdGhlIFdoZWVsIGlzIGEgc2ltcGxlIGRhaWx5IGdhbWUgdGhhdCBnaXZlcyBzdGFrZXJzIGEgY2hhbmNlIHRvIHdpbiBleHRyYSB0b2tlbnMgd2l0aCBqdXN0IG9uZSBjbGljay4gTm8gY2xhaW1zIG9yIGZvbGxvdy11cHMgbmVlZGVkLiBKdXN0IHNwaW4gYW5kIHNlZSB3aGF0IHlvdSBnZXQuIEFsbCByZXdhcmRzIGFyZSBzZW50IGRpcmVjdGx5IHRvIHlvdXIgd2FsbGV0LgoKIyMgSG93IHRvIFBsYXkgU3BpbiB0aGUgV2hlZWwKCjxpZnJhbWUKICBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCIKICBzcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL29nbHdUcWVsVW9FIgogIHRpdGxlPSJIb3cgdG8gcGxheSBzcGluIHRoZSB3aGVlbCIKICBmcmFtZUJvcmRlcj0iMCIKICBhbGxvdz0iYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZSIKICBhbGxvd0Z1bGxTY3JlZW4KPjwvaWZyYW1lPgoKPFN0ZXBzPgo8U3RlcCB0aXRsZT0iTmF2aWdhdGUgdG8gc3Rha2luZyBwbGF0Zm9ybSI+CiAgR28gdG8gW3N0YWtlLmIzLmZ1bl0oaHR0cDovL3N0YWtlLmIzLmZ1bikgYW5kIHNpZ24gaW4gdXNpbmcgeW91ciBwcmVmZXJyZWQgbG9naW4gbWV0aG9kLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQWNjZXNzIHNwaW4gdGhlIHdoZWVsIj4KICBTY3JvbGwgZG93biB0byB0aGUgc2VjdGlvbiBsYWJlbGVkICoqQnJvd3NlIEdhbWVzKiogYW5kIGNsaWNrICoqU3BpbiB0aGUgV2hlZWwqKiBpY29uLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4ODEwMDE2YzExZTdkMTQ1NDcxOTI4Yy9maWxlLVFYZU9DT2l1cXEucG5nIiBhbHQ9IlNwaW4gdGhlIFdoZWVsIG9wdGlvbiBpbiB0aGUgQnJvd3NlIEdhbWVzIHNlY3Rpb24iIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlNwaW4gdGhlIHdoZWVsIj4KICBDbGljayAqKlNwaW4gdGhlIFdoZWVsKiosIHRoZW4gY29uZmlybSB0aGUgdHJhbnNhY3Rpb24gaW4geW91ciBjb25uZWN0ZWQgd2FsbGV0LgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4ODEwMjA1ZWM3YzM3NTViNTcyNDI2Yi9maWxlLXNNZ00yTlAwTW0ucG5nIiBhbHQ9IlNwaW4gdGhlIFdoZWVsIGludGVyZmFjZSB3aXRoIHNwaW4gYnV0dG9uIiAvPgogIDwvRnJhbWU+CiAgCiAgPENoZWNrPgogICAgVGhhdCdzIGl0ISBZb3VyIHByaXplIHdpbGwgYmUgYXV0b21hdGljYWxseSBhZGRlZCB0byB5b3VyIHdhbGxldC4KICA8L0NoZWNrPgo8L1N0ZXA+CjwvU3RlcHM+CgojIyBHYW1lIFJ1bGVzCgotICoqT25lIHNwaW4gcGVyIGRheSBwZXIgd2FsbGV0KioKLSAqKkF1dG9tYXRpYyByZXdhcmRzKiogLSBubyBtYW51YWwgY2xhaW1pbmcgcmVxdWlyZWQKLSAqKk11c3QgaGF2ZSBhdCBsZWFzdCAxLDAwMCBCMyBzdGFrZWQqKiB0byBwYXJ0aWNpcGF0ZQotICoqRnJlZSB0byBwbGF5KiogLSBqdXN0IGNvbmZpcm0gdGhlIHRyYW5zYWN0aW9uCgo8VGlwPgpTcGluIHRoZSBXaGVlbCBpcyBvbmUgb2YgdGhlIHNpbXBsZXN0IHdheXMgdG8gZWFybiBib251cyByZXdhcmRzIC0ganVzdCBvbmUgY2xpY2sgcGVyIGRheSBhbmQgeW91ciBwcml6ZSBpcyBpbnN0YW50bHkgZGVsaXZlcmVkIHRvIHlvdXIgd2FsbGV0Lgo8L1RpcD4K",
    "lastUpdated": "2025-09-02T19:36:10.112Z"
  },
  {
    "sourceFile": "learn/staking-rewards/how-prize-pool-works.mdx",
    "sourceHash": "ClRoZSBXZWVrbHkgUHJpemUgUG9vbCBpcyB5b3VyIHNob3QgYXQgYmlnIHJld2FyZHMganVzdCBmb3IgYmVpbmcgYSBzdGFrZXIuIEV2ZXJ5IHdlZWssIHBsYXllcnMgZnJvbSBlYWNoIHJld2FyZCB0aWVyIC0gUm9va2llLCBHcmluZGVyLCBhbmQgV2hhbGUgLSBjYW4gZW50ZXIgdGhlIHBvb2wgZm9yIGEgY2hhbmNlIHRvIHdpbi4gWW91J2xsIG5lZWQgdG8gbWFudWFsbHkgam9pbiBiZXR3ZWVuIE1vbmRheSBhbmQgRnJpZGF5IGVhY2ggd2Vlay4gRWFjaCBGcmlkYXksIHRocmVlIGx1Y2t5IHBhcnRpY2lwYW50cyBmcm9tIGVhY2ggdGllciBhcmUgZHJhd24gYW5kIHJlY2VpdmUgcmV3YXJkcyBiYXNlZCBvbiB0aGVpciB0aWVyLgoKPFdhcm5pbmc+CioqSW1wb3J0YW50OioqIE1ha2Ugc3VyZSB0byBlbnRlciB0aGUgV2Vla2x5IFByaXplIFBvb2wgYmVmb3JlIEZyaWRheSBhdCAxOjAwIFBNIFVUQy4KPC9XYXJuaW5nPgoKIyMgSG93IHRvIEVudGVyIHRoZSBXZWVrbHkgUHJpemUgUG9vbAoKPGlmcmFtZQogIGNsYXNzTmFtZT0idy1mdWxsIGFzcGVjdC12aWRlbyByb3VuZGVkLXhsIgogIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvWEVkbEFDaEUyaTgiCiAgdGl0bGU9IkhvdyB0byBlbnRlciB0aGUgd2Vla2x5IHByaXplIHBvb2wiCiAgZnJhbWVCb3JkZXI9IjAiCiAgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiCiAgYWxsb3dGdWxsU2NyZWVuCj48L2lmcmFtZT4KCjxTdGVwcz4KPFN0ZXAgdGl0bGU9Ik5hdmlnYXRlIHRvIHN0YWtpbmcgcGxhdGZvcm0iPgogIEdvIHRvIFtzdGFrZS5iMy5mdW5dKGh0dHBzOi8vc3Rha2UuYjMuZnVuLykgYW5kIGxvZyBpbiB3aXRoIHlvdXIgcHJlZmVycmVkIGxvZ2luIG1ldGhvZC4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkFjY2VzcyBwcml6ZSBwb29sIj4KICBTY3JvbGwgZG93biBhbmQgbG9jYXRlIHRoZSB0YWIgbGFiZWxlZCAqKkJyb3dzZSBHYW1lcyoqLiBIZXJlLCB5b3UnbGwgYmUgYWJsZSB0byBzZWxlY3QgKipQcml6ZSBQb29sKiogKG9yIGFueSBvdGhlciBnYW1lIHlvdSB3YW50IHRvIHBhcnRpY2lwYXRlIGluKS4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODgwZWE3ZGMxMWU3ZDE0NTQ3MTkxZTQvZmlsZS14WHo0RmNxbW1qLnBuZyIgYWx0PSJCcm93c2UgR2FtZXMgc2VjdGlvbiB3aXRoIFByaXplIFBvb2wgb3B0aW9uIGhpZ2hsaWdodGVkIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJFbnRlciB0aGUgcG9vbCI+CiAgQ2xpY2sgKipFbnRlciBwb29sIHRvIHdpbioqIHRvIHN1Ym1pdCB5b3VyIGVudHJ5LgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4ODBlYjE3YTMwOTQ5NTQ4NmQxNTJjZC9maWxlLTN1UFptTXNhWFkucG5nIiBhbHQ9IkVudGVyIHBvb2wgdG8gd2luIGJ1dHRvbiIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQ29uZmlybSBlbnRyeSI+CiAgQ29uZmlybSB0aGUgdHJhbnNhY3Rpb24gaW4geW91ciB3YWxsZXQgYW5kIGNvbWUgYmFjayBhZ2FpbiBldmVyeSBGcmlkYXkgdG8gY2hlY2sgaWYgeW91J3ZlIHdvbi4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODgwZWI0MGEzMDk0OTU0ODZkMTUyY2YvZmlsZS1tbEtMQTltc0sxLnBuZyIgYWx0PSJUcmFuc2FjdGlvbiBjb25maXJtYXRpb24gZm9yIHByaXplIHBvb2wgZW50cnkiIC8+CiAgPC9GcmFtZT4KICAKICA8Q2hlY2s+CiAgICBZb3UncmUgbm93IGVudGVyZWQgaW4gdGhpcyB3ZWVrJ3MgcHJpemUgcG9vbCEKICA8L0NoZWNrPgo8L1N0ZXA+CjwvU3RlcHM+CgojIyBIb3cgV2lubmVycyBBcmUgU2VsZWN0ZWQKCi0gKipEcmF3aW5nIFRpbWU6KiogRXZlcnkgRnJpZGF5IGF0IDE6MDAgUE0gVVRDCi0gKipXaW5uZXJzIFBlciBUaWVyOioqIDMgd2lubmVycyBmcm9tIGVhY2ggdGllciAoUm9va2llLCBHcmluZGVyLCBXaGFsZSkKLSAqKlNlbGVjdGlvbjoqKiBSYW5kb20gZHJhd2luZyBmcm9tIGFsbCBlbGlnaWJsZSBlbnRyaWVzCi0gKipFbnRyeSBQZXJpb2Q6KiogTW9uZGF5IHRocm91Z2ggRnJpZGF5IGJlZm9yZSAxOjAwIFBNIFVUQwoKIyMgQ2xhaW1pbmcgWW91ciBQcml6ZQoKT25jZSB0aGUgcmFmZmxlIGlzIGRyYXduLCB5b3UgY2FuIHJldHVybiB0byB0aGUgcHJpemUgcG9vbCBwYWdlIHRvIHNlZSBpZiB5b3UndmUgd29uLiBJZiBzZWxlY3RlZCwgeW91IGhhdmUgdHdvIG9wdGlvbnM6CgoxLiAqKkNsYWltIGltbWVkaWF0ZWx5Kiogd2l0aCBhIDEwJSBmZWUgZGVkdWN0ZWQgKDUlIHRvIHRoZSBwcm90b2NvbCwgNSUgdG8gdGhlIG5leHQgamFja3BvdCkKMi4gKipTdGFrZSB5b3VyIHdpbm5pbmdzKiogd2l0aCBubyBmZWUgYXQgYWxsCgo8VGlwPgpTdGFraW5nIHlvdXIgd2lubmluZ3MgaXMgdGhlIGJlc3Qgb3B0aW9uIGFzIHlvdSBhdm9pZCBmZWVzIGFuZCBjb250aW51ZSBlYXJuaW5nIHJld2FyZHMgb24geW91ciBwcml6ZSEKPC9UaXA+Cgo8Tm90ZT4KUmVtZW1iZXIgdG8gZW50ZXIgZWFjaCB3ZWVrIG1hbnVhbGx5IC0gZW50cmllcyBkb24ndCBjYXJyeSBvdmVyIHRvIHRoZSBmb2xsb3dpbmcgd2Vlay4KPC9Ob3RlPgo=",
    "lastUpdated": "2025-09-02T19:36:10.116Z"
  },
  {
    "sourceFile": "learn/staking-rewards/how-daily-slots-work.mdx",
    "sourceHash": "CkRhaWx5IFNsb3RzIGlzIGEgcXVpY2sgYW5kIGVhc3kgd2F5IHRvIHRyeSB5b3VyIGx1Y2sgZm9yIGZyZWUgcmV3YXJkcyBldmVyeSBkYXkuIEp1c3QgbG9nIGluLCBwdWxsIHRoZSBsZXZlciwgYW5kIGxldCB0aGUgcmVlbHMgZGVjaWRlLiBBbnkgdG9rZW5zIHlvdSB3aW4gYXJlIHNlbnQgZGlyZWN0bHkgdG8geW91ciB3YWxsZXQgd2l0aCBubyBuZWVkIHRvIGNsYWltLgoKIyMgSG93IHRvIFBsYXkgRGFpbHkgU2xvdHMKCjxpZnJhbWUKICBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCIKICBzcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL29xYUlXLWt1ekhnIgogIHRpdGxlPSJIb3cgdG8gcGxheSBkYWlseSBzbG90cyIKICBmcmFtZUJvcmRlcj0iMCIKICBhbGxvdz0iYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZSIKICBhbGxvd0Z1bGxTY3JlZW4KPjwvaWZyYW1lPgoKPFN0ZXBzPgo8U3RlcCB0aXRsZT0iTmF2aWdhdGUgdG8gc3Rha2luZyBwbGF0Zm9ybSI+CiAgR28gdG8gW3N0YWtlLmIzLmZ1bl0oaHR0cDovL3N0YWtlLmIzLmZ1bikgYW5kIHNpZ24gaW4gdXNpbmcgeW91ciBwcmVmZXJyZWQgbG9naW4gbWV0aG9kLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQWNjZXNzIGRhaWx5IHNsb3RzIj4KICBDbGljayB0aGUgKipGcmVlIFNsb3RzISoqIGljb24gb24gdGhlIG1haW4gcGFnZS4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODgxMDVhMmEzMDk0OTU0ODZkMTUzYzcvZmlsZS1ZUm1zUFQ3SVR4LnBuZyIgYWx0PSJGcmVlIFNsb3RzIGljb24gb24gdGhlIHN0YWtpbmcgZGFzaGJvYXJkIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJQdWxsIHRoZSBsZXZlciI+CiAgT24gdGhlIGRhaWx5IHNsb3RzIHBhZ2UsIGNsaWNrICoqUHVsbCB0aGUgbGV2ZXIuKioKICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODgxMDYwM2IyOGVjZjE2NjM5YzhkMTgvZmlsZS0wWENucmM2dFpILnBuZyIgYWx0PSJQdWxsIHRoZSBsZXZlciBidXR0b24gb24gdGhlIHNsb3RzIGludGVyZmFjZSIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQ29uZmlybSB0cmFuc2FjdGlvbiI+CiAgQ29uZmlybSB0aGUgdHJhbnNhY3Rpb24gaW4geW91ciBjb25uZWN0ZWQgd2FsbGV0IHRvIGNvbXBsZXRlIHlvdXIgc3Bpbi4KICAKICA8Q2hlY2s+CiAgICBZb3VyIHJld2FyZCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgc2VudCB0byB5b3VyIHdhbGxldCEKICA8L0NoZWNrPgo8L1N0ZXA+CjwvU3RlcHM+CgojIyBHYW1lIFJ1bGVzCgotICoqT25lIHBsYXkgcGVyIGRheSBwZXIgd2FsbGV0KioKLSAqKk5vIGNsYWltaW5nIHJlcXVpcmVkKiogLSByZXdhcmRzIGFyZSBzZW50IGRpcmVjdGx5IHRvIHlvdXIgd2FsbGV0Ci0gKipNdXN0IGhhdmUgYXQgbGVhc3QgMSwwMDAgQjMgc3Rha2VkKiogdG8gYmUgZWxpZ2libGUKLSAqKkNvbXBsZXRlbHkgZnJlZSoqIC0gbm8gYWRkaXRpb25hbCBjb3N0cwoKPEluZm8+CkRhaWx5IFNsb3RzIGlzIGRlc2lnbmVkIHRvIGJlIHF1aWNrIGFuZCBmdW4gLSBqdXN0IG9uZSBjbGljayBwZXIgZGF5IGZvciBhIGNoYW5jZSBhdCBib251cyBCMyByZXdhcmRzIQo8L0luZm8+Cg==",
    "lastUpdated": "2025-09-02T19:36:10.118Z"
  },
  {
    "sourceFile": "learn/games-experiences/how-to-start-a-wager-on-basement.mdx",
    "sourceHash": "CldhZ2VycyBvbiBCYXNlbWVudCBsZXQgeW91IGJldCB0b2tlbnMgb24geW91ciBza2lsbHMsIHdoZXRoZXIgeW91J3JlIGNoYWxsZW5naW5nIGEgZnJpZW5kIG9yIG9wZW5pbmcgaXQgdXAgZm9yIGFueW9uZSB0byBqb2luLiBJdCdzIGEgZnVuIHdheSB0byBhZGQgc3Rha2VzIHRvIHlvdXIgbWF0Y2hlcyBhbmQgcHJvdmUgd2hvJ3MgcmVhbGx5IG9uIHRvcC4gSGVyZSdzIGhvdyB0byBzdGFydCBhIHdhZ2VyIGFuZCBpbnZpdGUgb3RoZXJzIHRvIHBsYXkgZm9yIHJld2FyZHMuCgojIyBIb3cgdG8gU3RhcnQgYSBXYWdlcgoKPGlmcmFtZQogIGNsYXNzTmFtZT0idy1mdWxsIGFzcGVjdC12aWRlbyByb3VuZGVkLXhsIgogIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvQmI1Vm1hRXh6eDQiCiAgdGl0bGU9IkhvdyB0byBzdGFydCBhIHdhZ2VyIG9uIEJhc2VtZW50IgogIGZyYW1lQm9yZGVyPSIwIgogIGFsbG93PSJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIgogIGFsbG93RnVsbFNjcmVlbgo+PC9pZnJhbWU+Cgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJTZWxlY3QgYSBnYW1lIj4KICBDbGljayBhbnkgZ2FtZSBvbiBbYmFzZW1lbnQuZnVuXShodHRwczovL2Jhc2VtZW50LmZ1bikuCjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJBY2Nlc3Mgd2FnZXIgb3B0aW9ucyI+CiAgQ2xpY2sgdGhlIHN3b3JkIGljb24gYXQgdGhlIHRvcCBvZiB0aGUgZ2FtZSBkZXRhaWxzIHBhZ2UuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MjRjZjc4ZTVkYTk0ODFlZDRiMjYxL2ZpbGUtTHQzWmh0YXZGby5wbmciIGFsdD0iU3dvcmQgaWNvbiBmb3IgY3JlYXRpbmcgd2FnZXIgY2hhbGxlbmdlcyBvbiBnYW1lIGRldGFpbHMgcGFnZSIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQ2hvb3NlIGNoYWxsZW5nZSB0eXBlIj4KICBDaG9vc2UgaG93IHlvdSB3YW50IHRvIHN0YXJ0IHlvdXIgY2hhbGxlbmdlOgogIC0gKipDaGFsbGVuZ2UgYSBmcmllbmQqKgogIC0gKipDcmVhdGUgYW4gb3BlbiBjaGFsbGVuZ2UqKiBmb3IgYW55b25lIHRvIGpvaW4KICAKICBJbiB0aGlzIGd1aWRlLCB3ZSdsbCBjcmVhdGUgYSBmcmllbmQgY2hhbGxlbmdlIGJ5IHNlbGVjdGluZyAqKkNoYWxsZW5nZSBGcmllbmRzKiouCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MjRlN2U0M2RjMTE3NDQwMjk1NjIzL2ZpbGUtSEJURnJXeEpUdS5wbmciIGFsdD0iQ2hhbGxlbmdlIHR5cGUgc2VsZWN0aW9uIGJldHdlZW4gZnJpZW5kcyBhbmQgb3BlbiBjaGFsbGVuZ2VzIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJTZWxlY3QgeW91ciBvcHBvbmVudCI+CiAgRW50ZXIgeW91ciBmcmllbmQncyBuYW1lIGluIHRoZSBzZWFyY2ggZmllbGQgYW5kIHNlbGVjdCB0aGVpciBuYW1lIGZyb20gdGhlIGxpc3QuIENsaWNrICoqTmV4dCoqLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4ODI0ZjcxM2Q3ZTEyMDk5NzJlZDliOS9maWxlLXBzQXRNSFdQS3IucG5nIiBhbHQ9IkZyaWVuZCBzZWFyY2ggYW5kIHNlbGVjdGlvbiBpbnRlcmZhY2UiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlNldCB3YWdlciBwYXJhbWV0ZXJzIj4KICBTZWxlY3QgdGhlIGFtb3VudCB5b3Ugd291bGQgbGlrZSB0byB3YWdlciBhbmQgdGhlIGR1cmF0aW9uIG9mIHRoZSB3YWdlciBjaGFsbGVuZ2UuIFlvdSBtYXkgYWxzbyBlbnRlciBhIGN1c3RvbSBhbW91bnQuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MjRmYzYwMzkzZWEzOTY2M2NlZjM2L2ZpbGUtVWd0SnV1RENqbC5wbmciIGFsdD0iV2FnZXIgYW1vdW50IGFuZCBkdXJhdGlvbiBzZWxlY3Rpb24gaW50ZXJmYWNlIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJGdW5kIHlvdXIgd2FnZXIiPgogIEZ1bmQgeW91ciB3YWdlciBjaGFsbGVuZ2UgYnkgZGVwb3NpdGluZyBmdW5kcy4gU2ltcGx5IGNsaWNrICoqRGVwb3NpdCBCZXQqKiBhbmQgY29uZmlybSB0aGUgdHJhbnNhY3Rpb24gaW4geW91ciB3YWxsZXQuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MjUwYzk4ZTVkYTk0ODFlZDRiMjlmL2ZpbGUtck5NVDBFbTg0TC5wbmciIGFsdD0iRGVwb3NpdCBCZXQgYnV0dG9uIGZvciBmdW5kaW5nIHRoZSB3YWdlciIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iU2hhcmUgY2hhbGxlbmdlIGxpbmsiPgogIE9uY2UgeW91ciB3YWdlciBjaGFsbGVuZ2UgaGFzIGJlZW4gZnVuZGVkLCB5b3Ugd2lsbCBiZSBwcm92aWRlZCB3aXRoIGEgbGluayB0byBzaGFyZSB3aXRoIHlvdXIgb3Bwb25lbnQuIENsaWNrICoqQ29weSoqIHRvIGNvcHkgdGhlIGxpbmsgZm9yIHNoYXJpbmcuIFlvdXIgZnJpZW5kL29wcG9uZW50IHdpbGwgbmVlZCB0byBvcGVuIHRoZSBsaW5rLCBjb25maXJtIHRoZWlyIHN0YWtlLCBhbmQgam9pbiB0aGUgd2FnZXIgY2hhbGxlbmdlLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4ODI1MTZlMzM3ZGIwN2FhOTYxZDg3OC9maWxlLXdVcUxCbW45V0wucG5nIiBhbHQ9IlNoYXJlIGxpbmsgaW50ZXJmYWNlIHdpdGggY29weSBidXR0b24gZm9yIHdhZ2VyIGNoYWxsZW5nZSIgLz4KICA8L0ZyYW1lPgogIAogIDxDaGVjaz4KICAgIE9uY2UgYm90aCBwbGF5ZXJzIGhhdmUgZnVuZGVkIHRoZSBiZXQsIHlvdSBjYW4gc3RhcnQgcGxheWluZy4gQ29tcGV0ZSBhbmQgbGV0IHRoZSBiZXN0IHBsYXllciB3aW4hIFRoZSBwcml6ZSBwb29sIGdvZXMgdG8gdGhlIHdpbm5lciBvbmNlIHRoZSBjaGFsbGVuZ2UgaXMgY29tcGxldGUuCiAgPC9DaGVjaz4KPC9TdGVwPgo8L1N0ZXBzPgoKIyMgV2FnZXIgVHlwZXMKCiMjIyBGcmllbmQgQ2hhbGxlbmdlcwotIENoYWxsZW5nZSBzcGVjaWZpYyBwbGF5ZXJzIGJ5IHVzZXJuYW1lCi0gUHJpdmF0ZSBtYXRjaGVzIGJldHdlZW4ga25vd24gb3Bwb25lbnRzCi0gQ3VzdG9taXphYmxlIHN0YWtlcyBhbmQgZHVyYXRpb24KCiMjIyBPcGVuIENoYWxsZW5nZXMgIAotIENyZWF0ZSBwdWJsaWMgd2FnZXJzIGZvciBhbnlvbmUgdG8gam9pbgotIEZpcnN0LWNvbWUsIGZpcnN0LXNlcnZlZCBiYXNpcwotIEdyZWF0IGZvciBmaW5kaW5nIG5ldyBvcHBvbmVudHMKCjxJbmZvPgpCb3RoIHBsYXllcnMgbXVzdCBmdW5kIHRoZWlyIHBvcnRpb24gb2YgdGhlIHdhZ2VyIGJlZm9yZSB0aGUgbWF0Y2ggY2FuIGJlZ2luLiBUaGUgdG90YWwgcHJpemUgcG9vbCBnb2VzIHRvIHRoZSB3aW5uZXIgdXBvbiBjb21wbGV0aW9uLgo8L0luZm8+Cgo8VGlwPgpTdGFydCB3aXRoIHNtYWxsZXIgd2FnZXIgYW1vdW50cyB3aGVuIHBsYXlpbmcgd2l0aCBuZXcgb3Bwb25lbnRzIHRvIHRlc3QgdGhlIHdhdGVycyBiZWZvcmUgY29tbWl0dGluZyB0byBsYXJnZXIgc3Rha2VzLgo8L1RpcD4K",
    "lastUpdated": "2025-09-02T19:36:10.121Z"
  },
  {
    "sourceFile": "learn/games-experiences/how-to-join-a-tournament-on-basement.mdx",
    "sourceHash": "ClRvdXJuYW1lbnRzIG9uIEJhc2VtZW50IGFyZSB5b3VyIGNoYW5jZSB0byBjb21wZXRlIGZvciBwcml6ZXMsIGNsaW1iIHRoZSBsZWFkZXJib2FyZCwgYW5kIHRlc3QgeW91ciBza2lsbHMgYWdhaW5zdCBvdGhlciBwbGF5ZXJzLiBXaGV0aGVyIHlvdSdyZSBwbGF5aW5nIGZvciBmdW4gb3IgZ29pbmcgZm9yIHRoZSB0b3Agc3BvdCwgam9pbmluZyBhIHRvdXJuYW1lbnQgaXMgcXVpY2sgYW5kIGVhc3kuIEhlcmUncyBob3cgdG8gZ2V0IHN0YXJ0ZWQuCgojIyBIb3cgdG8gSm9pbiBhIFRvdXJuYW1lbnQKCjxTdGVwcz4KPFN0ZXAgdGl0bGU9IkxvZyBpbnRvIEJhc2VtZW50Ij4KICBHbyB0byBbKipiYXNlbWVudC5mdW4qKl0oaHR0cHM6Ly9iYXNlbWVudC5mdW4pLCBjbGljayAqKkpvaW4gdGhlIGZ1bioqIGFuZCBsb2cgaW4gdXNpbmcgeW91ciBwcmVmZXJyZWQgbWV0aG9kLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iTmF2aWdhdGUgdG8gY29tcGV0aXRpb25zIj4KICBPbiB0aGUgbGVmdCBzaWRlIG9mIHRoZSBwYWdlLCBjbGljayB0aGUgKipUcm9waHkgaWNvbioqIGxhYmVsZWQgKipDb21wZXRlKiouCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MjIzZWE1MmRjNTIyYmI4ZGI1ODI5L2ZpbGUtRmlyVDVzdk5IMC5wbmciIGFsdD0iQ29tcGV0ZSBzZWN0aW9uIHdpdGggdHJvcGh5IGljb24gaGlnaGxpZ2h0ZWQgaW4gc2lkZWJhciIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQWNjZXNzIHRvdXJuYW1lbnRzIj4KICBPbiB0aGUgVG91cm5hbWVudCBwYWdlLCBjbGljayAqKlRvdXJuYW1lbnRzLioqCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MjI0MGNiMjU5YjIwZGFmMGQ4NDYxL2ZpbGUtZ1I1c1BDMXJ2Vy5wbmciIGFsdD0iVG91cm5hbWVudHMgYnV0dG9uIG9uIHRoZSBjb21wZXRpdGlvbiBwYWdlIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJCcm93c2UgbGl2ZSB0b3VybmFtZW50cyI+CiAgU2VsZWN0ICoqTGl2ZSBUb3VybmFtZW50cyoqIHRvIHZpZXcgb25nb2luZyBjb21wZXRpdGlvbnMuIEJyb3dzZSB0aGUgbGlzdCBvZiBhY3RpdmUgdG91cm5hbWVudHMgYW5kIHNlbGVjdCB0aGUgb25lIHlvdSB3YW50IHRvIGpvaW4uIENsaWNrICoqSm9pbiBUb3VybmFtZW50KiogdG8gb3BlbiB0aGUgdG91cm5hbWVudCBkZXRhaWxzIHBhZ2UuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MjI1YWM5MjczZGQ1ZTM1YzQ0ZmVhL2ZpbGUtODkwektrbG1MNC5wbmciIGFsdD0iTGl2ZSB0b3VybmFtZW50cyBsaXN0IHdpdGggYXZhaWxhYmxlIGNvbXBldGl0aW9ucyIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iUmV2aWV3IGFuZCBqb2luIj4KICBIZXJlIHlvdSBjYW4gcmV2aWV3IHRoZSAqKnJ1bGVzLCBwcml6ZSBwb29sLCBsZWFkZXJib2FyZCwgYW5kIHRpbWUgcmVtYWluaW5nLioqIFlvdSBjYW4gYWxzbyBjaGF0IHdpdGggb3RoZXIgcGxheWVycyBpbiAqKkxpdmUgQ2hhdC4qKiBJZiB5b3UncmUgcmVhZHkgdG8gY29tcGV0ZSwgY2xpY2sgKipKb2luIFRvdXJuYW1lbnQqKiBhZ2FpbiB0byBjb25maXJtIHlvdXIgZW50cnkuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MjI1Zjk4NWY3NTA2NjU0NWQ0YjE4L2ZpbGUtYVJqQUh4bHIxay5wbmciIGFsdD0iVG91cm5hbWVudCBkZXRhaWxzIHBhZ2Ugc2hvd2luZyBydWxlcywgcHJpemVzLCBhbmQgbGVhZGVyYm9hcmQiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvbmZpcm0gYW5kIHN0YXJ0IHBsYXlpbmciPgogIENvbmZpcm0gdGhlIHRyYW5zYWN0aW9uIGluIHlvdXIgY29ubmVjdGVkIHdhbGxldCB0byBjb21wbGV0ZSB5b3VyIHJlZ2lzdHJhdGlvbi4KICAKICBPbmNlIGNvbmZpcm1lZCwgY2xpY2sgKipQbGF5IE5vdyoqIHRvIHN0YXJ0IHlvdXIgbWF0Y2hlcyBhbmQgY2xpbWIgdGhlIGxlYWRlcmJvYXJkLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4ODIyNjUxOTI3M2RkNWUzNWM0NGZlZC9maWxlLVUyQ0pNZHo2c0wucG5nIiBhbHQ9IlBsYXkgTm93IGJ1dHRvbiBhZnRlciBzdWNjZXNzZnVsIHRvdXJuYW1lbnQgcmVnaXN0cmF0aW9uIiAvPgogIDwvRnJhbWU+CiAgCiAgPENoZWNrPgogICAgWW91J3JlIGluLiBHb29kIGx1Y2sgYW5kIGhhdmUgZnVuIGNvbXBldGluZyEKICA8L0NoZWNrPgo8L1N0ZXA+CjwvU3RlcHM+CgojIyBUb3VybmFtZW50IEZlYXR1cmVzCgotICoqUmVhbC10aW1lIGxlYWRlcmJvYXJkcyoqIHRvIHRyYWNrIHlvdXIgcHJvZ3Jlc3MKLSAqKkxpdmUgY2hhdCoqIHRvIGNvbm5lY3Qgd2l0aCBvdGhlciBjb21wZXRpdG9ycyAgCi0gKipDbGVhciBydWxlcyBhbmQgcHJpemUgc3RydWN0dXJlcyoqIGZvciBlYWNoIHRvdXJuYW1lbnQKLSAqKkltbWVkaWF0ZSBlbnRyeSoqIG9uY2UgcGF5bWVudCBpcyBjb25maXJtZWQKCjxUaXA+CkNoZWNrIHRoZSB0b3VybmFtZW50IHJ1bGVzIGFuZCBwcml6ZSBzdHJ1Y3R1cmUgYmVmb3JlIGpvaW5pbmcgdG8gdW5kZXJzdGFuZCB0aGUgY29tcGV0aXRpb24gZm9ybWF0IGFuZCB3aGF0IHlvdSdyZSBwbGF5aW5nIGZvci4KPC9UaXA+Cg==",
    "lastUpdated": "2025-09-02T19:36:10.124Z"
  },
  {
    "sourceFile": "learn/getting-started/how-to-link-additional-social-accounts.mdx",
    "sourceHash": "CkxpbmtpbmcgZXh0cmEgYWNjb3VudHMgdG8geW91ciBCMyBwcm9maWxlIGhlbHBzIGtlZXAgeW91ciBpZGVudGl0eSBjb25zaXN0ZW50IGFjcm9zcyB0aGUgZW50aXJlIEIzIGVjb3N5c3RlbS4gV2hldGhlciB5b3Ugb3JpZ2luYWxseSBzaWduZWQgdXAgd2l0aCBhIHdhbGxldCwgZW1haWwsIG9yIHNvY2lhbCBhY2NvdW50LCB5b3UgY2FuIGNvbm5lY3QgbW9yZSBvcHRpb25zIGFueXRpbWUuIFRoaXMgaW5jbHVkZXMgYWNjb3VudHMgbGlrZSBHbWFpbCwgVHdpdHRlciwgQXBwbGUsIHBob25lIG51bWJlciwgRGlzY29yZCwgVGVsZWdyYW0sIGFuZCBtb3JlLgoKVGhpcyBndWlkZSB3aWxsIHdhbGsgeW91IHRocm91Z2ggaG93IHRvIGxpbmsgYWRkaXRpb25hbCBhY2NvdW50cyBkaXJlY3RseSBmcm9tIGJhc2VtZW50LmZ1bi4KCiMjIEhvdyB0byBMaW5rIEFkZGl0aW9uYWwgQWNjb3VudHMKCjxpZnJhbWUKICBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCIKICBzcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL2hjOWp4SDk0SW1VIgogIHRpdGxlPSJIb3cgdG8gbGluayBhZGRpdGlvbmFsIHNvY2lhbCBhY2NvdW50cyIKICBmcmFtZUJvcmRlcj0iMCIKICBhbGxvdz0iYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZSIKICBhbGxvd0Z1bGxTY3JlZW4KPjwvaWZyYW1lPgoKPFN0ZXBzPgo8U3RlcCB0aXRsZT0iT3BlbiB5b3VyIHByb2ZpbGUgbWVudSI+CiAgQ2xpY2sgeW91ciBwcm9maWxlIGljb24gb24gYmFzZW1lbnQuZnVuIHRvIG9wZW4geW91ciBhY2NvdW50IG1lbnUuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3OGVmMzc1MjcyNGQzYzU0ZGU5MDZlL2ZpbGUta3ZwaGZvUjdqMi5wbmciIGFsdD0iUHJvZmlsZSBpY29uIGhpZ2hsaWdodGVkIG9uIGJhc2VtZW50LmZ1biBpbnRlcmZhY2UiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9Ik5hdmlnYXRlIHRvIEFjY291bnRzIHRhYiI+CiAgTmF2aWdhdGUgdG8gdGhlICoqQWNjb3VudHMqKiB0YWIuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3OTAxNTI1MjcyNGQzYzU0ZGU5MGNkL2ZpbGUtQmYzZTFEVE80Yy5wbmciIGFsdD0iQWNjb3VudHMgdGFiIGluIHByb2ZpbGUgbWVudSIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iU3RhcnQgbGlua2luZyBwcm9jZXNzIj4KICBDbGljayAqKkxpbmsgYW5vdGhlciBhY2NvdW50LioqCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3OTAxYTc1MjJmNDUxMzYxZTdmOWI3L2ZpbGUtWmFGWjJ0d3hCWC5wbmciIGFsdD0iTGluayBhbm90aGVyIGFjY291bnQgYnV0dG9uIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJDaG9vc2UgYW5kIGF1dGhvcml6ZSBhY2NvdW50Ij4KICBDaG9vc2UgdGhlIGFjY291bnQgdHlwZSB5b3Ugd2FudCB0byBsaW5rIC0gZm9yIGV4YW1wbGUgWCAoVHdpdHRlcikgLSBhbmQgZm9sbG93IHRoZSBwcm9tcHRzIHRvIGF1dGhvcml6ZSB0aGUgY29ubmVjdGlvbi4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODc5MDVkYjM5OTFhNzAyMTE1MzBiNjkvZmlsZS1mNTYyTHRLa0E0LnBuZyIgYWx0PSJBY2NvdW50IGxpbmtpbmcgb3B0aW9ucyBpbmNsdWRpbmcgc29jaWFsIG1lZGlhIHBsYXRmb3JtcyIgLz4KICA8L0ZyYW1lPgogIAogIDxDaGVjaz4KICAgIE9uY2UgbGlua2VkIHlvdXIgYWNjb3VudCB3aWxsIHNob3cgdXAgdW5kZXIgdGhlIEFjY291bnRzIHRhYi4gWW91IGNhbiByZXBlYXQgdGhpcyBwcm9jZXNzIHRvIGNvbm5lY3QgYXMgbWFueSBwbGF0Zm9ybXMgYXMgeW91J2QgbGlrZS4KICA8L0NoZWNrPgo8L1N0ZXA+CjwvU3RlcHM+Cgo8Tm90ZT4KVGhlIGxpbmtlZCBhY2NvdW50cyB3aWxsIGFwcGVhciBpbiB5b3VyIEFjY291bnRzIHRhYiwgZ2l2aW5nIHlvdSBtdWx0aXBsZSB3YXlzIHRvIGFjY2VzcyB5b3VyIEIzIHByb2ZpbGUgYW5kIG1haW50YWluIGEgY29uc2lzdGVudCBpZGVudGl0eSBhY3Jvc3MgYWxsIEIzIHBsYXRmb3Jtcy4KPC9Ob3RlPgo=",
    "lastUpdated": "2025-09-02T19:36:10.127Z"
  },
  {
    "sourceFile": "learn/getting-started/how-to-export-your-embedded-wallet.mdx",
    "sourceHash": "CldhbnQgdG8gdXNlIHlvdXIgQlNNTlQgd2FsbGV0IGluIG90aGVyIGFwcHMgbGlrZSBSYWluYm93IG9yIE1ldGFNYXNrPyBFeHBvcnRpbmcgeW91ciBlbWJlZGRlZCB3YWxsZXQgZ2l2ZXMgeW91IGZ1bGwgY29udHJvbCBieSBsZXR0aW5nIHlvdSBjb3B5IHlvdXIgKipzZWNyZXQgcmVjb3ZlcnkgcGhyYXNlKiogb3IgKipwcml2YXRlIGtleSoqLCBzbyB5b3UgY2FuIGltcG9ydCBpdCBpbnRvIGFueSBzdXBwb3J0ZWQgd2FsbGV0LgoKPFdhcm5pbmc+CioqSW1wb3J0YW50OioqIE5ldmVyIHNoYXJlIHlvdXIgcHJpdmF0ZSBrZXkgb3IgcmVjb3ZlcnkgcGhyYXNlIHdpdGggYW55b25lLiBBbnlvbmUgd2l0aCBhY2Nlc3MgdG8gaXQgY2FuIHRha2UgeW91ciBmdW5kcy4KPC9XYXJuaW5nPgoKIyMgU3RlcHMgdG8gRXhwb3J0IFlvdXIgRW1iZWRkZWQgV2FsbGV0Cgo8aWZyYW1lCiAgY2xhc3NOYW1lPSJ3LWZ1bGwgYXNwZWN0LXZpZGVvIHJvdW5kZWQteGwiCiAgc3JjPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9IQkVibkpOQlhXOCIKICB0aXRsZT0iSG93IHRvIGV4cG9ydCB5b3VyIGVtYmVkZGVkIHdhbGxldCIKICBmcmFtZUJvcmRlcj0iMCIKICBhbGxvdz0iYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZSIKICBhbGxvd0Z1bGxTY3JlZW4KPjwvaWZyYW1lPgoKPFN0ZXBzPgo8U3RlcCB0aXRsZT0iTG9nIGludG8gQmFzZW1lbnQiPgogIExvZyBpbnRvIFsqKkJhc2VtZW50LmZ1bioqXShodHRwczovL2Jhc2VtZW50LmZ1bikgdXNpbmcgeW91ciBwcmVmZXJyZWQgbG9naW4gbWV0aG9kLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQWNjZXNzIHByb2ZpbGUgbWVudSI+CiAgQ2xpY2sgdGhlICoqcHJvZmlsZSBpY29uKiogaW4gdGhlIHRvcCByaWdodCBjb3JuZXIgb2YgdGhlIHBhZ2UuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MzUxODI4ZTVkYTk0ODFlZDRiNzRlL2ZpbGUtYUlKMUZVR1gzUy5wbmciIGFsdD0iUHJvZmlsZSBpY29uIGluIHRvcCByaWdodCBjb3JuZXIiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9Ik5hdmlnYXRlIHRvIEFjY291bnRzIHRhYiI+CiAgR28gdG8gdGhlICoqQWNjb3VudHMqKiB0YWIgYW5kIGNsaWNrICoqRXhwb3J0KiogbmV4dCB0byB5b3VyIHdhbGxldCBhZGRyZXNzLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4ODM1MjUzOGU1ZGE5NDgxZWQ0Yjc1My9maWxlLWd1NW5lQXFLWWMucG5nIiBhbHQ9IkFjY291bnRzIHRhYiB3aXRoIEV4cG9ydCBidXR0b24gaGlnaGxpZ2h0ZWQiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvcHkgeW91ciBjcmVkZW50aWFscyI+CiAgQ2xpY2sgKipDb3B5KiogdG8gY29weSBlaXRoZXIgeW91ciAqKnNlY3JldCByZWNvdmVyeSBwaHJhc2UqKiBvciAqKnByaXZhdGUga2V5KiogdG8geW91ciBjbGlwYm9hcmQuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg4MzUzMmIyZmZhYzgzODljY2UzMjg2L2ZpbGUtWk1JdW9kdUt5My5wbmciIGFsdD0iRXhwb3J0IHdhbGxldCBkaWFsb2cgd2l0aCBjb3B5IG9wdGlvbnMiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkltcG9ydCB0byB5b3VyIHByZWZlcnJlZCB3YWxsZXQiPgogIFBhc3RlIGl0IGludG8geW91ciBwcmVmZXJyZWQgd2FsbGV0IGFwcCB0byBpbXBvcnQgeW91ciB3YWxsZXQuCiAgCiAgPENoZWNrPgogICAgWW91ciBCU01OVCB3YWxsZXQgaXMgbm93IGFjY2Vzc2libGUgaW4geW91ciBleHRlcm5hbCB3YWxsZXQgYXBwIHdoaWxlIG1haW50YWluaW5nIGZ1bGwgY29tcGF0aWJpbGl0eSB3aXRoIHRoZSBCMyBlY29zeXN0ZW0uCiAgPC9DaGVjaz4KPC9TdGVwPgo8L1N0ZXBzPgoKPEluZm8+CllvdXIgZXhwb3J0ZWQgd2FsbGV0IGNyZWRlbnRpYWxzIGdpdmUgeW91IGNvbXBsZXRlIGNvbnRyb2wgb3ZlciB5b3VyIGZ1bmRzIGFuZCBhbGxvdyB5b3UgdG8gdXNlIHRoZSBzYW1lIHdhbGxldCBhY3Jvc3MgbXVsdGlwbGUgYXBwbGljYXRpb25zIGFuZCBwbGF0Zm9ybXMuCjwvSW5mbz4K",
    "lastUpdated": "2025-09-02T19:36:10.130Z"
  },
  {
    "sourceFile": "learn/getting-started/how-to-customize-your-basement-profile.mdx",
    "sourceHash": "CllvdXIgQmFzZW1lbnQgcHJvZmlsZSBpcyB5b3VyIGRpZ2l0YWwgaWRlbnRpdHkgYWNyb3NzIHRoZSBlY29zeXN0ZW0uIFlvdSBjYW4gY3VzdG9taXplIHlvdXIgYXZhdGFyLCBjaG9vc2UgYSB1bmlxdWUgbmFtZSwgYW5kIGRpc3BsYXkgYSBiYWRnZSB0aGF0IHJlcHJlc2VudHMgeW91ciBzdHlsZS4gV2hldGhlciB5b3UncmUgc2V0dGluZyB0aGluZ3MgdXAgZm9yIHRoZSBmaXJzdCB0aW1lIG9yIHVwZGF0aW5nIHlvdXIgbG9vayBsYXRlciwgcGVyc29uYWxpemluZyB5b3VyIHByb2ZpbGUgaGVscHMgeW91IHN0YW5kIG91dCBhbmQgZmVlbCBtb3JlIGNvbm5lY3RlZC4KCiMjIEN1c3RvbWl6aW5nIFlvdXIgUHJvZmlsZSBmb3IgdGhlIEZpcnN0IFRpbWUKCjxpZnJhbWUKICBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCIKICBzcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL0kwaGxaSHBlTmFBIgogIHRpdGxlPSJIb3cgdG8gY3VzdG9taXplIHlvdXIgcHJvZmlsZSBmb3IgdGhlIGZpcnN0IHRpbWUiCiAgZnJhbWVCb3JkZXI9IjAiCiAgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiCiAgYWxsb3dGdWxsU2NyZWVuCj48L2lmcmFtZT4KCjxTdGVwcz4KPFN0ZXAgdGl0bGU9Ik9wZW4gdGhlIGFjY291bnQgbWVudSI+CiAgQ2xpY2sgeW91ciBhdmF0YXIgaW4gdGhlIHRvcCByaWdodCBjb3JuZXIgdG8gb3BlbiB0aGUgYWNjb3VudCBtZW51LgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4NzhlYjg1NTIyZjQ1MTM2MWU3Zjk1NC9maWxlLXRHNXROMUdOVFQucG5nIiBhbHQ9IlVzZXIgYXZhdGFyIGluIHRvcCByaWdodCBjb3JuZXIgb2YgaW50ZXJmYWNlIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJSZWdpc3RlciB5b3VyIG5hbWUiPgogIEVudGVyIHlvdXIgZGVzaXJlZCBuYW1lLCBhbmQgdGhlbiBjbGljayAqKlJlZ2lzdGVyKiouCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3OGVjMWExM2Q5NTA0MDVlZmY2ZTg3L2ZpbGUtV1BsQUI1SUM4ay5wbmciIGFsdD0iTmFtZSByZWdpc3RyYXRpb24gZGlhbG9nIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJDdXN0b21pemUgeW91ciBhdmF0YXIiPgogIE5leHQsIHlvdSdsbCBiZSBndWlkZWQgdGhyb3VnaCBjdXN0b21pemluZyB5b3VyIGF2YXRhci4gVGhpcyBpcyB5b3VyIGNoYW5jZSB0byBtYWtlIGl0IHRydWx5IHlvdXJzIGJ5IGNob29zaW5nIGEgZ2VuZGVyLCBhZGp1c3RpbmcgcGh5c2ljYWwgZmVhdHVyZXMsIGFuZCBwaWNraW5nIHRoZSBvdXRmaXQgdGhhdCBiZXN0IGZpdHMgeW91ciBzdHlsZS4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODc4ZWQ4NTUyNzI0ZDNjNTRkZTkwNjIvZmlsZS1RNk0wTFFqVmR1LnBuZyIgYWx0PSJBdmF0YXIgY3VzdG9taXphdGlvbiBpbnRlcmZhY2Ugc2hvd2luZyB2YXJpb3VzIG9wdGlvbnMiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlNhdmUgeW91ciBhdmF0YXIiPgogIE9uY2UgeW91J3JlIGhhcHB5IHdpdGggeW91ciBhdmF0YXIsIGNsaWNrICoqTmV4dCoqIHRvIHNhdmUgeW91ciB2aXJ0dWFsIHNlbGYuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3OGVkY2IxZmQyZTMxODRiNWMyZmU1L2ZpbGUtanFXazZqZG5POC5wbmciIGFsdD0iRmluYWwgYXZhdGFyIHByZXZpZXcgd2l0aCBOZXh0IGJ1dHRvbiIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+CjwvU3RlcHM+CgojIyBBZGRpdGlvbmFsIEN1c3RvbWl6YXRpb24KCkFmdGVyIHlvdXIgaW5pdGlhbCBzZXR1cCB5b3UgY2FuIHJldHVybiB0byB5b3VyIHByb2ZpbGUgYW55dGltZSB0byBtYWtlIGNoYW5nZXMgb3IgdHJ5IHNvbWV0aGluZyBuZXcuCgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJBY2Nlc3MgeW91ciBwcm9maWxlIj4KICBGcm9tIHRoZSBCYXNlbWVudCBob21lcGFnZSBjbGljayB0aGUgcHJvZmlsZSBpY29uIG9uIGVpdGhlciB0aGUgbGVmdCBvciByaWdodCBzaWRlIG9mIHRoZSBwYWdlIHRvIG9wZW4geW91ciBwcm9maWxlIGFuZCBiZWdpbiBlZGl0aW5nLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4NzhlZjM3NTI3MjRkM2M1NGRlOTA2ZS9maWxlLWt2cGhmb1I3ajIucG5nIiBhbHQ9IlByb2ZpbGUgaWNvbnMgb24gQmFzZW1lbnQgaG9tZXBhZ2UiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9Ik9wZW4gY3VzdG9taXphdGlvbiBvcHRpb25zIj4KICBOZXh0LCBjbGljayAqKkN1c3RvbWl6ZSBQcm9maWxlKiouCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3OGVmYjExM2Q5NTA0MDVlZmY2ZTlkL2ZpbGUtNHkzVk1XQUxLSi5wbmciIGFsdD0iQ3VzdG9taXplIFByb2ZpbGUgYnV0dG9uIGluIHByb2ZpbGUgbWVudSIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+CjwvU3RlcHM+CgojIyMgQXZhaWxhYmxlIEN1c3RvbWl6YXRpb24gT3B0aW9ucwoKKipVc2VybmFtZSoqCkNoYW5nZSB5b3VyIHB1YmxpYyBkaXNwbGF5IG5hbWUgYXQgYW55IHRpbWUKCioqQXZhdGFyKioKRWRpdCB5b3VyIGF2YXRhcidzIGFwcGVhcmFuY2UgdG8gcmVmcmVzaCB5b3VyIGxvb2sKCioqRXhwcmVzcyBZb3Vyc2VsZioqCkFkZCBhIGN1c3RvbSBoYW5kLWRyYXduIHNpZ25hdHVyZSBhbmQgY2hvb3NlIGEgcHJvZmlsZSB0aGVtZSB0aGF0IG1hdGNoZXMgeW91ciB2aWJlCgo8VGlwPgpXYW50IGEgcXVpY2sgd2Fsa3Rocm91Z2g/IFdhdGNoIHRoaXMgc2hvcnQgdmlkZW8gdG8gc2VlIGVhY2ggY3VzdG9taXphdGlvbiBvcHRpb24gaW4gYWN0aW9uOgo8L1RpcD4KCjxpZnJhbWUKICBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCIKICBzcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL1VvcFRYZTF1YmVzIgogIHRpdGxlPSJQcm9maWxlIGN1c3RvbWl6YXRpb24gd2Fsa3Rocm91Z2giCiAgZnJhbWVCb3JkZXI9IjAiCiAgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiCiAgYWxsb3dGdWxsU2NyZWVuCj48L2lmcmFtZT4K",
    "lastUpdated": "2025-09-02T19:36:10.133Z"
  },
  {
    "sourceFile": "learn/getting-started/how-to-create-an-account.mdx",
    "sourceHash": "CllvdSBvbmx5IG5lZWQgb25lIEIzIGFjY291bnQgdG8gYWNjZXNzIGV2ZXJ5dGhpbmcgaW4gdGhlIEIzIGVjb3N5c3RlbS4gT25jZSB5b3VyIGFjY291bnQgaXMgY3JlYXRlZCwgeW91IGNhbiBsb2cgaW4gdG8gYW55IEIzIHBsYXRmb3JtIHVzaW5nIHRoZSBzYW1lIGNyZWRlbnRpYWxzLgoKWW91IGNhbiBzaWduIHVwIHVzaW5nIGFuIEVWTSB3YWxsZXQsIGVtYWlsLCBwaG9uZSBudW1iZXIgKFNNUyksIG9yIGEgc29jaWFsIGFjY291bnQgbGlrZSBHb29nbGUsIEFwcGxlLCBEaXNjb3JkLCBUZWxlZ3JhbSwgb3IgRmFyY2FzdGVyLgoKWW91ciBsb2dpbiBpcyBzZWN1cmUsIGZsZXhpYmxlLCBhbmQgd29ya3MgYWNyb3NzIGFsbCBjdXJyZW50IGFuZCBmdXR1cmUgQjMgcHJvZHVjdHMuCgojIyBTdGVwLWJ5LVN0ZXA6IENyZWF0aW5nIFlvdXIgQjMgQWNjb3VudAoKWW91IGNhbiBjcmVhdGUgeW91ciBhY2NvdW50IG9uIGFueSBCMy1wb3dlcmVkIHNpdGUuIFNvbWUgb2Ygb3VyIG1vc3QgYWN0aXZlIHBsYXRmb3JtcyBpbmNsdWRlOgoKLSBbKipiYXNlbWVudC5mdW4qKl0oaHR0cHM6Ly9iYXNlbWVudC5mdW4pIC0gb3VyIG1haW4gZ2FtaW5nIGh1YgotIFsqKnN0YWtlLmIzLmZ1bioqXShodHRwczovL3N0YWtlLmIzLmZ1bikgLSB0aGUgc3Rha2luZyBhbmQgcmV3YXJkcyBkYXNoYm9hcmQKClRoZSBzdGVwcyBhcmUgdGhlIHNhbWUgbm8gbWF0dGVyIHdoaWNoIHBsYXRmb3JtIHlvdSBjaG9vc2UuIEZvciB0aGlzIHdhbGstdGhyb3VnaCwgd2UnbGwgc3RhcnQgb3VyIGpvdXJuZXkgb24gYmFzZW1lbnQuZnVuLgoKPGlmcmFtZQogIGNsYXNzTmFtZT0idy1mdWxsIGFzcGVjdC12aWRlbyByb3VuZGVkLXhsIgogIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQva0dJQUZ4NjNPeWciCiAgdGl0bGU9IkhvdyB0byBDcmVhdGUgYSBCMyBBY2NvdW50IgogIGZyYW1lQm9yZGVyPSIwIgogIGFsbG93PSJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIgogIGFsbG93RnVsbFNjcmVlbgo+PC9pZnJhbWU+Cgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJOYXZpZ2F0ZSB0byBiYXNlbWVudC5mdW4iPgogIEdvIHRvIFtiYXNlbWVudC5mdW5dKGh0dHA6Ly9iYXNlbWVudC5mdW4pIGFuZCBjbGljayAqKkpvaW4gdGhlIGZ1bioqLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4NzUwMjhkMDNlNzJkNDJmZjg3YzVlOC9maWxlLXU4bWx2aThCbjMucG5nIiBhbHQ9IkJhc2VtZW50IGhvbWVwYWdlIHdpdGggSm9pbiB0aGUgZnVuIGJ1dHRvbiBoaWdobGlnaHRlZCIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQ2hvb3NlIHlvdXIgbG9naW4gbWV0aG9kIj4KICBDaG9vc2UgeW91ciBwcmVmZXJyZWQgbG9naW4gbWV0aG9kLiBZb3UgY2FuIGNsaWNrICoqTW9yZSBvcHRpb25zKiogdG8gc2VlIGFkZGl0aW9uYWwgbG9naW4gbWV0aG9kcy4KICAKICAtICoqRVZNIFdhbGxldCoqIChlLmcuIE1ldGFNYXNrIG9yIFJhaW5ib3cpCiAgLSAqKkVtYWlsIG9yIFBob25lIE51bWJlciAoU01TKSoqCiAgLSAqKlNvY2lhbCBBY2NvdW50KiogKEdvb2dsZSwgQXBwbGUsIERpc2NvcmQsIFRlbGVncmFtLCBvciBGYXJjYXN0ZXIpCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3NTAzM2YwM2U3MmQ0MmZmODdjNWVlL2ZpbGUtWUFvdFZYQ2ttMy5wbmciIGFsdD0iTG9naW4gb3B0aW9ucyBtb2RhbCBzaG93aW5nIGRpZmZlcmVudCBhdXRoZW50aWNhdGlvbiBtZXRob2RzIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJDb25maXJtIHlvdXIgbG9naW4gbWV0aG9kIj4KICBGb2xsb3cgdGhlIHByb21wdHMgdG8gY29uZmlybSB5b3VyIGxvZ2luIG1ldGhvZC4gVGhpcyBtaWdodCBpbmNsdWRlIGNvbm5lY3RpbmcgeW91ciB3YWxsZXQsIHZlcmlmeWluZyB5b3VyIGVtYWlsLCBvciBhcHByb3ZpbmcgYWNjZXNzIHRocm91Z2ggYSBzb2NpYWwgYWNjb3VudC4KICAKICA8Tm90ZT4KICAgIEV4YW1wbGU6IElmIHlvdSdyZSB1c2luZyBhbiBFVk0gd2FsbGV0IGxpa2UgTWV0YW1hc2ssIHlvdSdsbCBzZWUgYSBzY3JlZW4gbGlrZSB0aGlzIHdoZW4gY29uZmlybWluZyB5b3VyIGNvbm5lY3Rpb246CiAgPC9Ob3RlPgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4NzUwNTNhMGNmN2Q4NjA4OWVjNDk3ZS9maWxlLXV2VmZtVXJUWVEucG5nIiBhbHQ9Ik1ldGFNYXNrIGNvbm5lY3Rpb24gY29uZmlybWF0aW9uIGRpYWxvZyIgLz4KICA8L0ZyYW1lPgogIAogIDxDaGVjaz4KICAgIE9uY2UgY29uZmlybWVkLCB5b3VyIEIzIGFjY291bnQgd2lsbCBiZSBjcmVhdGVkIGFuZCByZWFkeSB0byB1c2UgYWNyb3NzIGFsbCBCMyBwbGF0Zm9ybXMuCiAgPC9DaGVjaz4KPC9TdGVwPgo8L1N0ZXBzPgo=",
    "lastUpdated": "2025-09-02T19:36:10.136Z"
  },
  {
    "sourceFile": "learn/getting-started/crypto-and-wallet-security.mdx",
    "sourceHash": "ClRoaW5rIG9mIHlvdXIgY3J5cHRvIHdhbGxldCBhcyB5b3VyIHBlcnNvbmFsIGtleSB0byB0aGUgV2ViMyB1bml2ZXJzZSAtIGl0J3Mgbm90IGp1c3QgYSB0b29sOyBpdCdzIHlvdXIgZ2F0ZXdheSB0byBvd25pbmcsIHRyYWRpbmcsIGFuZCBpbnRlcmFjdGluZyBpbiB0aGUgZGVjZW50cmFsaXplZCB3b3JsZC4gV2FsbGV0IGFwcHMgbGlrZSBSYWluYm93IG1ha2UgdGhpcyBzaW1wbGUgYnkgZ2l2aW5nIHlvdSBhbiBlYXN5LXRvLXVzZSBpbnRlcmZhY2UgdG8gbWFuYWdlIHlvdXIgY3J5cHRvZ3JhcGhpYyBrZXlzLCBubyB0ZWNobmljYWwgd2l6YXJkcnkgcmVxdWlyZWQuIExldCdzIGJyZWFrIGl0IGRvd24uCgpBdCBpdHMgY29yZSwgYSBjcnlwdG8gd2FsbGV0IGRvZXNuJ3QgImhvbGQiIHlvdXIgbW9uZXkuIEluc3RlYWQsIGl0J3MgYSBzZWN1cmUgd2F5IHRvIG1hbmFnZSB0aGUga2V5cyB0aGF0IGdpdmUgeW91IGFjY2VzcyB0byB5b3VyIGZ1bmRzIG9uIHRoZSBibG9ja2NoYWluLiBUaGVzZSBrZXlzIGFsbG93IHlvdSB0byBzZW5kLCByZWNlaXZlLCBhbmQgb3duIGFzc2V0cyBsaWtlIEV0aGVyZXVtLgoKV2hlbiB5b3UgIm93biIgMSBFVEgsIHdoYXQgeW91J3JlIHJlYWxseSBkb2luZyBpcyBvd25pbmcgcHJvb2Ygb24gdGhlIGJsb2NrY2hhaW4gdGhhdCBsaW5rcyB5b3VyIHdhbGxldCBhZGRyZXNzIHRvIHRoYXQgRVRILiBZb3VyIHdhbGxldCBpcyB5b3VyIGRpZ2l0YWwgcHJvb2Ygb2Ygb3duZXJzaGlwLgoKV2FsbGV0cyBjb21lIGluIGRpZmZlcmVudCBmb3JtcyB0byBzdWl0IHlvdXIgbmVlZHM6CgotICoqSG90IFdhbGxldHM6KiogQWx3YXlzIGNvbm5lY3RlZCB0byB0aGUgaW50ZXJuZXQsIHBlcmZlY3QgZm9yIGZyZXF1ZW50IHRyYW5zYWN0aW9ucyAoZS5nLiwgUmFpbmJvdykuCi0gKipDb2xkIFdhbGxldHM6KiogSGFyZHdhcmUgd2FsbGV0cyBsaWtlIExlZGdlciwgZGVzaWduZWQgdG8gc3RvcmUgeW91ciBrZXlzIG9mZmxpbmUgZm9yIGV4dHJhIHNlY3VyaXR5LgoKPEZyYW1lIGNhcHRpb249IldhbGxldCB0eXBlcyBjb21wYXJpc29uIHNob3dpbmcgaG90IHZzIGNvbGQgc3RvcmFnZSBvcHRpb25zIj4KPGltZyBzcmM9Imh0dHBzOi8vaW1hZ2VzLnNwci5zby9jZG4tY2dpL2ltYWdlZGVsaXZlcnkvajQyTm83eS1kY29rSnVOZ1hlQTBpZy8zMmJmNTQ4Ny1hOGVmLTQ1MmMtOTk3MS1hMjhkMWYxNDE1YTcvVW50aXRsZWQvdz0zODQwLHF1YWxpdHk9OTAsZml0PXNjYWxlLWRvd24iIGFsdD0iRGlhZ3JhbSBzaG93aW5nIGRpZmZlcmVudCB0eXBlcyBvZiBjcnlwdG9jdXJyZW5jeSB3YWxsZXRzIiAvPgo8L0ZyYW1lPgoKIyMgV2FsbGV0IENvbXBvbmVudHM6IFRoZSBFc3NlbnRpYWxzCgpFdmVyeSBjcnlwdG8gd2FsbGV0IGhhcyB0aHJlZSBtYWluIHBhcnRzIHRoYXQgbWFrZSBpdCBhbGwgd29yazoKCiMjIyAxLiBQdWJsaWMgV2FsbGV0IEFkZHJlc3MKLSBUaGluayBvZiB0aGlzIGFzIHlvdXIgdXNlcm5hbWUgb3IgYWNjb3VudCBudW1iZXIuCi0gU2hhcmUgaXQgd2l0aCBhbnlvbmUgdG8gcmVjZWl2ZSBmdW5kcy4KLSBQdWJsaWMgYWRkcmVzc2VzIGxldCBwZW9wbGUgc2VlIHlvdXIgdHJhbnNhY3Rpb24gaGlzdG9yeSBhbmQgYXNzZXRzIChiZWNhdXNlIGJsb2NrY2hhaW5zIGFyZSB0cmFuc3BhcmVudCkuCgojIyMgMi4gU2VjcmV0IFBocmFzZSAoU2VlZCBQaHJhc2UpCi0gQSAxMi0gb3IgMjQtd29yZCBwaHJhc2UgdGhhdCBnaXZlcyB5b3UgZnVsbCBhY2Nlc3MgdG8geW91ciB3YWxsZXQuCi0gVHJlYXQgdGhpcyBsaWtlIHRoZSBjcm93biBqZXdlbHMg4oCUIHdob2V2ZXIgaGFzIGl0LCBvd25zIHRoZSBhc3NldHMgd2l0aGluIHlvdXIgd2FsbGV0LgoKIyMjIDMuIFByaXZhdGUgS2V5Ci0gQSBsb25nIHN0cmluZyBvZiBjaGFyYWN0ZXJzIGdlbmVyYXRlZCBmcm9tIHlvdXIgc2VlZCBwaHJhc2UuCi0gVXNlZCB0byBzaWduIHRyYW5zYWN0aW9ucyBhbmQgcHJvdmUgb3duZXJzaGlwLgoKPEZyYW1lPgo8aW1nIHNyYz0iaHR0cHM6Ly9pbWFnZXMuc3ByLnNvL2Nkbi1jZ2kvaW1hZ2VkZWxpdmVyeS9qNDJObzd5LWRjb2tKdU5nWGVBMGlnLzJjOTA5ZWVmLWEwMjItNGFlNC1hNmJjLWY4OTk2ZWVjNzQxMi9pbWFnZS93PTM4NDAscXVhbGl0eT05MCxmaXQ9c2NhbGUtZG93biIgYWx0PSJEaWFncmFtIHNob3dpbmcgd2FsbGV0IGNvbXBvbmVudHMgaW5jbHVkaW5nIHB1YmxpYyBhZGRyZXNzLCBwcml2YXRlIGtleSwgYW5kIHNlZWQgcGhyYXNlIiAvPgo8L0ZyYW1lPgoKIyMjIFdoYXQgSGFwcGVucyBpZiBZb3UgTG9zZSBZb3VyIEtleXM/Cgo8V2FybmluZz4KSGVyZSdzIHRoZSBkZWFsOiBMb3NlIHlvdXIgKipwcml2YXRlIGtleSoqIG9yICoqc2VjcmV0IHBocmFzZSoqLCBhbmQgaXQncyBnYW1lIG92ZXIuIFRoZXJlJ3Mgbm8gIkZvcmdvdCBQYXNzd29yZCIgYnV0dG9uLCBubyB0ZWNoIHN1cHBvcnQsIGFuZCBubyAyRkEuIE5vdCBldmVuIHlvdXIgd2FsbGV0IHByb3ZpZGVyIGNhbiBoZWxwIHlvdSByZWNvdmVyIGl0Lgo8L1dhcm5pbmc+CgpUaGF0J3Mgd2h5IGJhY2tpbmcgdXAgeW91ciBrZXlzIGlzIG5vbi1uZWdvdGlhYmxlLiBIZXJlIGFyZSBzb21lIHBybyB0aXBzIGZvciBrZWVwaW5nIHRoZW0gc2FmZToKCi0gVXNlIGEgKipwYXNzd29yZCBtYW5hZ2VyKiogbGlrZSAxUGFzc3dvcmQuCi0gV3JpdGUgaXQgZG93biBvbiBhIHBpZWNlIG9mIHBhcGVyIChvbGQtc2Nob29sIGJ1dCBlZmZlY3RpdmUpLgotIFN0YW1wIGl0IG9udG8gYSBwaWVjZSBvZiBtZXRhbCBmb3IgdWx0aW1hdGUgZHVyYWJpbGl0eS4KCjxJbmZvPgpZb3VyIGtleXMgPSB5b3VyIGNvbnRyb2wuIExvc2UgdGhlbSwgYW5kIHlvdSdyZSBsb2NrZWQgb3V0IGZvciBnb29kLgo8L0luZm8+CgojIyBXaHkgQjMgVXNlcyBDcnlwdG8gV2FsbGV0cwoKQXQgKipCMyoqLCB5b3VyIHdhbGxldCBpcyBzbyBtdWNoIG1vcmUgdGhhbiBqdXN0IGEgbG9naW4uIEl0J3MgeW91ciBpZGVudGl0eSwgeW91ciBpbnZlbnRvcnksIGFuZCB5b3VyIGNvbm5lY3Rpb24gdG8gdGhlIGVudGlyZSBlY29zeXN0ZW0uIEhlcmUncyB3aHkgd2FsbGV0cyBhcmUgY2VudHJhbCB0byBvdXIgV2ViMyB2aXNpb246CgojIyMgMS4gT3duZXJzaGlwIFRoYXQncyBZb3VycwpZb3VyIHdhbGxldCBwdXRzIHlvdSBpbiBjb250cm9sIG9mIHlvdXIgZGlnaXRhbCBhc3NldHMg4oCUIG5vIG1pZGRsZW1lbiwgbm8gY29ycG9yYXRlIGxvY2staW4uCgojIyMgMi4gSW50ZXJvcGVyYWJpbGl0eSBBY3Jvc3MgUGxhdGZvcm1zCllvdXIgQjMgd2FsbGV0IGlzbid0IHRpZWQgdG8ganVzdCBvbmUgZ2FtZSBvciBlY29zeXN0ZW0uIFdoZXRoZXIgeW91J3JlIGVhcm5pbmcgQnVpbGRlciBQb2ludHMgKEJQKSBvciBjbGFpbWluZyB0b2tlbnMsIHlvdXIgd2FsbGV0IHdvcmtzIHNlYW1sZXNzbHkgYWNyb3NzIG11bHRpcGxlIGV4cGVyaWVuY2VzLgoKIyMjIDMuIFNlY3VyaXR5IGFuZCBUcmFuc3BhcmVuY3kKQWxsIHRyYW5zYWN0aW9ucyBhcmUgdmlzaWJsZSBvbiB0aGUgYmxvY2tjaGFpbiwgYnV0IG9ubHkgeW91IGNvbnRyb2wgeW91ciBwcml2YXRlIGtleXMuIFRoaXMgZW5zdXJlcyBmYWlybmVzcyBhbmQgYWNjb3VudGFiaWxpdHkgYWNyb3NzIHRoZSBlY29zeXN0ZW0uCgojIyBXYWxsZXQgU2VjdXJpdHkKCllvdXIgY3J5cHRvIHdhbGxldCBnaXZlcyB5b3UgZ3JlYXQgcG93ZXIsIGJ1dCB3aXRoIGdyZWF0IHBvd2VyLCBjb21lcyBncmVhdCByZXNwb25zaWJpbGl0eS4gWW91J3JlIGluIGNoYXJnZSBvZiB5b3VyIGFzc2V0cywgYnV0IHlvdSdyZSBhbHNvIGluIGNoYXJnZSBvZiBrZWVwaW5nIHRob3NlIGFzc2V0cyBzYWZlIGZyb20gYmFkIGFjdG9ycy4KCkhlcmUgYXJlIHNvbWUgaGVscGZ1bCB0aXBzIGFuZCB0cmlja3MgdG8gaGVscCB5b3Uga2VlcCB5b3VyIGFzc2V0cyBzYWZlIGFuZCBzZWN1cmUuCgojIyMgU2VjdXJpdHkgR3VpZGVsaW5lcwoKLSBPbmx5IGludGVyYWN0IHdpdGggb2ZmaWNpYWwgQjMgd2Vic2l0ZXMgYW5kIHBsYXRmb3JtcyAoW2IzLmZ1bl0oaHR0cHM6Ly9iMy5mdW4pLCBbYnNtbnQuZnVuXShodHRwczovL2JzbW50LmZ1biksIFtjbGFpbS5iMy5mdW5dKGh0dHBzOi8vY2xhaW0uYjMuZnVuKSkuCi0gTmV2ZXIgc2hhcmUgeW91ciB3YWxsZXQncyBwcml2YXRlIGtleXMgb3Igc2VlZCBwaHJhc2VzIHdpdGggYW55b25lLgotIEJlIHdhcnkgb2YgZGlyZWN0IG1lc3NhZ2VzIGNsYWltaW5nIHRvIGJlIEIzIHN1cHBvcnQgLSBvZmZpY2lhbCBzdXBwb3J0IGlzIG9ubHkgdGhyb3VnaCBbZGlzY29yZC5nZy9iM2RvdGZ1bl0oaHR0cHM6Ly9kaXNjb3JkLmdnL2IzZG90ZnVuKSBhbmQgW2h0dHBzOi8vYjMuZnVuXShodHRwczovL2IzLmZ1bikuCi0gRG91YmxlLWNoZWNrIGFsbCB3YWxsZXQgYWRkcmVzc2VzIGFuZCB0cmFuc2FjdGlvbiBkZXRhaWxzIGJlZm9yZSBhcHByb3ZpbmcgdHJhbnNhY3Rpb25zLgotIEF2b2lkIGNsaWNraW5nIG9uIHN1c3BpY2lvdXMgbGlua3Mgb3IgY29ubmVjdGluZyB5b3VyIHdhbGxldCB0byB1bnZlcmlmaWVkIHdlYnNpdGVzLgotIEVuYWJsZSAyRkEgd2hlcmUgYXZhaWxhYmxlIGFuZCB1c2UgYSBoYXJkd2FyZSB3YWxsZXQgZm9yIGV4dHJhIHNlY3VyaXR5LgotIFJlbWVtYmVyOiBCMyB0ZWFtIHdpbGwgbmV2ZXIgYXNrIGZvciB5b3VyIHBlcnNvbmFsIHdhbGxldCBpbmZvcm1hdGlvbi4KCiMjIyBTZWN1cml0eSBCZXN0IFByYWN0aWNlcwoKPFRpcD4KRm9sbG93IHRoZXNlIGVzc2VudGlhbCBwcmFjdGljZXMgdG8ga2VlcCB5b3VyIHdhbGxldCBzZWN1cmU6CjwvVGlwPgoKLSBVc2Ugc3Ryb25nLCB1bmlxdWUgcGFzc3dvcmRzLgotIEVuYWJsZSB0d28tZmFjdG9yIGF1dGhlbnRpY2F0aW9uICgyRkEpLgotIE5ldmVyIHNoYXJlIHlvdXIgd2FsbGV0IGtleXMuCi0gS2VlcCB5b3VyIHdhbGxldCB1cGRhdGVkIGFuZCB0cnVzdGVkLiBTdGF5IHNlY3VyZSBhbmQgZ2FtZSBvbiEK",
    "lastUpdated": "2025-09-02T19:36:10.139Z"
  },
  {
    "sourceFile": "learn/deposits-withdrawals/withdrawing-tokens-from-b3.mdx",
    "sourceHash": "Ck5lZWQgdG8gbW92ZSB5b3VyIHRva2VucyBvdXQgb2YgdGhlIEIzIG5ldHdvcms/IFdoZXRoZXIgeW91J3JlIGJyaWRnaW5nIGJhY2sgdG8gRXRoZXJldW0gb3IgYW5vdGhlciBzdXBwb3J0ZWQgY2hhaW4sIHdpdGhkcmF3aW5nIGZyb20gQjMgaXMgc2ltcGxlIGFuZCBvbmx5IHRha2VzIGEgZmV3IHN0ZXBzLiBUaGlzIGd1aWRlIHdhbGtzIHlvdSB0aHJvdWdoIGhvdyB0byBzZWN1cmVseSB3aXRoZHJhdyB5b3VyIGFzc2V0cy4KCiMjIEhvdyB0byBXaXRoZHJhdyBUb2tlbnMKCjxpZnJhbWUKICBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCIKICBzcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL0FFX0RoRVZPbU1JIgogIHRpdGxlPSJIb3cgdG8gd2l0aGRyYXcgdG9rZW5zIGZyb20gQjMiCiAgZnJhbWVCb3JkZXI9IjAiCiAgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiCiAgYWxsb3dGdWxsU2NyZWVuCj48L2lmcmFtZT4KCjxTdGVwcz4KPFN0ZXAgdGl0bGU9Ik5hdmlnYXRlIHRvIHRoZSBicmlkZ2UiPgogIExvZyBpbiB0byB5b3VyIGFjY291bnQgYXQgW2Jhc2VtZW50LmZ1bi9icmlkZ2VdKGh0dHBzOi8vYmFzZW1lbnQuZnVuL2JyaWRnZSkuCjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJTZWxlY3Qgd2l0aGRyYXdhbCB0YWIiPgogIExvY2F0ZSBhbmQgY2xpY2sgdGhlIHRhYiBsYWJlbGVkICoqV2l0aGRyYXdhbCoqLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4N2U0NzMwMzU3Y2VlNDc1NmI0Y2YwNi9maWxlLVZKMlBOR1BsSjUucG5nIiBhbHQ9IldpdGhkcmF3YWwgdGFiIGluIHRoZSBicmlkZ2UgaW50ZXJmYWNlIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJDaG9vc2UgZGVzdGluYXRpb24gbmV0d29yayI+CiAgU2Nyb2xsIGRvd24gYW5kIHNlbGVjdCB0aGUgbmV0d29yayB5b3Ugd291bGQgbGlrZSB0byB3aXRoZHJhdyB5b3VyIHRva2VucyB0by4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODdlNDc2OGE2NmU2MjE3N2VkNmQ4ZjEvZmlsZS1IeWJTSFV5b01ZLnBuZyIgYWx0PSJOZXR3b3JrIHNlbGVjdGlvbiBkcm9wZG93biBmb3Igd2l0aGRyYXdhbCIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iU2VsZWN0IHRva2VuIj4KICBTZWxlY3QgdGhlIHRva2VuIHlvdSB3YW50IHRvIHdpdGhkcmF3LgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4N2U0ODJhYmIyZGNmNGM2MmUxNmExMC9maWxlLXVsT1A3VWg0Z2kucG5nIiBhbHQ9IlRva2VuIHNlbGVjdGlvbiBpbnRlcmZhY2UiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkVudGVyIGFtb3VudCBhbmQgYnJpZGdlIj4KICBFbnRlciB5b3VyIHdpdGhkcmF3YWwgYW1vdW50LCBhbmQgdGhlbiBjbGljayAqKkJyaWRnZSoqLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4N2RmZjI2NjgyOGE2NmJiZWNmMGJmZi9maWxlLTM1RmR3dDBqWkMucG5nIiBhbHQ9IkFtb3VudCBpbnB1dCBmaWVsZCB3aXRoIEJyaWRnZSBidXR0b24iIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvbmZpcm0gdHJhbnNhY3Rpb24iPgogIENvbmZpcm0gdGhlIHRyYW5zYWN0aW9uIGluIHlvdXIgd2FsbGV0IHRvIGNvbXBsZXRlIHlvdXIgd2l0aGRyYXdhbC4KICAKICA8Q2hlY2s+CiAgICBPbmNlIGNvbmZpcm1lZCwgeW91ciB0b2tlbnMgd2lsbCBiZSBicmlkZ2VkIHRvIHRoZSBzZWxlY3RlZCBuZXR3b3JrIGFuZCBzaG91bGQgYXJyaXZlIHNob3J0bHkuCiAgPC9DaGVjaz4KPC9TdGVwPgo8L1N0ZXBzPgoKPEluZm8+CldpdGhkcmF3YWwgcHJvY2Vzc2luZyB0aW1lcyB0eXBpY2FsbHkgcmFuZ2UgZnJvbSBhIGZldyBtaW51dGVzIHRvIGFuIGhvdXIsIGRlcGVuZGluZyBvbiBuZXR3b3JrIGNvbmdlc3Rpb24gYW5kIHRoZSBkZXN0aW5hdGlvbiBjaGFpbi4KPC9JbmZvPgo=",
    "lastUpdated": "2025-09-02T19:36:10.141Z"
  },
  {
    "sourceFile": "learn/deposits-withdrawals/how-to-verify-transaction-status.mdx",
    "sourceHash": "CklmIHlvdSd2ZSBzZW50IGEgdHJhbnNhY3Rpb24gb24gdGhlIEIzIE5ldHdvcmsgYW5kIHdhbnQgdG8gY2hlY2sgd2hldGhlciBpdCdzIGJlZW4gY29uZmlybWVkLCBwZW5kaW5nLCBvciBmYWlsZWQsIHlvdSBjYW4gZWFzaWx5IHRyYWNrIGl0IHVzaW5nIHRoZSBCMyBCbG9jayBFeHBsb3Jlci4gQWxsIHlvdSBuZWVkIGlzIHRoZSB0cmFuc2FjdGlvbiBoYXNoIChUeEhhc2gpIG9yIHRoZSB3YWxsZXQgYWRkcmVzcyBpbnZvbHZlZCBpbiB0aGUgdHJhbnNhY3Rpb24uCgojIyBTdGVwcyB0byBWZXJpZnkgYSBUcmFuc2FjdGlvbgoKPGlmcmFtZQogIGNsYXNzTmFtZT0idy1mdWxsIGFzcGVjdC12aWRlbyByb3VuZGVkLXhsIgogIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvQ1puY1ZXSTFhSGsiCiAgdGl0bGU9IkhvdyB0byB2ZXJpZnkgdHJhbnNhY3Rpb24gc3RhdHVzIG9uIEIzIgogIGZyYW1lQm9yZGVyPSIwIgogIGFsbG93PSJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIgogIGFsbG93RnVsbFNjcmVlbgo+PC9pZnJhbWU+Cgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJOYXZpZ2F0ZSB0byBCMyBFeHBsb3JlciI+CiAgR28gdG8gW2V4cGxvcmVyLmIzLmZ1bl0oaHR0cHM6Ly9leHBsb3Jlci5iMy5mdW4pLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQWNjZXNzIHRyYW5zYWN0aW9ucyI+CiAgSG92ZXIgb3ZlciB0aGUgbGVmdCBzaWRlIHBhbmVsIHRvIGV4cGFuZCBpdCBhbmQgY2xpY2sgb24gKipUcmFuc2FjdGlvbnMuKioKICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODdlNTU0OTRiMzkzNjY5M2JhMGVjYmIvZmlsZS1vMFdQcnpNVWJmLnBuZyIgYWx0PSJCMyBFeHBsb3JlciBzaWRlYmFyIHdpdGggVHJhbnNhY3Rpb25zIG9wdGlvbiBoaWdobGlnaHRlZCIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iU2VhcmNoIGZvciB5b3VyIHRyYW5zYWN0aW9uIj4KICBBIG5ldyBzZWFyY2ggYmFyIHdpbGwgYXBwZWFyLiBJbiB0aGUgc2VhcmNoIGJhciwgZW50ZXIgZWl0aGVyOgogIC0gVGhlIHdhbGxldCBhZGRyZXNzIHRoYXQgaW5pdGlhdGVkIHRoZSB0cmFuc2FjdGlvbgogIC0gT3IgdGhlIHRyYW5zYWN0aW9uIGhhc2ggKFR4SGFzaCkKICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODdlNTU2ZTE5NDY1MTRjMzRiZmZhZTkvZmlsZS1zZkNlbTRnQkVzLnBuZyIgYWx0PSJTZWFyY2ggYmFyIGZvciBlbnRlcmluZyB3YWxsZXQgYWRkcmVzcyBvciB0cmFuc2FjdGlvbiBoYXNoIiAvPgogIDwvRnJhbWU+CjwvU3RlcD4KCjxTdGVwIHRpdGxlPSJWaWV3IHRyYW5zYWN0aW9uIGRldGFpbHMiPgogIEJyb3dzZSB0aGUgcmVzdWx0cyBhbmQgY2xpY2sgdGhlIHJlbGV2YW50IHRyYW5zYWN0aW9uIHRvIHZpZXc6CiAgLSBTdGF0dXMgKFN1Y2Nlc3MgLyBGYWlsZWQgLyBQZW5kaW5nKQogIC0gRGF0ZSAmIFRpbWUKICAtIFRva2VucyB0cmFuc2ZlcnJlZAogIC0gR2FzIHVzZWQKICAtIEFueSBvdGhlciBvbi1jaGFpbiBkZXRhaWxzCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3ZTU1YjFmZmE4ODYxMGRhOTg2ZGZkL2ZpbGUtRVJyVFZBNE5MTy5wbmciIGFsdD0iVHJhbnNhY3Rpb24gZGV0YWlscyBwYWdlIHNob3dpbmcgc3RhdHVzIGFuZCB0cmFuc2FjdGlvbiBpbmZvcm1hdGlvbiIgLz4KICA8L0ZyYW1lPgogIAogIDxDaGVjaz4KICAgIFRoaXMgaXMgdGhlIGJlc3Qgd2F5IHRvIHRyYWNrIG1pbnRzLCB0cmFuc2ZlcnMsIGFuZCBvdGhlciBhY3Rpdml0eSBkaXJlY3RseSBvbiB0aGUgQjMgTmV0d29yay4KICA8L0NoZWNrPgo8L1N0ZXA+CjwvU3RlcHM+CgojIyBUcmFuc2FjdGlvbiBTdGF0dXMgTWVhbmluZ3MKCi0gKipTdWNjZXNzOioqIFRyYW5zYWN0aW9uIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHkKLSAqKkZhaWxlZDoqKiBUcmFuc2FjdGlvbiBmYWlsZWQgdG8gZXhlY3V0ZSAob2Z0ZW4gZHVlIHRvIGluc3VmZmljaWVudCBnYXMgb3Igb3RoZXIgZXJyb3JzKQotICoqUGVuZGluZzoqKiBUcmFuc2FjdGlvbiBpcyBzdGlsbCBiZWluZyBwcm9jZXNzZWQgYnkgdGhlIG5ldHdvcmsKCjxUaXA+CllvdSBjYW4gYm9va21hcmsgZnJlcXVlbnRseSB1c2VkIHdhbGxldCBhZGRyZXNzZXMgaW4gdGhlIGV4cGxvcmVyIHRvIHF1aWNrbHkgY2hlY2sgdHJhbnNhY3Rpb24gaGlzdG9yeSBpbiB0aGUgZnV0dXJlLgo8L1RpcD4K",
    "lastUpdated": "2025-09-02T19:36:10.145Z"
  },
  {
    "sourceFile": "learn/deposits-withdrawals/how-to-swap-tokens.mdx",
    "sourceHash": "CldpdGggYnVpbHQtaW4gbXVsdGktY2hhaW4gc3VwcG9ydCwgeW91IGNhbiBzd2FwIHRva2VucyBhY3Jvc3MgZGlmZmVyZW50IG5ldHdvcmtzLCBhbGwgZnJvbSBvbmUgc2ltcGxlIGludGVyZmFjZS4gV2hldGhlciB5b3UncmUgcHJlcGFyaW5nIGZvciBhIG1pbnQsIGNvbnNvbGlkYXRpbmcgYXNzZXRzLCBvciBtb3ZpbmcgYmV0d2VlbiBjaGFpbnMsIHRoaXMgZ3VpZGUgd2Fsa3MgeW91IHRocm91Z2ggaG93IHRvIHN3YXAgb25lIHRva2VuIGZvciBhbm90aGVyLgoKIyMgSG93IHRvIFN3YXAgVG9rZW5zCgo8aWZyYW1lCiAgY2xhc3NOYW1lPSJ3LWZ1bGwgYXNwZWN0LXZpZGVvIHJvdW5kZWQteGwiCiAgc3JjPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC95UlIyckdpSm1OTSIKICB0aXRsZT0iSG93IHRvIHN3YXAgdG9rZW5zIHVzaW5nIEFueVNwZW5kIgogIGZyYW1lQm9yZGVyPSIwIgogIGFsbG93PSJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIgogIGFsbG93RnVsbFNjcmVlbgo+PC9pZnJhbWU+Cgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJOYXZpZ2F0ZSB0byB0aGUgYnJpZGdlIj4KICBMb2cgaW4gdG8geW91ciBhY2NvdW50IGF0IFtiYXNlbWVudC5mdW4vYnJpZGdlXShodHRwczovL2Jhc2VtZW50LmZ1bi9icmlkZ2UpLgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iU2VsZWN0IHN3YXAgdGFiIj4KICBMb2NhdGUgdGhlIHRhYiBsYWJlbGVkICoqU3dhcCoqIGFuZCBzZWxlY3QgaXQuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3YTNjYzk5ZWRiZDYzNWMxOTRhZTRlL2ZpbGUteWR4NVRRbTM4aS5wbmciIGFsdD0iU3dhcCB0YWIgaGlnaGxpZ2h0ZWQgaW4gdGhlIGludGVyZmFjZSIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQ29uZmlndXJlIHN3YXAgcGFyYW1ldGVycyI+CiAgU2VsZWN0IHRoZSB0b2tlbiB5b3Ugd2FudCB0byBzd2FwIGZyb20gYW5kIHRoZSB0b2tlbiB5b3Ugd2FudCB0byByZWNlaXZlLCB0aGUgdG9rZW4gYW1vdW50LCBhbmQgdGhlIGNoYWluLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4N2EzZDk4OWVkYmQ2MzVjMTk0YWU1NC9maWxlLXNKaEl5dWNHNGIucG5nIiBhbHQ9IlN3YXAgY29uZmlndXJhdGlvbiBpbnRlcmZhY2Ugc2hvd2luZyB0b2tlbiBzZWxlY3Rpb24gYW5kIGFtb3VudHMiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlJldmlldyBhbmQgY29uZmlybSI+CiAgUmV2aWV3IGFuZCBjb25maXJtIHRoYXQgeW91IGhhdmUgc2VsZWN0ZWQgdGhlIGNvcnJlY3QgdG9rZW4gYW5kIGFtb3VudHMsIGFuZCB0aGVuIGNsaWNrICoqU3dhcCoqLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4N2EzZGUyODkxNjA0NzljMjAzMzI0NC9maWxlLWVyOXdyYjRsVjAucG5nIiBhbHQ9IlN3YXAgY29uZmlybWF0aW9uIGRpYWxvZyB3aXRoIHRyYW5zYWN0aW9uIGRldGFpbHMiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNob29zZSBwYXltZW50IG1ldGhvZCI+CiAgQ2xpY2sgKipQYXkgZnJvbSBDb25uZWN0ZWQgV2FsbGV0Kiogb3IgKipQYXkgZnJvbSBhIGRpZmZlcmVudCB3YWxsZXQqKiBpZiB5b3Ugd2lzaCB0byB1c2UgYSBkaWZmZXJlbnQgd2FsbGV0IGZyb20gdGhlIG9uZSB5b3UgaGF2ZSBjdXJyZW50bHkgY29ubmVjdGVkLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4N2EzZTY2ODg0NjQ3NGYxZTFmNTFjNS9maWxlLXRUNXFqMWdKNHgucG5nIiBhbHQ9IlBheW1lbnQgbWV0aG9kIHNlbGVjdGlvbiBkaWFsb2ciIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkNvbXBsZXRlIHRoZSBzd2FwIj4KICBDb25maXJtIHRoZSB0cmFuc2FjdGlvbiBpbiB5b3VyIHdhbGxldCB0byBjb21wbGV0ZSB0aGUgc3dhcC4gWW91ciBzd2FwIG1heSB0YWtlIHVwIHRvIGEgbWludXRlIHRvIHByb2Nlc3MuCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3YTNmMjY4ODQ2NDc0ZjFlMWY1MWNhL2ZpbGUtS0VGMVV5RmQ3Qi5wbmciIGFsdD0iRmluYWwgdHJhbnNhY3Rpb24gY29uZmlybWF0aW9uIGluIHdhbGxldCIgLz4KICA8L0ZyYW1lPgogIAogIDxDaGVjaz4KICAgIFlvdXIgc3dhcHBlZCB0b2tlbnMgd2lsbCBhcHBlYXIgaW4geW91ciB3YWxsZXQgb25jZSB0aGUgdHJhbnNhY3Rpb24gaXMgcHJvY2Vzc2VkLgogIDwvQ2hlY2s+CjwvU3RlcD4KPC9TdGVwcz4KCjxUaXA+ClN3YXBzIGFyZSBwcm9jZXNzZWQgcXVpY2tseSwgYnV0IGR1cmluZyBwZXJpb2RzIG9mIGhpZ2ggbmV0d29yayBhY3Rpdml0eSwgdHJhbnNhY3Rpb25zIG1heSB0YWtlIGEgYml0IGxvbmdlciB0byBjb21wbGV0ZS4KPC9UaXA+Cg==",
    "lastUpdated": "2025-09-02T19:36:10.148Z"
  },
  {
    "sourceFile": "learn/deposits-withdrawals/depositing-tokens-on-b3.mdx",
    "sourceHash": "ClRvIGludGVyYWN0IHdpdGggc29tZSBnYW1lcyBhbmQgZmVhdHVyZXMgaW4gdGhlIEIzIGVjb3N5c3RlbSwgeW91J2xsIG5lZWQgdG9rZW5zIGluIHlvdXIgd2FsbGV0LiBUaGlzIGd1aWRlIHdhbGtzIHlvdSB0aHJvdWdoIGhvdyB0byBkZXBvc2l0IHRva2VucyB1c2luZyB0aGUgQjMgYnJpZGdlLgoKIyMgSG93IHRvIERlcG9zaXQgVG9rZW5zCgo8aWZyYW1lCiAgY2xhc3NOYW1lPSJ3LWZ1bGwgYXNwZWN0LXZpZGVvIHJvdW5kZWQteGwiCiAgc3JjPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8tOTl6aXBNbE9sUSIKICB0aXRsZT0iSG93IHRvIGRlcG9zaXQgdG9rZW5zIHRvIEIzIgogIGZyYW1lQm9yZGVyPSIwIgogIGFsbG93PSJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIgogIGFsbG93RnVsbFNjcmVlbgo+PC9pZnJhbWU+Cgo8U3RlcHM+CjxTdGVwIHRpdGxlPSJMb2cgaW4gdG8gYmFzZW1lbnQuZnVuIj4KICBMb2cgaW4gdG8geW91ciBhY2NvdW50IGF0IGJhc2VtZW50LmZ1bi4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IlNlbGVjdCBuZXR3b3JrIGFuZCB0b2tlbiI+CiAgU2VsZWN0IHRoZSBuZXR3b3JrIGFuZCB0b2tlbiB5b3Ugd2FudCB0byBkZXBvc2l0IHRvIEIzLgogIAogIDxGcmFtZT4KICAgIDxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4N2RmZTgxYmIyZGNmNGM2MmUxNjhmZS9maWxlLWN3bWh1RUZ4RDAucG5nIiBhbHQ9Ik5ldHdvcmsgYW5kIHRva2VuIHNlbGVjdGlvbiBpbnRlcmZhY2UiIC8+CiAgPC9GcmFtZT4KPC9TdGVwPgoKPFN0ZXAgdGl0bGU9IkVudGVyIGFtb3VudCBhbmQgYnJpZGdlIj4KICBFbnRlciB0aGUgdG9rZW4gYW1vdW50IHlvdSB3YW50IHRvIGRlcG9zaXQgYW5kIGNsaWNrICoqQnJpZGdlKiouCiAgCiAgPEZyYW1lPgogICAgPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3ZGZmMjY2ODI4YTY2YmJlY2YwYmZmL2ZpbGUtMzVGZHd0MGpaQy5wbmciIGFsdD0iVG9rZW4gYW1vdW50IGlucHV0IHdpdGggQnJpZGdlIGJ1dHRvbiIgLz4KICA8L0ZyYW1lPgo8L1N0ZXA+Cgo8U3RlcCB0aXRsZT0iQ29uZmlybSB0cmFuc2FjdGlvbiI+CiAgQ29uZmlybSB0aGUgdHJhbnNhY3Rpb24gaW4geW91ciBjb25uZWN0ZWQgd2FsbGV0IHRvIGNvbXBsZXRlIHlvdXIgZGVwb3NpdC4KICAKICA8RnJhbWU+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODdlMDQ2MjY4MjhhNjZiYmVjZjBjMGIvZmlsZS1Dejc4MWJkeWhCLnBuZyIgYWx0PSJXYWxsZXQgY29uZmlybWF0aW9uIGRpYWxvZyBmb3IgZGVwb3NpdCB0cmFuc2FjdGlvbiIgLz4KICA8L0ZyYW1lPgogIAogIDxDaGVjaz4KICAgIE9uY2UgdGhlIHRyYW5zYWN0aW9uIGlzIGNvbXBsZXRlLCB5b3VyIHRva2VucyB3aWxsIGFwcGVhciBpbiB5b3VyIHdhbGxldC4KICA8L0NoZWNrPgo8L1N0ZXA+CjwvU3RlcHM+Cgo8Tm90ZT4KRGVwb3NpdHMgdHlwaWNhbGx5IGNvbXBsZXRlIHdpdGhpbiBhIGZldyBtaW51dGVzLCBidXQgcHJvY2Vzc2luZyB0aW1lcyBtYXkgdmFyeSBkZXBlbmRpbmcgb24gbmV0d29yayBjb25nZXN0aW9uLgo8L05vdGU+Cg==",
    "lastUpdated": "2025-09-02T19:36:10.151Z"
  },
  {
    "sourceFile": "learn/deposits-withdrawals/b3-token.mdx",
    "sourceHash": "ClRoZSBCMyB0b2tlbiBpcyB0aGUgZW5naW5lIHBvd2VyaW5nIHRoZSBPcGVuIEdhbWluZyBlY29zeXN0ZW0sIGRlc2lnbmVkIHRvIGdyb3csIHNjYWxlIGFuZCB0cmFuc2Zvcm0gZ2FtaW5nIGJ5IGVtcG93ZXJpbmcgcGxheWVycywgZ2FtZSBkZXZlbG9wZXJzLCBhbmQgaG9sZGVycy4KCiMjIEZvciBQbGF5ZXJzCgotIFN0YWtlICRCMyB0byBlYXJuIHBhc3NpdmUgcmV3YXJkcywgcGFydGljaXBhdGUgaW4gU3Rha2UgdG8gV2luIGdhbWVzLCBhbmQgcmVjZWl2ZSBleHBvc3VyZSB0byBmdXR1cmUgQjMgR2FtZWNoYWlucy4KLSBVc2UgJEIzIHRvIGZ1bmQgJiBwdWJsaXNoIHRoZSBnYW1lcyB5b3UgYmVsaWV2ZSBpbiBhbmQgZWFybiByZXdhcmRzLgotIEdldCBlYXJseSBhY2Nlc3MgdG8gZ2FtZXMgYW5kIG5ldyBmZWF0dXJlcyBvbiBCU01OVC4KLSBQYXJ0aWNpcGF0ZSBpbiBnb3Zlcm5hbmNlIHRvIGRpcmVjdGx5IGltcGFjdCB0aGUgZnV0dXJlIG9mIHRoZSBCMyBlY29zeXN0ZW0uCgo8RnJhbWU+CjxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4NzkwNzMzMWZkMmUzMTg0YjVjMzA2OS9maWxlLXFpcTVBZTQxSkEucG5nIiBhbHQ9IlBsYXllciBiZW5lZml0cyBpbmZvZ3JhcGhpYyBzaG93aW5nIHN0YWtpbmcgcmV3YXJkcyBhbmQgZ2FtZSBhY2Nlc3MiIC8+CjwvRnJhbWU+CgojIyBGb3IgR2FtZSBEZXZlbG9wZXJzCgotIEFwcGx5IGFuZCByZWNlaXZlIGZ1bmRpbmcgdG8gZGV2ZWxvcCBhbmQgc2NhbGUgeW91ciBnYW1lLgotIEVhcm4gcmVmZXJyYWwgcmV3YXJkcyBhY3Jvc3MgYWxsIHBsYXllcnMgb24gYW55IEdhbWVjaGFpbi4KLSBSZWNlaXZlIGZ1dHVyZSBhaXJkcm9wcyBmcm9tIGluZnJhc3RydWN0dXJlIHBhcnRuZXJzLgoKPEZyYW1lPgo8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2hlbHBzY291dC5uZXQvZG9jcy9hc3NldHMvNjg1MzA2YjcyZTA1NTAyNzdhYTkyNTBlL2ltYWdlcy82ODc5MDc2YTcyODljYzRmYmFhMmNhNTMvZmlsZS1aWFpEejRucXY5LnBuZyIgYWx0PSJEZXZlbG9wZXIgYmVuZWZpdHMgc2hvd2luZyBmdW5kaW5nIGFuZCByZXdhcmRzIiAvPgo8L0ZyYW1lPgoKIyMgVGhlIEZseXdoZWVsIGluIE1vdGlvbgoKKlBsYXllcnMgU3Rha2UgYW5kIFNwZW5kICRCMyDihpIgRGV2ZWxvcGVycyBMYXVuY2ggR2FtZSBDaGFpbnMg4oaSIFNldHRsZW1lbnQgRmVlcyBHZW5lcmF0ZSBSZXdhcmRzIOKGkiBNb3JlIFZhbHVlIGlzIEFkZGVkIHRvICRCMy4qCgpUaGlzIGN5Y2xlIGVuc3VyZXMgc3VzdGFpbmFibGUgZ3Jvd3RoLCBtYWtpbmcgJCoqQjMqKiB0aGUgaHViIG9mIG9uLWNoYWluIGdhbWluZy4KCjxJbmZvPgpBZGRpdGlvbmFsIHV0aWxpdGllcyBmb3IgJEIzIHdpbGwgYmUgYW5ub3VuY2VkIGFzIHRoZXkgYmVjb21lIGF2YWlsYWJsZS4KPC9JbmZvPgoKIyBUb2tlbm9taWNzCgotICoqVG9rZW4gbmFtZToqKiBCMyAoQmFzZSkKLSAqKkNoYWluOioqIEJhc2UKLSAqKlRvdGFsIFN1cHBseToqKiAxMDAsMDAwLDAwMCwwMDAKLSAqKkRlY2ltYWxzOioqIDE4CgojIyBEaXN0cmlidXRpb24gYW5kIEFsbG9jYXRpb24KCjxGcmFtZT4KPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9oZWxwc2NvdXQubmV0L2RvY3MvYXNzZXRzLzY4NTMwNmI3MmUwNTUwMjc3YWE5MjUwZS9pbWFnZXMvNjg3OTA3Y2E3Mjg5Y2M0ZmJhYTJjYTU2L2ZpbGUtSXpyTnZLaFRscy5wbmciIGFsdD0iVG9rZW4gZGlzdHJpYnV0aW9uIHBpZSBjaGFydCBzaG93aW5nIGFsbG9jYXRpb24gcGVyY2VudGFnZXMiIC8+CjwvRnJhbWU+CgojIyMgQ29tbXVuaXR5ICYgRWNvc3lzdGVtClRoaXMgYWxsb2NhdGlvbiBpcyB0byB0aGUgZ3Jvd3RoIG9mIHRoZSBCMyBlY29zeXN0ZW0gLSBmb3IgZ2FtZXJzLCBieSBnYW1lcnMuIEl0IGlzIHRvIGJ1aWxkIGFuIGVjb3N5c3RlbSBiZWxvbmdpbmcgdG8gdGhvc2Ugd2hvIHBsYXkgaW4gaXQ6IGFpcmRyb3BzLCB0b3VybmFtZW50cywgcGxheXRlc3RzLCBjb21tdW5pdHktbGVkIGdyYW50cywgcmVzZWFyY2ggJiBkZXZlbG9wbWVudCwgYW5kIG1hbnkgb3RoZXJzLgoKIyMjIEZvdW5kYXRpb24KVGhpcyBhbGxvY2F0aW9uIHdpbGwgc3VwcG9ydCB0aGUgUGxheWVyMSBGb3VuZGF0aW9uIGFzIGl0IGNvbnRyaWJ1dGVzIHRvIEIzIGFuZCBPcGVuIEdhbWluZydzIHZpc2lvbiBhbmQgYWRvcHRpb24sIGluY2x1ZGluZyBzdHJhdGVnaWMgZ3JhbnRzL3BhcnRuZXJzaGlwcywgbGVnYWwgYW5kIGNvbXBsaWFuY2UgbmVlZHMsIGF1ZGl0cywgYW5kIG90aGVyIG9wZXJhdGlvbmFsIGV4cGVuc2VzLgoKIyMjIFRlYW0gYW5kIEFkdmlzb3JzClRoaXMgYWxsb2NhdGlvbiBpcyBmb3IgY29yZSBjb250cmlidXRvcnMgKyAxOCBhZHZpc29ycyB3aG8gcmVwcmVzZW50IHRoZSBiZXN0IG9mIGJvdGggZ2FtaW5nIHdvcmxkcyAtIGZyb20gQUFBIHRvIHdlYjMuIEFsbCB0ZWFtIGFuZCBhZHZpc29ycyBhcmUgc3ViamVjdCB0byBhIDQteWVhciB2ZXN0aW5nIHNjaGVkdWxlOiAxLXllYXIgMjUlIGNsaWZmLCB3aXRoIG1vbnRobHkgdW5sb2NrcyB0aGVyZWFmdGVyLgoKIyMjIEludmVzdG9ycwpUaGlzIHBvcnRpb24gb2YgQjMgYWxsb2NhdGlvbiBpcyBmb3IgaW52ZXN0b3JzIHdobyBzdXBwb3J0ZWQgQjMncyBkZXZlbG9wbWVudCwgaW5jbHVkaW5nIDEwMCsgYW5nZWxzIHdobyBnYXRoZXJlZCBmcm9tIGV2ZXJ5IGNvcm5lciBvZiB0aGUgaW5kdXN0cnkgLSBnYW1pbmcsIHdlYjMsIGJyYW5kcywgaW5mcmFzdHJ1Y3R1cmUgLSB0byBzdXBwb3J0IGFuZCAqKkIqKjNsaWV2ZSoqIEIzJ3MgdmlzaW9uLiBBbGwgdGVhbSAmIGFkdmlzb3JzIGFyZSBzdWJqZWN0IHRvIGEgNC15ZWFyIHZlc3Rpbmcgc2NoZWR1bGU6IDEteWVhciAyNSUgY2xpZmYsIHdpdGggbW9udGhseSB1bmxvY2tzIHRoZXJlYWZ0ZXIuCgo8RnJhbWU+CjxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vaGVscHNjb3V0Lm5ldC9kb2NzL2Fzc2V0cy82ODUzMDZiNzJlMDU1MDI3N2FhOTI1MGUvaW1hZ2VzLzY4NzkwODg4MTNkOTUwNDA1ZWZmNmYyOC9maWxlLWtLVUowUDBobmMucG5nIiBhbHQ9IlZlc3Rpbmcgc2NoZWR1bGUgdmlzdWFsaXphdGlvbiIgLz4KPC9GcmFtZT4KCiMjIEhvdyB0byBBY2N1bXVsYXRlIEIzCgpZb3UgY2FuIGdldCBhZGRpdGlvbmFsICRCMyB0b2tlbnMgdGhyb3VnaCB2YXJpb3VzIG1ldGhvZHMsIHN1Y2ggYXM6CgotIFBsYXlpbmcgcGFydG5lciBnYW1lcywgd2lubmluZyB0b3VybmFtZW50cyBhbmQgY29tcGxldGluZyBpbi1nYW1lIHRhc2tzLgotIFBhcnRpY2lwYXRpbmcgaW4gY29tbXVuaXR5IGV2ZW50cyBhbmQgY2hhbGxlbmdlcy4KLSBTdGFraW5nIHlvdXIgZXhpc3RpbmcgdG9rZW5zIGZvciBhZGRpdGlvbmFsIHJld2FyZHMgYW5kIHBhcnRpY2lwYXRpbmcgaW4gU3Rha2UgdG8gV2luLgotIEVuZ2FnaW5nIHdpdGggcGFydG5lciBwbGF0Zm9ybXMgYW5kIHRoZWlyIGFjdGl2aXRpZXMuCgo8VGlwPgpUaGUgQjMgdG9rZW4gY3JlYXRlcyBhIHN1c3RhaW5hYmxlIGVjb3N5c3RlbSB3aGVyZSBhbGwgcGFydGljaXBhbnRzIC0gcGxheWVycywgZGV2ZWxvcGVycywgYW5kIHN0YWtlaG9sZGVycyAtIGJlbmVmaXQgZnJvbSB0aGUgZ3Jvd3RoIGFuZCBzdWNjZXNzIG9mIHRoZSBwbGF0Zm9ybS4KPC9UaXA+Cg==",
    "lastUpdated": "2025-09-02T19:36:10.153Z"
  },
  {
    "sourceFile": "data/profiles/index.mdx",
    "sourceHash": "CjxpbWcgc3JjPSIvaW1hZ2VzL3Byb2ZpbGVzLWJhbm5lci5qcGciIGFsdD0iQjMgUHJvZmlsZXMgQVBJIiBjbGFzc05hbWU9InctZnVsbCBoLWF1dG8gcm91bmRlZC0zeGwiIC8+Cgo8Q2FyZCB0aXRsZT0iRnJlZSBTb2NpYWwgUHJvZmlsZXMgQVBJIiBpY29uPSJ1c2VyIiBocmVmPSIvZGF0YS9wcm9maWxlcy9pbmRleCI+CiAgQ2hlY2sgb3V0IHRoZSBwcm9maWxlcyBBUEkgcmVmZXJlbmNlCjwvQ2FyZD4KCiMjIE92ZXJ2aWV3CgpUaGUgQjMgUHJvZmlsZXMgc2VydmljZSBzZXJ2ZXMgYXMgYSBkYXRhIEFQSSBmb3IgcmVzb2x2aW5nIGRlY2VudHJhbGl6ZWQgdXNlciBpZGVudGl0aWVzIGFjcm9zcyB0aGUgRVZNIGVjb3N5c3RlbS4gSXQgYWdncmVnYXRlcyBwcm9maWxlIGRhdGEgZnJvbSBtdWx0aXBsZSBzb3VyY2VzIGFuZCBwcm90b2NvbHMsIHByb3ZpZGluZyBkZXZlbG9wZXJzIHdpdGggYSBzaW5nbGUgQVBJIGVuZHBvaW50IHRvIGFjY2VzcyBjb21wcmVoZW5zaXZlIHVzZXIgaW5mb3JtYXRpb24gYW5kIHNvY2lhbCBjb250ZXh0LgoKIyMgS2V5IEZlYXR1cmVzCgo8Q2FyZEdyb3VwIGNvbHM9ezJ9PgogIDxDYXJkIHRpdGxlPSJNdWx0aS1Tb3VyY2UgQWdncmVnYXRpb24iIGljb249Im5ldHdvcmstd2lyZWQiPgogICAgQ29tYmluZXMgZGF0YSBmcm9tIEJhc2VtZW50LCBFTlMsIFRoaXJkd2ViIFNvY2lhbCwgYW5kIG90aGVyIFdlYjMgaWRlbnRpdHkgcHJvdmlkZXJzCiAgPC9DYXJkPgogIDxDYXJkIHRpdGxlPSJTb2NpYWwgSWRlbnRpdHkgSW50ZWdyYXRpb24iIGljb249InVzZXJzIj4KICAgIEZldGNoZXMgc29jaWFsIHByb2ZpbGVzIGZyb20gRU5TLCBMZW5zIFByb3RvY29sLCBhbmQgRmFyY2FzdGVyIG5ldHdvcmtzCiAgPC9DYXJkPgogIDxDYXJkIHRpdGxlPSJJbnRlbGxpZ2VudCBDYWNoaW5nIiBpY29uPSJkYXRhYmFzZSI+CiAgICBVc2VzIENsb3VkZmxhcmUgS1Ygc3RvcmFnZSBmb3IgZWZmaWNpZW50IGRhdGEgY2FjaGluZyB3aXRoIGNvbmZpZ3VyYWJsZSBUVEwKICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9IlVzZXIgUHJlZmVyZW5jZXMiIGljb249ImdlYXIiPgogICAgQWxsb3dzIHVzZXJzIHRvIHNldCBwcmVmZXJyZWQgcHJvZmlsZSBzb3VyY2VzIHZpYSBjcnlwdG9ncmFwaGljIHNpZ25hdHVyZXMKICA8L0NhcmQ+CjwvQ2FyZEdyb3VwPgoKIyMgU3VwcG9ydGVkIERhdGEgU291cmNlcwoKLSBFTlMgKEV0aGVyZXVtIE5hbWUgU2VydmljZSkKLSBMZW5zIFByb3RvY29sCi0gRmFyY2FzdGVyCi0gQjMuSUQKLSBCYXNlbWVudCBwcm9maWxlcwoKIyMgQVBJIEVuZHBvaW50cwoKPE5vdGU+CltDaGVjayBvdXQgdGhlIEFQSSByZWZlcmVuY2VdKC9kYXRhL3Byb2ZpbGVzL2luZGV4KSBmb3IgbW9yZSBkZXRhaWxzLgo8L05vdGU+CgojIyMgUHJvZmlsZSBMb29rdXAKUmV0cmlldmUgYWdncmVnYXRlZCBwcm9maWxlIGluZm9ybWF0aW9uIGZvciBhbnkgd2FsbGV0IGFkZHJlc3Mgb3IgdXNlcm5hbWUuCgpgYGBiYXNoCkdFVCBodHRwczovL3Byb2ZpbGVzLmIzLmZ1bi8/YWRkcmVzcz0weDEyMzQ1Njc4OTBhYmNkZWYxMjM0NTY3ODkwYWJjZGVmMTIzNDU2NzgKR0VUIGh0dHBzOi8vcHJvZmlsZXMuYjMuZnVuLz9uYW1lPXZpdGFsaWsuZXRoCkdFVCBodHRwczovL3Byb2ZpbGVzLmIzLmZ1bi8/bmFtZT1zZWFuLmIzLmZ1bgpgYGAKCiMjIyBTZXQgUHJvZmlsZSBQcmVmZXJlbmNlcwpBbGxvdyB1c2VycyB0byBzcGVjaWZ5IHRoZWlyIHByZWZlcnJlZCBwcm9maWxlIHNvdXJjZSB0aHJvdWdoIGNyeXB0b2dyYXBoaWMgc2lnbmF0dXJlcy4KCmBgYGJhc2gKUE9TVCAvcHJlZmVyZW5jZQpgYGAKCiMjIyBDdXN0b20gRGlzcGxheSBOYW1lcwpFbmFibGUgdXNlcnMgdG8gc2V0IGN1c3RvbSBkaXNwbGF5IG5hbWVzIHRoYXQgb3ZlcnJpZGUgYWxsIG90aGVyIHNvdXJjZXMuCgpgYGBiYXNoClBPU1QgL2Rpc3BsYXktbmFtZQpgYGAKCiMjIFJlc3BvbnNlIEZvcm1hdAoKVGhlIHNlcnZpY2UgcmV0dXJucyBhIHVuaWZpZWQgcHJvZmlsZSBvYmplY3QgdGhhdCBjb21iaW5lcyBkYXRhIGZyb20gYWxsIHNvdXJjZXM6CgpgYGBqc29uCnsKICAibmFtZSI6ICJ2aXRhbGlrLmV0aCIsCiAgImFkZHJlc3MiOiAiMHgxMjM0NTY3ODkwYWJjZGVmMTIzNDU2Nzg5MGFiY2RlZjEyMzQ1Njc4IiwKICAiYXZhdGFyIjogImh0dHBzOi8vZXhhbXBsZS5jb20vYXZhdGFyLmpwZyIsCiAgImJpbyI6ICJFdGhlcmV1bSBjby1mb3VuZGVyIiwKICAiZGlzcGxheU5hbWUiOiAiVml0YWxpayBCdXRlcmluIiwKICAicHJvZmlsZXMiOiBbCiAgICB7CiAgICAgICJ0eXBlIjogImVuc2RhdGEiLAogICAgICAiYWRkcmVzcyI6ICIweDEyMy4uLiIsCiAgICAgICJuYW1lIjogInZpdGFsaWsuZXRoIiwKICAgICAgImF2YXRhciI6ICJodHRwczovLy4uLiIsCiAgICAgICJiaW8iOiBudWxsLAogICAgICAiZGlzcGxheU5hbWUiOiBudWxsCiAgICB9LAogICAgewogICAgICAidHlwZSI6ICJ0aGlyZHdlYi1mYXJjYXN0ZXIiLAogICAgICAiYWRkcmVzcyI6ICIweDEyMy4uLiIsCiAgICAgICJuYW1lIjogInZpdGFsaWsiLAogICAgICAiYXZhdGFyIjogImh0dHBzOi8vLi4uIiwKICAgICAgImJpbyI6ICJFdGhlcmV1bSBjby1mb3VuZGVyIiwKICAgICAgImRpc3BsYXlOYW1lIjogIlZpdGFsaWsgQnV0ZXJpbiIKICAgIH0KICBdCn0KYGBgCgojIyBVc2UgQ2FzZXMKCjxDYXJkR3JvdXAgY29scz17MX0+CiAgPENhcmQgdGl0bGU9IkVuaGFuY2VkIFdhbGxldCBBdXRoZW50aWNhdGlvbiIgaWNvbj0ic2hpZWxkLWNoZWNrIj4KICAgIFByb3ZpZGUgcmljaCBjb250ZXh0IGFib3V0IHVzZXJzIGR1cmluZyB3YWxsZXQgY29ubmVjdGlvbiwgc2hvd2luZyB0aGVpciBzb2NpYWwgaWRlbnRpdHkgYW5kIFdlYjMgcmVwdXRhdGlvbiBhY3Jvc3MgcGxhdGZvcm1zLgogIDwvQ2FyZD4KICA8Q2FyZCB0aXRsZT0iU29jaWFsIEdhbWluZyBJbnRlZ3JhdGlvbiIgaWNvbj0iZ2FtZXBhZCI+CiAgICBEaXNwbGF5IGNvbXByZWhlbnNpdmUgcGxheWVyIHByb2ZpbGVzIGluIGdhbWVzLCBpbmNsdWRpbmcgRU5TIG5hbWVzLCBzb2NpYWwgaGFuZGxlcywgYW5kIGNyb3NzLXBsYXRmb3JtIGlkZW50aXRpZXMuCiAgPC9DYXJkPgogIDxDYXJkIHRpdGxlPSJEZUZpIFVzZXIgRXhwZXJpZW5jZSIgaWNvbj0iY29pbnMiPgogICAgRW5oYW5jZSB0cmFkaW5nIGludGVyZmFjZXMgYnkgc2hvd2luZyB0cmFkZXIgaWRlbnRpdGllcyBmcm9tIExlbnMsIEZhcmNhc3RlciwgYW5kIEVOUyBpbnN0ZWFkIG9mIGp1c3Qgd2FsbGV0IGFkZHJlc3Nlcy4KICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9IkNvbW11bml0eSBNYW5hZ2VtZW50IiBpY29uPSJ1c2Vycy1nZWFyIj4KICAgIEJ1aWxkIGJldHRlciBjb21tdW5pdHkgdG9vbHMgYnkgYWdncmVnYXRpbmcgdXNlciBpZGVudGl0aWVzIGZyb20gbXVsdGlwbGUgV2ViMyBzb2NpYWwgcGxhdGZvcm1zLgogIDwvQ2FyZD4KPC9DYXJkR3JvdXA+CgoKIyMgRXhhbXBsZSBVc2FnZQoKIyMjIEJhc2ljIFByb2ZpbGUgTG9va3VwCgpgYGBqYXZhc2NyaXB0Ci8vIEZldGNoIHByb2ZpbGUgYnkgYWRkcmVzcwpjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL3Byb2ZpbGVzLmIzLmZ1bi8/YWRkcmVzcz0weDEyMy4uLicpOwpjb25zdCBwcm9maWxlID0gYXdhaXQgcmVzcG9uc2UuanNvbigpOwoKY29uc29sZS5sb2cocHJvZmlsZS5kaXNwbGF5TmFtZSk7IC8vICJWaXRhbGlrIEJ1dGVyaW4iCmNvbnNvbGUubG9nKHByb2ZpbGUucHJvZmlsZXMubGVuZ3RoKTsgLy8gTnVtYmVyIG9mIHNvdXJjZXMgZm91bmQKYGBgCgojIyMgRU5TIE5hbWUgUmVzb2x1dGlvbgoKYGBgamF2YXNjcmlwdAovLyBGZXRjaCBwcm9maWxlIGJ5IEVOUyBuYW1lCmNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vcHJvZmlsZXMuYjMuZnVuLz9uYW1lPXZpdGFsaWsuZXRoJyk7CmNvbnN0IHByb2ZpbGUgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7Cgpjb25zb2xlLmxvZyhwcm9maWxlLmFkZHJlc3MpOyAvLyBSZXNvbHZlZCB3YWxsZXQgYWRkcmVzcwpjb25zb2xlLmxvZyhwcm9maWxlLmF2YXRhcik7IC8vIEVOUyBhdmF0YXIgVVJMCmBgYAoKIyMjIFNldHRpbmcgVXNlciBQcmVmZXJlbmNlcwoKYGBgamF2YXNjcmlwdAovLyBTZXQgcHJlZmVycmVkIHByb2ZpbGUgc291cmNlIHdpdGggc2lnbmF0dXJlCmNvbnN0IG1lc3NhZ2UgPSBgU2V0UHJvZmlsZVByZWZlcmVuY2U6JHthZGRyZXNzfTp0aGlyZHdlYi1mYXJjYXN0ZXI6JHt0aW1lc3RhbXB9YDsKY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgd2FsbGV0LnNpZ25NZXNzYWdlKG1lc3NhZ2UpOwoKYXdhaXQgZmV0Y2goJ2h0dHBzOi8vcHJvZmlsZXMuYjMuZnVuL3ByZWZlcmVuY2UnLCB7CiAgbWV0aG9kOiAnUE9TVCcsCiAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sCiAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAga2V5OiBhZGRyZXNzLAogICAgcHJlZmVycmVkVHlwZTogJ3RoaXJkd2ViLWZhcmNhc3RlcicsCiAgICBzaWduYXR1cmUsCiAgICBzaWduZXI6IGFkZHJlc3MsCiAgICB0aW1lc3RhbXAKICB9KQp9KTsKYGBgCgojIyBQZXJmb3JtYW5jZSAmIENhY2hpbmcKCi0gKipDYWNoZSBEdXJhdGlvbioqOiAxIGhvdXIgZm9yIHByb2ZpbGUgZGF0YQotICoqRnJlc2ggRGF0YSoqOiBVc2UgYD9mcmVzaD10cnVlYCB0byBieXBhc3MgY2FjaGUKLSAqKkdsb2JhbCBDRE4qKjogUG93ZXJlZCBieSBDbG91ZGZsYXJlJ3MgZWRnZSBuZXR3b3JrCi0gKipLViBTdG9yYWdlKio6IEVmZmljaWVudCBrZXktdmFsdWUgc3RvcmFnZSBmb3IgcHJlZmVyZW5jZXMKCiMjIFJhdGUgTGltaXRzCgpUaGUgc2VydmljZSBpbmhlcml0cyBDbG91ZGZsYXJlJ3MgYnVpbHQtaW4gRERvUyBwcm90ZWN0aW9uIGFuZCByYXRlIGxpbWl0aW5nLiBGb3IgaGlnaC12b2x1bWUgYXBwbGljYXRpb25zLCBjb25zaWRlciBpbXBsZW1lbnRpbmcgY2xpZW50LXNpZGUgY2FjaGluZyBvciBjb250YWN0IHRoZSBCMyB0ZWFtIGZvciBlbnRlcnByaXNlIGFjY2Vzcy4KCiMjIEJ1aWxkaW5nIG9uY2hhaW4gbWFkZSBlYXN5CjxOb3RlPgpbQ2hlY2sgb3V0IHRoZSBBUEkgcmVmZXJlbmNlXSgvZGF0YS9wcm9maWxlcy9pbmRleCkgZm9yIG1vcmUgZGV0YWlscy4KPC9Ob3RlPgoKPENhcmRHcm91cCBjb2xzPXsyfT4KICA8Q2FyZCB0aXRsZT0iQjMgRGF0YSBBUEkiIGhyZWY9Ii9kYXRhL2FwaS1yZWZlcmVuY2UvaW50cm9kdWN0aW9uIj4KICAgIENvbXByZWhlbnNpdmUgYmxvY2tjaGFpbiBkYXRhIGFuZCBhbmFseXRpY3MKICA8L0NhcmQ+CiAgPENhcmQgdGl0bGU9IkIzIFNESyIgaHJlZj0iL3Nkay9pbnRyb2R1Y3Rpb24iPgogICAgQjMgU0RLIGZvciBjcm9zcy1jaGFpbiBvcGVyYXRpb25zIGFuZCBnbG9iYWwgYWNjb3VudCBhdXRoZW50aWNhdGlvbgogIDwvQ2FyZD4KPC9DYXJkR3JvdXA+Cg==",
    "lastUpdated": "2025-09-02T19:36:10.156Z"
  },
  {
    "sourceFile": "data/api-reference/introduction.mdx",
    "sourceHash": "Ci0gQXZhaWxhYmxlIHRvIGJ1aWxkZXJzIGZvciBmcmVlLgotIEludGVsbGlnZW50IG11bHRpLWNoYWluIHJvdXRpbmcuCi0gQ2FjaGVkIGF0IHRoZSBlZGdlIGZvciBzcGVlZC4KCgo8Q2FyZCBocmVmPSIvZGF0YS9hcGktcmVmZXJlbmNlL2Jsb2Nrc2NvdXQvZ2V0LXRyYW5zYWN0aW9ucyIgaWNvbj0iZGF0YWJhc2UiIGhvcml6b250YWwgYXJyb3c9InRydWUiPgogIEJyb3dzZSB0aGUgUkVTVCBBUEkgcmVmZXJlbmNlLgo8L0NhcmQ+CgojIyBEYXRhIFNvdXJjZXMgJiBJbnRlbGxpZ2VuY2UKCjxTdGVwcz4KICA8U3RlcCB0aXRsZT0iQmxvY2tzY291dCBJbnRlZ3JhdGlvbiI+CiAgICBEaXJlY3QgYWNjZXNzIHRvIGluZGV4ZWQgYmxvY2tjaGFpbiBkYXRhIGZyb20gQmxvY2tzY291dCBleHBsb3JlcnMgYWNyb3NzIGFsbCBCMyBjaGFpbnMsIHByb3ZpZGluZyB0cmFuc2FjdGlvbiBoaXN0b3J5LCBjb250cmFjdCBpbnRlcmFjdGlvbnMsIGFuZCBibG9jayBkYXRhLgogIDwvU3RlcD4KICA8U3RlcCB0aXRsZT0iVGhpcmR3ZWIgRGF0YSBMYXllciI+CiAgICBFbmhhbmNlZCB3aXRoIFRoaXJkd2ViJ3MgcG93ZXJmdWwgZGF0YSBpbmZyYXN0cnVjdHVyZSBmb3IgTkZUIG1ldGFkYXRhLCBjb250cmFjdCBBQklzLCBhbmQgc21hcnQgY29udHJhY3QgYW5hbHl0aWNzLgogIDwvU3RlcD4KICA8U3RlcCB0aXRsZT0iSW50ZWxsaWdlbnQgUm91dGluZyI+CiAgICBPdXIgQVBJIGF1dG9tYXRpY2FsbHkgcm91dGVzIHJlcXVlc3RzIHRvIHRoZSBvcHRpbWFsIGRhdGEgc291cmNlIGFuZCBjaGFpbiwgZW5zdXJpbmcgZmFzdCByZXNwb25zZSB0aW1lcyBhbmQgZGF0YSBhY2N1cmFjeS4KICA8L1N0ZXA+CiAgPFN0ZXAgdGl0bGU9IlVuaWZpZWQgRWNvc3lzdGVtIFZpZXciPgogICAgTWVyZ2VkIGRhdGEgZnJvbSBhbGwgQjMgZWNvc3lzdGVtIGNoYWlucyBwcm92aWRlcyBhIGNvbXByZWhlbnNpdmUgdmlldyBvZiBjcm9zcy1jaGFpbiBhY3Rpdml0aWVzIGFuZCBhc3NldHMuCiAgPC9TdGVwPgo8L1N0ZXBzPgoKIyMgQXV0aGVudGljYXRpb24KCk5vIGF1dGhlbnRpY2F0aW9uIHJlcXVpcmVkIGZvciBwdWJsaWMgZW5kcG9pbnRzLiBTaW1wbHkgbWFrZSByZXF1ZXN0cyB0byBzdGFydCBhY2Nlc3NpbmcgQjMgZWNvc3lzdGVtIGRhdGEgaW1tZWRpYXRlbHkuCgogPGlmcmFtZQogICBjbGFzc05hbWU9InctZnVsbCBhc3BlY3QtdmlkZW8gcm91bmRlZC14bCIKICAgIHNyYz0iaHR0cHM6Ly9jdXN0b21lci1nZzZxczdubTV1ZTk0dDY0LmNsb3VkZmxhcmVzdHJlYW0uY29tLzcyZmVlMjJkMzE4NTcxMDgzYzI4YWUyMjUwM2M3NWRiL2lmcmFtZT9tdXRlZD10cnVlJmxvb3A9dHJ1ZSZhdXRvcGxheT10cnVlJnBvc3Rlcj1odHRwcyUzQSUyRiUyRmN1c3RvbWVyLWdnNnFzN25tNXVlOTR0NjQuY2xvdWRmbGFyZXN0cmVhbS5jb20lMkY3MmZlZTIyZDMxODU3MTA4M2MyOGFlMjI1MDNjNzVkYiUyRnRodW1ibmFpbHMlMkZ0aHVtYm5haWwuanBnJTNGdGltZSUzRCUyNmhlaWdodCUzRDYwMCIKICAgIHRpdGxlPSJCMyBEYXRhIEFQSSIKICAgIGZyYW1lQm9yZGVyPSIwIgogIGFsbG93PSJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIgogIGFsbG93RnVsbFNjcmVlbgogID48L2lmcmFtZT4K",
    "lastUpdated": "2025-09-02T19:36:10.160Z"
  },
  {
    "sourceFile": "bondkit/sdk/reference.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.163Z"
  },
  {
    "sourceFile": "bondkit/concepts/targets.mdx",
    "sourceHash": "CiMjIFRhcmdldCBhbW91bnQKCi0gYHRhcmdldEFtb3VudGAgaXMgdGhlIHF1b3Rl4oCRYXNzZXQgdGhyZXNob2xkIHRoYXQgZW5hYmxlcyBtaWdyYXRpb24uCi0gU2V0IGF0IGNyZWF0aW9uOyBkZW5vbWluYXRlZCBpbiB0aGUgcXVvdGUgYXNzZXQgKEVUSCBvciBhbiBhbGxvd2VkIEVSQzIwKS4KLSBUaGUgYm9uZGluZyBwaGFzZSBlbmRzIG9uY2UgdG90YWwgcmFpc2VkIHJlYWNoZXMgdGhlIHRhcmdldCAoZXhjZXNzIGNvbnRyaWJ1dGlvbnMgYXJlIHJlZnVuZGVkKS4KCiMjIFdobyBjYW4gbWlncmF0ZQoKLSBPbmx5IHRoZSB0b2tlbiBvd25lci9jcmVhdG9yIChtaWdyYXRpb24gYWRtaW4pIGNhbiBjYWxsIGBtaWdyYXRlVG9EZXgoKWAuCgojIyBXaGF0IGhhcHBlbnMgYXQgbWlncmF0aW9uCgotIFNwbGl0IG9mIGFjY3VtdWxhdGVkIHF1b3RlIGFzc2V0OgogIC0gUG9ydGlvbiB0byBgZmVlUmVjaXBpZW50YCwgYmFzZWQgb24gYGxwU3BsaXRSYXRpb0ZlZVJlY2lwaWVudEJwc2AuCiAgLSBSZW1haW5kZXIgdXNlZCBhcyBsaXF1aWRpdHkgYWxvbmdzaWRlIHRva2VucyByZXNlcnZlZCBmb3IgTFAuCi0gRm9yIFVuaXN3YXAgdjQgbWlncmF0aW9uLCB0aGUgY29udHJhY3QgY29tcHV0ZXMgYHNxcnRQcmljZVg5NmAgdG8gaW5pdGlhbGl6ZSB0aGUgcG9vbC4KLSBMaXF1aWRpdHkgaXMgYWRkZWQgdG8gdGhlIHY0IHBvb2wgd2l0aCBhcHByb3ByaWF0ZSBzYWZlZ3VhcmRzOyBMUCB0b2tlbnMgb3IgcG9zaXRpb25zIGFyZSBoYW5kbGVkIHBlciB2NCBzZW1hbnRpY3MsIHdpdGggb3duZXJzaGlwIGVmZmVjdGl2ZWx5IGJ1cm5lZC9yZW5vdW5jZWQgZm9yIGRlY2VudHJhbGl6YXRpb24uCi0gT3duZXJzaGlwIGlzIHJlbm91bmNlZCBpbW1lZGlhdGVseSB0byBmaW5hbGl6ZSBkZWNlbnRyYWxpemF0aW9uLgoKIyMgUG9zdOKAkW1pZ3JhdGlvbgoKLSBCb25kaW5n4oCRcGhhc2UgdHJhZGluZyBpcyBkaXNhYmxlZC4KLSBUb2tlbiBiZWhhdmVzIGFzIGEgc3RhbmRhcmQgRVJDMjAgd2l0aCBERVjigJFiYXNlZCBwcmljZSBkaXNjb3ZlcnkuCgo8Tm90ZT4KTmV0d29ya3MgJiBhZGRyZXNzZXMgKGZhY3RvcnksIHY0IHBvb2wgbWFuYWdlciwgaG9va3MpIGFyZSBsaXN0ZWQgb24gdGhlIE5ldHdvcmtzIHBhZ2UuCjwvTm90ZT4KCgo=",
    "lastUpdated": "2025-09-02T19:36:10.166Z"
  },
  {
    "sourceFile": "bondkit/concepts/pricing.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.169Z"
  },
  {
    "sourceFile": "bondkit/concepts/bonding-phase.mdx",
    "sourceHash": "",
    "lastUpdated": "2025-09-02T19:36:10.172Z"
  },
  {
    "sourceFile": "bondkit/guides/set-aggressiveness.mdx",
    "sourceHash": "CiMjIEd1aWRhbmNlCgotIDDigJMyMDogZ2VudGxlOyBlYXJseSBhbmQgbGF0ZSBidXllcnMgcmVjZWl2ZSBzaW1pbGFyIGFtb3VudHMgcGVyIHVuaXQKLSAzMOKAkzYwOiBiYWxhbmNlZDsgbW9kZXJhdGUgcHJpY2UgcmlzZSwgdHlwaWNhbCBmb3IgZ2VuZXJhbCBsYXVuY2hlcwotIDcw4oCTMTAwOiBzdGVlcDsgc3Ryb25nIGVhcmx5IGFkdmFudGFnZSwgZmFzdGVyIHByaWNlIGVzY2FsYXRpb24KCiMjIFJ1bGUgb2YgdGh1bWIKCi0gU21hbGxlciB0YXJnZXRzIG9yIHRpZ2h0IGNvbW11bml0aWVzOiBsZWFuIGhpZ2hlciAoNTDigJM4MCkKLSBMYXJnZXIgdGFyZ2V0cyBvciBicm9hZGVyIGF1ZGllbmNlczogbGVhbiBsb3dlciAoMjDigJM1MCkKCiMjIEV4YW1wbGUKCmBgYHRzCmNvbnN0IGNvbmZpZyA9IHsKICBhZ2dyZXNzaXZlbmVzc0ZhY3RvcjogMzUsCiAgLy8gLi4ub3RoZXIgcGFyYW1zCn07CmBgYAoKPE5vdGU+CmBleHBvbmVudCA9IDEgLyAoMSArIGFnZ3Jlc3NpdmVuZXNzRmFjdG9yLzEwMClgLiBIaWdoZXIgYWdncmVzc2l2ZW5lc3MgaW5jcmVhc2VzIGN1cnZlIHN0ZWVwbmVzcyBhbmQgcmVkdWNlcyB0b2tlbnMgcGVyIHVuaXQgbGF0ZXIgaW4gYm9uZGluZy4KPC9Ob3RlPgoKCg==",
    "lastUpdated": "2025-09-02T19:36:10.176Z"
  },
  {
    "sourceFile": "bondkit/guides/est-migration-price.mdx",
    "sourceHash": "CiMjIE92ZXJ2aWV3CgpNaWdyYXRpb24gaW5pdGlhbGl6ZXMgYSBVbmlzd2FwIHY0IHBvb2wuIFRoZSBjb250cmFjdCBjb21wdXRlcyBgc3FydFByaWNlWDk2YCBmcm9tIGJvbmRpbmcgc3RhdGUuCgojIyBQcmFjdGljYWwgYXBwcm9hY2gKCi0gVXNlIGJvbmRpbmcgcmVhZHMgdG8gYXBwcm94aW1hdGUgcHJpY2UgbmVhciB0aGUgdGFyZ2V0OgotIGBnZXRDdXJyZW50Qm9uZGluZ0N1cnZlUHJpY2VQZXJUb2tlbigpYAotIGBnZXRCb25kaW5nUHJvZ3Jlc3MoKWAKCiMjIENvbnNpZGVyYXRpb25zCgotIFRoZSBmaW5hbCBzcGxpdCBhbmQgbGlxdWlkaXR5IGFtb3VudCBjYW4gYWZmZWN0IGluaXRpYWwgdGlja3MuCi0gU2xpcHBhZ2UgcHJvdGVjdGlvbnMgYXJlIGFwcGxpZWQgd2hlbiBhZGRpbmcgbGlxdWlkaXR5LgotIEZvciBFUkMyMCBxdW90ZSBhc3NldHMsIGVuc3VyZSBwYWlyIGFuZCBkZWNpbWFscyBhcmUgYWNjb3VudGVkIGZvciB3aGVuIGNvbnZlcnRpbmcgdG8gYHNxcnRQcmljZVg5NmAuCgo8Tm90ZT4KRXhhY3QgaW5pdGlhbGl6YXRpb24gbWF0aCBpcyBoYW5kbGVkIG9uLWNoYWluLiBVc2UgcmVhZHMgZm9yIFVJIGVzdGltYXRpb247IHRyZWF0IGZpbmFsIG9uLWNoYWluIGluaXRpYWxpemF0aW9uIGFzIHNvdXJjZSBvZiB0cnV0aC4KPC9Ob3RlPgoKCg==",
    "lastUpdated": "2025-09-02T19:36:10.179Z"
  },
  {
    "sourceFile": "bondkit/guides/choose-quote-asset.mdx",
    "sourceHash": "CiMjIE92ZXJ2aWV3CgpCb25kS2l0IHN1cHBvcnRzIGJvbmRpbmcgYWdhaW5zdCBFVEggb3IgYW4gYWxsb3dlZCBFUkMyMCAoZS5nLiwgQjMpLiBZb3VyIGNob2ljZSBpbXBhY3RzIFVYLCBpbnRlZ3JhdGlvbnMsIGFuZCBsaXF1aWRpdHkgYXQgbWlncmF0aW9uLgoKIyMgV2hlbiB0byB1c2UgRVRICgotIEJyb2FkIGFjY2Vzc2liaWxpdHk7IG1vc3QgdXNlcnMgaG9sZCBFVEggb24gQmFzZQotIFNpbXBsZXIgVVggKG5vIHByaW9yIGFwcHJvdmFscykKLSBEaXJlY3QgRVRIIGxpcXVpZGl0eSBhdCBtaWdyYXRpb24KCiMjIFdoZW4gdG8gdXNlIGFuIEVSQzIwIChlLmcuLCBCMykKCi0gQWxpZ25zIHdpdGggYW4gZXhpc3RpbmcgdG9rZW4gZWNvbm9teQotIENhbiBib290c3RyYXAgZGVlcGVyIHRva2Vu4oCRdG9rZW4gcGFpcnMgYXQgbWlncmF0aW9uCi0gUmVxdWlyZXMgYXBwcm92YWxzIGJlZm9yZSBidXlzL3NlbGxzCgojIyBPcGVyYXRpb25hbCBkaWZmZXJlbmNlcwoKLSA1JSBmZWUgb24gYnV5cyBhbmQgc2VsbHMgZm9yIGJvdGggRVRIIGFuZCBFUkMyMAotIEVSQzIwIGZsb3dzIHJlcXVpcmUgYGFwcHJvdmVgIGJlZm9yZSBjdXJ2ZSBpbnRlcmFjdGlvbnMKLSBNaWdyYXRpb24gcGFpcnMgYXJlIGNyZWF0ZWQgYWdhaW5zdCBXRVRIIG9yIHRoZSBjaG9zZW4gRVJDMjAKCjxOb3RlPgpDb25maXJtIHRoZSBhbGxvd2Vk4oCRbGlzdCBmb3IgRVJDMjAgcXVvdGUgYXNzZXRzIHdpdGggdGhlIHRlYW0uIEJ5IGRlZmF1bHQgb25seSBzcGVjaWZpYyBhc3NldHMgbWF5IGJlIGVuYWJsZWQuCjwvTm90ZT4KCgo=",
    "lastUpdated": "2025-09-02T19:36:10.182Z"
  }
]
